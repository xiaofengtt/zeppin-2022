USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_PREPARE_IMPORT_DATA @IN_INPUT_MAN INT
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_BATCH_ID INT, @V_BATCH_COUNT INT, @V_SUCCESS_COUNT INT, @V_FAILED_COUNT INT

    BEGIN TRY

    IF EXISTS(SELECT 1 FROM IMPORT_BATCH)
        SELECT @V_BATCH_ID = MAX(BATCH_ID) + 1 FROM IMPORT_BATCH
    ELSE
        SET @V_BATCH_ID = 1

    BEGIN TRANSACTION

    --产品验证
    UPDATE IMPORT_DATA SET FIELD2_VALUE = B.PRODUCT_ID
        FROM IMPORT_DATA A, INTRUST..TPRODUCT B
        WHERE A.[项目名称] = B.PRODUCT_NAME
            AND A.MODULE_ID = '20199' AND A.STATUS = 1 AND A.INSERT_MAN = @IN_INPUT_MAN
    UPDATE IMPORT_DATA SET STATUS = -2, SUMMARY = '产品：' + [项目名称] + '不存在，请查阅！'
        WHERE MODULE_ID = '20199' AND STATUS = 1 AND INSERT_MAN = @IN_INPUT_MAN AND ISNULL(FIELD2_VALUE,0) = 0

    --1.合同验证
    UPDATE IMPORT_DATA SET FIELD1_VALUE = B.CUST_ID, BATCH_ID = @V_BATCH_ID
        FROM IMPORT_DATA A, INTRUST..TCONTRACT B, TCUSTOMERS C
            WHERE A.[合同序号] = B.CONTRACT_SUB_BH AND B.CUST_ID = C.CUST_ID
                AND A.MODULE_ID = '20199' AND A.STATUS = 1
                AND A.INSERT_MAN = @IN_INPUT_MAN

    UPDATE IMPORT_DATA SET STATUS = -2, SUMMARY = '合同编号：' + [合同序号] + '不存在，请查阅！'
        WHERE MODULE_ID = '20199' AND STATUS = 1 AND INSERT_MAN = @IN_INPUT_MAN AND ISNULL(FIELD1_VALUE,0) = 0

    --2.姓名验证
    UPDATE IMPORT_DATA SET STATUS = 2
        FROM IMPORT_DATA A, TCUSTOMERS B
            WHERE A.FIELD1_VALUE = B.CUST_ID AND A.[客户姓名] = B.CUST_NAME
                AND A.MODULE_ID = '20199' AND A.STATUS = 1 AND A.INSERT_MAN = @IN_INPUT_MAN

    UPDATE IMPORT_DATA SET STATUS = -2, SUMMARY = '客户名称：' + [客户姓名] + '不存在，请查阅！'
        FROM IMPORT_DATA A, TCUSTOMERS B
            WHERE A.FIELD1_VALUE = B.CUST_ID AND A.MODULE_ID = '20199'
                AND A.STATUS = 1 AND A.INSERT_MAN = @IN_INPUT_MAN

    --3.总记录
    SELECT @V_BATCH_COUNT = COUNT(SERIAL_NO) FROM IMPORT_DATA WHERE BATCH_ID = @V_BATCH_ID
    SELECT @V_SUCCESS_COUNT = COUNT(SERIAL_NO) FROM IMPORT_DATA WHERE BATCH_ID = @V_BATCH_ID AND STATUS = 2
    SELECT @V_FAILED_COUNT = COUNT(SERIAL_NO) FROM IMPORT_DATA WHERE BATCH_ID = @V_BATCH_ID AND STATUS = -2
    INSERT INTO IMPORT_BATCH(BATCH_ID,BATCH_COUNT,SUCCESS_COUNT,FAILED_COUNT,STATUS,SUMMARY,INSERT_MAN)
        VALUES(@V_BATCH_ID,@V_BATCH_COUNT,@V_SUCCESS_COUNT,@V_FAILED_COUNT,2,'已预处理',@IN_INPUT_MAN)

    COMMIT TRANSACTION
    END TRY

    BEGIN CATCH
        IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION

        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)

        SELECT @V_ERROR_STR = N'Message:%s,Procedure:%s,Line:%d',
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)

        RETURN -100
    END CATCH
    RETURN 100
GO
