USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_ADD_TGAINLEVELRATE @IN_DF_SERIAL_NO  INTEGER,        --TGAINLEVEL.SERIAL_NO
                                       @IN_GAIN_RATE     DECIMAL(5,4),   --收益率
                                       @IN_END_DATE      INTEGER,        --调整日期
                                       @IN_INPUT_MAN     INTEGER         --操作员
WITH ENCRYPTION 
AS  
    DECLARE @V_PRODUCT_ID INT,@V_PRODUCT_NAME NVARCHAR(60)
    DECLARE @V_PROV_LEVEL_NAME NVARCHAR(20)
    DECLARE @V_START_DATE INT,@V_END_DATE INT,@V_START_DATE0 INT,@V_END_DATE0 INT
    DECLARE @V_SERIAL_NO INT
    DECLARE @IBUSI_FLAG INT
    DECLARE @SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    
    SET @IBUSI_FLAG = 3300109
    SET @SBUSI_NAME = N'新增收益率'
    
    BEGIN TRY
        BEGIN TRANSACTION

        SELECT @V_PRODUCT_ID = A.PREPRODUCT_ID,@V_PRODUCT_NAME = B.PREPRODUCT_NAME,
               @V_PROV_LEVEL_NAME = A.PROV_LEVEL_NAME
            FROM TGAINLEVEL A LEFT JOIN TPREPRODUCT B ON A.PREPRODUCT_ID = B.PREPRODUCT_ID
            WHERE A.SERIAL_NO = @IN_DF_SERIAL_NO
        IF @@ROWCOUNT=0
			RAISERROR('收益级别不存在',16,1)
        
        IF EXISTS(SELECT 1 FROM TGAINLEVELRATE WHERE DF_SERIAL_NO = @IN_DF_SERIAL_NO AND @IN_END_DATE BETWEEN START_DATE AND END_DATE)
        BEGIN --在原有的时间区间内
            SELECT @V_SERIAL_NO = SERIAL_NO,@V_START_DATE0 = START_DATE
                FROM TGAINLEVELRATE 
                WHERE DF_SERIAL_NO = @IN_DF_SERIAL_NO AND @IN_END_DATE BETWEEN START_DATE AND END_DATE
            
            SET @V_START_DATE = @V_START_DATE0
            SET @V_END_DATE = @IN_END_DATE
            SET @V_START_DATE0 = dbo.GETDATE(@IN_END_DATE,1)
            
            UPDATE TGAINLEVELRATE SET START_DATE = @V_START_DATE0 WHERE SERIAL_NO = @V_SERIAL_NO
        END
        ELSE IF NOT EXISTS(SELECT 1 FROM TGAINLEVELRATE WHERE DF_SERIAL_NO = @IN_DF_SERIAL_NO AND START_DATE < @IN_END_DATE)
        BEGIN --在所有的时间区间之前
            SELECT @V_START_DATE0 = MIN(START_DATE) FROM TGAINLEVELRATE WHERE DF_SERIAL_NO = @IN_DF_SERIAL_NO
            SET @V_START_DATE = @IN_END_DATE
            SET @V_END_DATE = dbo.GETDATE(@V_START_DATE0,-1)
        END
        ELSE IF NOT EXISTS(SELECT 1 FROM TGAINLEVELRATE WHERE DF_SERIAL_NO = @IN_DF_SERIAL_NO AND END_DATE > @IN_END_DATE)
        BEGIN --在所有的时间区间之后
            SELECT @V_END_DATE0 = MAX(END_DATE) FROM TGAINLEVELRATE WHERE DF_SERIAL_NO = @IN_DF_SERIAL_NO
            SET @V_END_DATE = @IN_END_DATE
            SET @V_START_DATE = dbo.GETDATE(@V_END_DATE0,1)
        END
        
        INSERT INTO TGAINLEVELRATE(DF_SERIAL_NO,GAIN_RATE,START_DATE,END_DATE,INPUT_MAN)
            VALUES(@IN_DF_SERIAL_NO,@IN_GAIN_RATE,@V_START_DATE,ISNULL(@V_END_DATE,20991231),@IN_INPUT_MAN)
        
        --日志记录
        SET @SSUMMARY = @SBUSI_NAME + N'，预发行产品，产品名称：' + @V_PRODUCT_NAME
                                    + N'，收益级别：' + @V_PROV_LEVEL_NAME
                                    + N'，调整日期：' + CONVERT(VARCHAR,@IN_END_DATE)
                                    + N'，收益率：' + CONVERT(VARCHAR,@IN_GAIN_RATE)
        INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
            VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
        
        COMMIT TRANSACTION
        RETURN 100
    END TRY
    
    BEGIN CATCH
        IF @@TRANCOUNT > 0 BEGIN
            ROLLBACK TRANSACTION
        END
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)

        SELECT @V_ERROR_STR = N'Error %d,Level %d,State %d,Procedure %s,Line %d,Message %s',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_NUMBER,@V_ERROR_SEVERITY,@V_ERROR_STATE,
                  @V_ERROR_PROCEDURE,@V_ERROR_LINE,@V_ERROR_MESSAGE)

        RETURN -100
    END CATCH
    
GO
