USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_QUERY_TCUSTSERVICELOG   @IN_SERIAL_NO 		INT,			--主键
											@IN_CUST_NO   		NVARCHAR(30),   --客户ID
                                            @IN_CUST_NAME 		NVARCHAR(100),  --客户名称
											@IN_SERVICE_INFO	NVARCHAR(100),	--服务项目
											@IN_SERVICE_MAN		INT,			--客户经理
											@IN_EXECUTOR		INT,			--执行者	
											@IN_DATA_FLAG		NVARCHAR(10),	--数据类别
                                            @IN_INPUT_MAN 		INTEGER         --操作员
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_FLAG_ACCESS_ALL INT, @V_DT_INTRUST INT, @IN_NODE_SHARE INT
    --------------------------------------------------------
    --根据客户访问权限将能够访问的CUST_ID放在临时表---------
    DECLARE @V_TEMPCUST2 TABLE(CUST_ID INT) --根据访问权限能够访问的客户，根据访问权限 OR
    --客户经理级别树中，同节点客户经理是否共享客户
    IF EXISTS(SELECT 1 FROM TSYSCONTROL WHERE FLAG_TYPE = 'MANAGER002' AND VALUE = 1)
        SET @IN_NODE_SHARE = 0  --共享
    ELSE
        SET @IN_NODE_SHARE = 1  --不共享
    --能够访问所有客户信息
    IF EXISTS(SELECT 1 FROM TOPRIGHT WHERE OP_CODE = @IN_INPUT_MAN AND MENU_ID = N'999' AND FUNC_ID = 99903)
        SELECT @V_FLAG_ACCESS_ALL = 1
    --如果操作员的角色中存在访问所有客户信息权限的标志 则赋予能够访问所有客户信息权限
    IF EXISTS(SELECT 1 FROM TOPROLE WHERE OP_CODE = @IN_INPUT_MAN AND ROLE_ID IN(SELECT ROLE_ID FROM TROLE WHERE FLAG_ACCESS_ALL = 1))
        SELECT @V_FLAG_ACCESS_ALL = 1
    DECLARE @V_MANAGER_IDS TABLE(MANAGERID INT, MANAGERNAME NVARCHAR(60))
    --处理客户经理同级共享(共享给当前操作员的源客户经理)，共享时，同节点及下级节点的客户经理所辖客户，由于也具有访问权限，故一起共享了。故对经理树的处理放在下面
    INSERT INTO @V_MANAGER_IDS(MANAGERID)
        SELECT SourceManagerID FROM TAuthorizationShare WHERE ShareType = 1 AND Status = 1 AND ManagerID = @IN_INPUT_MAN
    --从客户经理树取当前操作员所辖客户经理,再取这些客户经理的客户
    INSERT INTO @V_MANAGER_IDS
        --1.根据节点主经理来判断当前操作员
        --所辖节点的主客户经理
        SELECT A.MANAGERID,A.MANAGERNAME FROM TCustManagerTree A, TCustManagerTree B
        WHERE (A.LEFT_ID BETWEEN B.LEFT_ID+@IN_NODE_SHARE AND B.RIGHT_ID) AND A.MANAGERID <> 0 AND A.MANAGERID IS NOT NULL
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --所辖节点的成员客户经理
        UNION ALL
        SELECT C.MANAGERID,C.MANAGERNAME FROM TCustManagerTree A, TCustManagerTree B, TCustManagerTreeMembers C
        WHERE (A.LEFT_ID BETWEEN B.LEFT_ID+@IN_NODE_SHARE AND B.RIGHT_ID) AND A.SERIAL_NO = C.TREE_ID
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --2.根据节点成员经理来判断当前操作员
        --所辖节点的主客户经理
        UNION ALL
        SELECT D.MANAGERID,D.MANAGERNAME FROM TCustManagerTreeMembers B, TCustManagerTree C, TCustManagerTree D
        WHERE B.TREE_ID = C.SERIAL_NO AND (D.LEFT_ID BETWEEN C.LEFT_ID+@IN_NODE_SHARE AND C.RIGHT_ID)
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --所辖节点的成员客户经理
        UNION ALL
        SELECT A.MANAGERID,A.MANAGERNAME FROM TCustManagerTreeMembers B, TCustManagerTree C, TCustManagerTree D, TCustManagerTreeMembers A
        WHERE B.TREE_ID = C.SERIAL_NO AND (D.LEFT_ID BETWEEN C.LEFT_ID+@IN_NODE_SHARE AND C.RIGHT_ID) AND A.TREE_ID = D.SERIAL_NO
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
    --处理授权给下级的(当前操作员的)客户授权集，注：被授权的客户没有级联共享给同级别经理
    INSERT INTO @V_TEMPCUST2
        SELECT DISTINCT A.CUST_ID FROM TAuthorizationCusts A, TAuthorizationShare B
        WHERE A.CA_ID = B.CA_ID AND B.ShareType = 2 AND B.Status = 1 AND B.ManagerID = @IN_INPUT_MAN
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
    --处理快捷授权的客户ShareType=3
    INSERT INTO @V_TEMPCUST2(CUST_ID)
        SELECT CUST_ID FROM TAuthorizationShare A WHERE ShareType = 3 AND Status = 1 AND (GETDATE() BETWEEN ISNULL(A.START_TIME,GETDATE()) AND ISNULL(A.INVALID_TIME,GETDATE()+36000)) AND ManagerID = @IN_INPUT_MAN
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
        UNION ALL
        SELECT B.CUST_ID FROM TAuthorizationShare A, TCustomers B
        WHERE A.SourceManagerID = B.SERVICE_MAN AND A.ShareType = 3 AND A.Status = 1 AND A.CUST_ID = 0 AND (GETDATE() BETWEEN ISNULL(A.START_TIME,GETDATE()) AND ISNULL(A.INVALID_TIME,GETDATE()+36000)) AND A.ManagerID = @IN_INPUT_MAN
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
    --以上客户经理的客户
    INSERT INTO @V_TEMPCUST2
        SELECT DISTINCT CUST_ID FROM TCustomers  A
        WHERE EXISTS( SELECT 1 FROM @V_MANAGER_IDS B WHERE A.SERVICE_MAN = B.MANAGERID)
                OR EXISTS( SELECT 1 FROM @V_MANAGER_IDS C WHERE A.INPUT_MAN = C.MANAGERID)
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
    --20110610 dongyg 按"产品客户经理"控制访问权限
    IF EXISTS(SELECT 1 FROM TSYSCONTROL WHERE FLAG_TYPE = 'PRODUCT001' AND VALUE = 1)
    BEGIN
        IF @V_DT_INTRUST = 1 --启用分布式
            INSERT INTO @V_TEMPCUST2
                SELECT DISTINCT A.CUST_ID FROM SRV_Intrust.INTRUST.dbo.TBENIFITOR A, SRV_Intrust.INTRUST.dbo.TPRODUCT B WHERE A.PRODUCT_ID = B.PRODUCT_ID AND B.SERVICE_MAN = @IN_INPUT_MAN
        ELSE IF (@V_DT_INTRUST = 2) AND EXISTS(SELECT * FROM master..sysdatabases WHERE NAME = N'INTRUST') --本地信托数据库
            INSERT INTO @V_TEMPCUST2
                SELECT DISTINCT A.CUST_ID FROM INTRUST..TBENIFITOR A, INTRUST..TPRODUCT B WHERE A.PRODUCT_ID = B.PRODUCT_ID AND B.SERVICE_MAN = @IN_INPUT_MAN
    END
    --------------------------------------------------------------------
    --20100121 dongyg start 增加对[认购份额、受益份额分级访问权限]的处理
    DECLARE @V_CUSTLEVELAUTH TABLE(
        PRODUCT_ID      INT,
        LEVEL_ID        INT,
        LEVEL_VALUE_ID  INT,
        MIN_VALUE       DEC(16,3),
        MAX_VALUE       DEC(16,3)
    )
    --查询出操作员能够访问的 认购份额、受益份额分级
    INSERT INTO @V_CUSTLEVELAUTH(PRODUCT_ID, LEVEL_ID, LEVEL_VALUE_ID, MIN_VALUE, MAX_VALUE)
        SELECT A.PRODUCT_ID, B.LEVEL_ID, A.LEVEL_VALUE_ID, B.MIN_VALUE, B.MAX_VALUE
        FROM TCUSTLEVELAUTH A, TCUSTLEVEL B WHERE A.PRODUCT_ID = B.PRODUCT_ID AND A.LEVEL_VALUE_ID = B.LEVEL_VALUE_ID AND A.OP_CODE = @IN_INPUT_MAN
    --取出满足条件的认购客户
    IF @V_DT_INTRUST = 1 --启用分布式
        INSERT INTO @V_TEMPCUST2(CUST_ID)
            SELECT B.CUST_ID
            FROM @V_CUSTLEVELAUTH A, (SELECT PRODUCT_ID, CUST_ID, SUM(RG_MONEY) AS RG_MONEY FROM SRV_Intrust.INTRUST.dbo.TCONTRACT GROUP BY PRODUCT_ID, CUST_ID) B
            WHERE (A.PRODUCT_ID = 0 OR A.PRODUCT_ID = B.PRODUCT_ID) AND A.LEVEL_ID = 10 AND B.RG_MONEY BETWEEN ISNULL(A.MIN_VALUE,-2147483647) AND ISNULL(A.MAX_VALUE,2147483647)
                AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE B.CUST_ID = C.CUST_ID)
    ELSE IF (@V_DT_INTRUST = 2) AND EXISTS(SELECT * FROM master..sysdatabases WHERE NAME = N'INTRUST') --本地信托数据库
        INSERT INTO @V_TEMPCUST2(CUST_ID)
            SELECT B.CUST_ID
            FROM @V_CUSTLEVELAUTH A, (SELECT PRODUCT_ID, CUST_ID, SUM(RG_MONEY) AS RG_MONEY FROM INTRUST..TCONTRACT GROUP BY PRODUCT_ID, CUST_ID) B
            WHERE (A.PRODUCT_ID = 0 OR A.PRODUCT_ID = B.PRODUCT_ID) AND A.LEVEL_ID = 10 AND B.RG_MONEY BETWEEN ISNULL(A.MIN_VALUE,-2147483647) AND ISNULL(A.MAX_VALUE,2147483647)
                AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE B.CUST_ID = C.CUST_ID)
    --取出满足条件的受益客户
    IF @V_DT_INTRUST = 1 --启用分布式
        INSERT INTO @V_TEMPCUST2(CUST_ID)
            SELECT B.CUST_ID
            FROM @V_CUSTLEVELAUTH A, (SELECT PRODUCT_ID, CUST_ID, SUM(BEN_AMOUNT) AS BEN_AMOUNT FROM SRV_Intrust.INTRUST.dbo.TBENIFITOR GROUP BY PRODUCT_ID, CUST_ID) B
            WHERE (A.PRODUCT_ID = 0 OR A.PRODUCT_ID = B.PRODUCT_ID) AND A.LEVEL_ID = 20 AND B.BEN_AMOUNT BETWEEN ISNULL(A.MIN_VALUE,-2147483647) AND ISNULL(A.MAX_VALUE,2147483647)
                AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE B.CUST_ID = C.CUST_ID)
    ELSE IF (@V_DT_INTRUST = 2) AND EXISTS(SELECT * FROM master..sysdatabases WHERE NAME = N'INTRUST') --本地信托数据库
        INSERT INTO @V_TEMPCUST2(CUST_ID)
            SELECT B.CUST_ID
            FROM @V_CUSTLEVELAUTH A, (SELECT PRODUCT_ID, CUST_ID, SUM(BEN_AMOUNT) AS BEN_AMOUNT FROM INTRUST..TBENIFITOR GROUP BY PRODUCT_ID, CUST_ID) B
            WHERE (A.PRODUCT_ID = 0 OR A.PRODUCT_ID = B.PRODUCT_ID) AND A.LEVEL_ID = 20 AND B.BEN_AMOUNT BETWEEN ISNULL(A.MIN_VALUE,-2147483647) AND ISNULL(A.MAX_VALUE,2147483647)
                AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE B.CUST_ID = C.CUST_ID)
    --20100121 dongyg end 增加对[认购份额、受益份额分级访问权限]的处理

    CREATE TABLE #TMP_QUERY_TCustomerMaintenance(
        SERIAL_NO        INT DEFAULT 0,     
        CUST_ID          INT,
        CUST_NO          NVARCHAR(30),
        CUST_NAME        NVARCHAR(100),
        SERVICE_TIME     DATETIME,       --服务、维护时间
        SERVICE_INFO     NVARCHAR(100),  --服务项目，根据实际项目以文本形式返回
        SERVICE_SUMMARY  NVARCHAR(500),  --服务项目的详细描述，如发短信可以包含短信内容、电话可以包含电话记录及语音回放、活动可以包含活动内容、费用等
		SERVICE_MAN		 INT,			 --客户经理编号
        SERVICE_MAN_NAME NVARCHAR(30),   --客户经理
		EXECUTOR		 INT,			 --执行者
        EXECUTOR_NAME    NVARCHAR(30),   --服务实际执行人
		CONTENT 		 NVARCHAR(MAX),	 --交流内容
		SUBJECT			 NVARCHAR(60),	 --交流主题
		INFO_LEVEL		 NVARCHAR(10),	 --信息级别
		INFO_LEVEL_NAME	 NVARCHAR(10),	 --信息级别名称
		STEP_FLAG		 NVARCHAR(10),	 --工作进展标志
		STEP_FLAG_NAME	 NVARCHAR(30),	 --工作进展标志名称	
        DATA_FLAG        NVARCHAR(10)    --系统 或 人工
    )
    --查询各类服务记录插入到临时表
    --服务任务明细表
    INSERT INTO #TMP_QUERY_TCustomerMaintenance(CUST_ID,CUST_NO,CUST_NAME,SERVICE_TIME,SERVICE_INFO,SERVICE_SUMMARY,SERVICE_MAN_NAME,EXECUTOR_NAME,DATA_FLAG,SERVICE_MAN,EXECUTOR)
        SELECT A.CUST_ID,A.CUST_NO,A.CUST_NAME,B.ExecuteTime,B.ServiceTypeName,B.Result,D.ManagerName,E.ManagerName,'系统',C.ManagerID,C.Executor
            FROM TCustomers A,TServiceTaskDetail B, TServiceTasks C, TCustManagers D, TCustManagers E
            WHERE B.TARGETCUSTID = A.CUST_ID AND B.TaskSerialNO = C.Serial_no AND C.ManagerID = D.ManagerID AND C.Executor = E.ManagerID
                AND(A.CUST_NO = @IN_CUST_NO OR @IN_CUST_NO IS NULL OR @IN_CUST_NO = '')
                AND(A.CUST_NAME = @IN_CUST_NAME OR @IN_CUST_NAME IS NULL OR @IN_CUST_NAME = '')

    --活动对象客户表
    INSERT INTO #TMP_QUERY_TCustomerMaintenance(CUST_ID,CUST_NO,CUST_NAME,SERVICE_TIME,SERVICE_INFO,SERVICE_SUMMARY,SERVICE_MAN_NAME,EXECUTOR_NAME,DATA_FLAG,SERVICE_MAN,EXECUTOR)
        SELECT A.CUST_ID,B.CUST_NO,B.CUST_NAME,C.COMPLETE_TIME ,C.ACTIVE_THEME,C.ACTIVE_PLAN+ ' <br>分摊费用:'+CONVERT(NVARCHAR(20),A.ACTIVITY_FEE),C.MANAGE_MAN,C.CREATOR_NAME,'系统',C.MANAGE_CODE,C.CREATOR
            FROM TACTIVITYCUSTS A,TCustomers B,TACTIVITIES C
            WHERE (A.CUST_ID = B.CUST_ID) AND (A.ACTIVITY_ID = C.SERIAL_NO)
                AND(B.CUST_NO = @IN_CUST_NO OR @IN_CUST_NO IS NULL OR @IN_CUST_NO = '')
                AND(B.CUST_NAME = @IN_CUST_NAME OR @IN_CUST_NAME IS NULL OR @IN_CUST_NAME = '')
    --呼叫中心通话
    INSERT INTO #TMP_QUERY_TCustomerMaintenance(CUST_ID,CUST_NO,CUST_NAME,SERVICE_TIME,SERVICE_INFO,SERVICE_SUMMARY,SERVICE_MAN_NAME,EXECUTOR_NAME,DATA_FLAG,SERVICE_MAN,EXECUTOR)
        SELECT A.CUST_ID,B.CUST_NO,B.CUST_NAME,A.CallTime,'语音通话','',D.ManagerName,D.ManagerName,'系统',A.ManagerID,A.ManagerID
        FROM TCallRecords A, TCustomers B, TCustManagers D
        WHERE A.CUST_ID = B.CUST_ID AND A.ManagerID = D.ManagerID
	--客户维护记录
	INSERT INTO #TMP_QUERY_TCustomerMaintenance(SERIAL_NO,CUST_ID,CUST_NO,CUST_NAME,SERVICE_TIME,SERVICE_INFO,SERVICE_SUMMARY,SERVICE_MAN,SERVICE_MAN_NAME,EXECUTOR,EXECUTOR_NAME,CONTENT,SUBJECT,INFO_LEVEL,INFO_LEVEL_NAME,STEP_FLAG,STEP_FLAG_NAME,DATA_FLAG)	
		SELECT A.SERIAL_NO,A.CUST_ID,A.CUST_NO,A.CUST_NAME,A.SERVICE_TIME,A.SERVICE_INFO,A.SERVICE_SUMMARY,A.SERVICE_MAN,A.SERVICE_MAN_NAME,A.EXECUTOR,A.EXECUTOR_NAME,A.CONTENT,A.SUBJECT,A.INFO_LEVEL,A.INFO_LEVEL_NAME,A.STEP_FLAG,A.STEP_FLAG_NAME,'人工' AS DATA_FLAG
		FROM TCUSTSERVICELOG A, TCustomers B
		WHERE A.CUST_ID = B.CUST_ID
            AND(B.SERVICE_MAN = @IN_INPUT_MAN OR B.INPUT_MAN = @IN_INPUT_MAN OR @V_FLAG_ACCESS_ALL = 1
                 OR EXISTS(SELECT 1 FROM @V_TEMPCUST2 Y WHERE A.CUST_ID = Y.CUST_ID) )
	--输出
    SELECT A.SERIAL_NO,A.CUST_ID,A.CUST_NO,A.CUST_NAME,A.SERVICE_TIME,A.SERVICE_INFO,A.SERVICE_SUMMARY,A.SERVICE_MAN,A.SERVICE_MAN_NAME,A.EXECUTOR,A.EXECUTOR_NAME,A.DATA_FLAG,A.CONTENT,A.SUBJECT,A.INFO_LEVEL,A.INFO_LEVEL_NAME,A.STEP_FLAG,A.STEP_FLAG_NAME
        FROM #TMP_QUERY_TCustomerMaintenance A, TCustomers B
        WHERE A.CUST_ID = B.CUST_ID
            AND(B.SERVICE_MAN = @IN_INPUT_MAN OR B.INPUT_MAN = @IN_INPUT_MAN OR @V_FLAG_ACCESS_ALL = 1
                 OR EXISTS(SELECT 1 FROM @V_TEMPCUST2 Y WHERE A.CUST_ID = Y.CUST_ID) )
			AND (ISNULL(@IN_CUST_NO,'') = N'' OR A.CUST_NO LIKE '%'+@IN_CUST_NO+'%')
			AND (ISNULL(@IN_CUST_NAME,'') = N'' OR A.CUST_NAME LIKE '%'+@IN_CUST_NAME+'%')
			AND (ISNULL(@IN_SERVICE_INFO,'') = N'' OR A.SERVICE_INFO LIKE '%'+@IN_SERVICE_INFO+'%')
			AND (ISNULL(@IN_SERVICE_MAN,0) = 0 OR A.SERVICE_MAN = @IN_SERVICE_MAN)
			AND (ISNULL(@IN_EXECUTOR,0) = 0 OR A.EXECUTOR = @IN_EXECUTOR)
			AND (ISNULL(@IN_DATA_FLAG,'')=N'' OR A.DATA_FLAG = @IN_DATA_FLAG)
			AND (ISNULL(@IN_SERIAL_NO,0) = 0 OR A.SERIAL_NO = @IN_SERIAL_NO)
		ORDER BY A.SERVICE_TIME DESC
GO
