USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_GET_OPERATOR_MEMBERS
                                 @IN_INPUT_MAN INT            --当前操作员
WITH ENCRYPTION
AS
    DECLARE @V_TEAM_ID INT,@V_DEPART_ID INT,@V_OP_NAME NVARCHAR(60),@V_ROLE_ID INT
    DECLARE @V_OPERATOR_MEMBERS TABLE(OP_CODE      INT)
    DECLARE @V_MANAGER_IDS TABLE(MANAGERID INT, MANAGERNAME NVARCHAR(60))
    
    SELECT @V_ROLE_ID=ROLE_ID,@V_DEPART_ID=DEPART_ID,@V_OP_NAME=OP_NAME FROM TOPERATOR WHERE OP_CODE=@IN_INPUT_MAN
    --查看全部操作员的权限
    IF @V_ROLE_ID=1 --管理员角色
    BEGIN
		SELECT OP_CODE,OP_NAME FROM TOPERATOR
		RETURN
    END
    --部门领导查看本部门的操作员
    IF EXISTS (SELECT * FROM TDEPARTMENT WHERE DEPART_ID=@V_DEPART_ID AND (MANAGER_MAN=@V_OP_NAME OR LEADER_MAN=@V_OP_NAME))
    BEGIN
		SELECT OP_CODE,OP_NAME FROM TOPERATOR WHERE DEPART_ID=@V_DEPART_ID
		RETURN
    END
    INSERT INTO @V_OPERATOR_MEMBERS(OP_CODE)
		SELECT @IN_INPUT_MAN
	--从客户经理树取当前操作员所辖客户经理
    INSERT INTO @V_MANAGER_IDS
        --1.根据节点主经理来判断当前操作员
        --所辖节点的主客户经理
        SELECT A.MANAGERID,A.MANAGERNAME FROM TCustManagerTree A, TCustManagerTree B
        WHERE (A.LEFT_ID BETWEEN B.LEFT_ID+1 AND B.RIGHT_ID) AND A.MANAGERID <> 0 AND A.MANAGERID IS NOT NULL
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --所辖节点的成员客户经理
        UNION ALL
        SELECT C.MANAGERID,C.MANAGERNAME FROM TCustManagerTree A, TCustManagerTree B, TCustManagerTreeMembers C
        WHERE (A.LEFT_ID BETWEEN B.LEFT_ID+1 AND B.RIGHT_ID) AND A.SERIAL_NO = C.TREE_ID
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --2.根据节点成员经理来判断当前操作员
        --所辖节点的主客户经理
        UNION ALL
        SELECT D.MANAGERID,D.MANAGERNAME FROM TCustManagerTreeMembers B, TCustManagerTree C, TCustManagerTree D
        WHERE B.TREE_ID = C.SERIAL_NO AND (D.LEFT_ID BETWEEN C.LEFT_ID+1 AND C.RIGHT_ID)
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --所辖节点的成员客户经理
        UNION ALL
        SELECT A.MANAGERID,A.MANAGERNAME FROM TCustManagerTreeMembers B, TCustManagerTree C, TCustManagerTree D, TCustManagerTreeMembers A
        WHERE B.TREE_ID = C.SERIAL_NO AND (D.LEFT_ID BETWEEN C.LEFT_ID+1 AND C.RIGHT_ID) AND A.TREE_ID = D.SERIAL_NO
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
	INSERT INTO @V_OPERATOR_MEMBERS
		SELECT MANAGERID FROM @V_MANAGER_IDS WHERE MANAGERID<>@IN_INPUT_MAN
	--团队成员
	SELECT @V_TEAM_ID=TEAM_ID FROM TManagerTeams WHERE LEADER=@IN_INPUT_MAN
	IF @@ROWCOUNT>0 --如果是团队领导
	BEGIN
		SELECT TEAM_ID,LEVEL_NO INTO #TEAM_IDS FROM dbo.GetTEAM_ID(@V_TEAM_ID)
		--把自己的团队加上去
		INSERT INTO #TEAM_IDS(TEAM_ID,LEVEL_NO)
			SELECT @V_TEAM_ID,0
		--各团队领导
		INSERT INTO @V_OPERATOR_MEMBERS(OP_CODE)
			SELECT DISTINCT LEADER FROM TManagerTeams WHERE EXISTS (SELECT * FROM #TEAM_IDS WHERE TEAM_ID=TManagerTeams.TEAM_ID)
				AND NOT EXISTS (SELECT * FROM @V_OPERATOR_MEMBERS A WHERE A.OP_CODE=TManagerTeams.LEADER)
		--各团队成员
		INSERT INTO @V_OPERATOR_MEMBERS(OP_CODE)
			SELECT MANAGERID FROM TManagerTeamMembers WHERE EXISTS (SELECT * FROM #TEAM_IDS WHERE TEAM_ID=TManagerTeamMembers.TEAM_ID)
				AND NOT EXISTS (SELECT * FROM @V_OPERATOR_MEMBERS A WHERE A.OP_CODE=TManagerTeamMembers.MANAGERID)
	END
	SELECT A.OP_CODE,B.OP_NAME FROM @V_OPERATOR_MEMBERS A LEFT JOIN TOPERATOR B ON A.OP_CODE=B.OP_CODE
GO
