USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_ADD_TSYSMESSAGE
        @IN_CUST_ID          INT          ,    --客户ID
        @IN_TITLE            NVARCHAR(200),    --消息主题
        @IN_MSG              NVARCHAR(MAX),    --消息内容
        @IN_INPUT_MAN        INTEGER           --操作员
WITH ENCRYPTION
AS
    SET NOCOUNT ON

    DECLARE @V_ERROR NVARCHAR(200),@OLD_SERVICE_MAN INT
    
    BEGIN TRY
    
    IF ISNULL(@IN_TITLE,'') = ''
	BEGIN
		SET @V_ERROR = N'消息主题不能为空'
		RAISERROR(@V_ERROR,16,2)
	END
    IF ISNULL(@IN_MSG,'') = ''
	BEGIN
		SET @V_ERROR = N'消息内容不能为空'
		RAISERROR(@V_ERROR,16,3)
	END
    BEGIN TRANSACTION
    
	SELECT @OLD_SERVICE_MAN=SERVICE_MAN  FROM TCustomers WHERE CUST_ID=@IN_CUST_ID
	IF ISNULL(@OLD_SERVICE_MAN,0)<>0 AND @OLD_SERVICE_MAN<>@IN_INPUT_MAN
		INSERT INTO TSYSMESSAGE(TITLE,MSG,FROM_OPCODE,TO_OPCODE,INPUT_TIME,IS_READ)
			SELECT @IN_TITLE,@IN_MSG,@IN_INPUT_MAN,@OLD_SERVICE_MAN,GETDATE(),1
    
    COMMIT TRANSACTION
    END TRY

    --3.异常处理
    BEGIN CATCH
        IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)
        SELECT @V_ERROR_STR = N'Message:%s<BR><font color = "white">Error:%d,Level:%d,State:%d,Procedure:%s,Line:%d</font>',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()
        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_NUMBER,@V_ERROR_SEVERITY,@V_ERROR_STATE,
                  @V_ERROR_PROCEDURE,@V_ERROR_LINE)
        RETURN -100
    END CATCH
    RETURN 100
GO
