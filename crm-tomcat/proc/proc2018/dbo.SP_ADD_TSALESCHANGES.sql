USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE SP_ADD_TSALESCHANGES @IN_SERIAL_NO INT, --到帐信息ID
											 @IN_INPUT_MAN         INT,
											 @IN_FROM_SERVICE_MAN  INT, --原客户经理
											 @IN_TO_SERVICE_MAN    INT, --转客户经理
											 @IN_ZR_MONEY          DEC(16,3),   --转让金额
											 @IN_CHANGE_REASON     NVARCHAR(40) -- 转让事由
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_ERROR NVARCHAR(200)
    DECLARE @V_STATUS INT -- 状态 1-待确认 2-确认未通过 3-待审核 4-审核未通过 5-已通过
    DECLARE @V_STATUS_NAME NVARCHAR(50)
    
    SELECT @V_STATUS=1
    SELECT @V_STATUS_NAME=N'待确认'
    DECLARE @IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)

    SELECT @IBUSI_FLAG = 655352
    SELECT @SBUSI_NAME = N'转销量申请'
    SELECT @SSUMMARY = N'转销量申请'
    
	DECLARE @V_DZ_DATE DATETIME --到账时间
	DECLARE @V_DZ_MONEY DEC(16,3)--到帐金额
	DECLARE @V_PRE_SERIAL_NO INT--预约表ID
	DECLARE @V_PRE_MONEY_SERIAL_NO INT--预约到帐表ID
	
	DECLARE @V_FROM_SERVICE_MAN_NAME NVARCHAR(100)
	DECLARE @V_TO_SERVICE_MAN_NAME NVARCHAR(100)

	DECLARE @V_CUST_ID INT,@V_CUST_NAME NVARCHAR(100) 
	DECLARE @V_PREPRODUCT_ID INT,@V_PREPRODUCT_NAME NVARCHAR(200)

    DECLARE @V_SERIAL_NO INT
    DECLARE @V_RECORDS_COUNT INT
    
    DECLARE @V_R_STATUS INT -- 1-正常 0-失效 -1-待生效
    SET @V_R_STATUS = -1
    
    DECLARE @V_PRE_PRODUCT_TYPE INT
    DECLARE @V_PRE_PRODUCT_TYPE_NAME NVARCHAR(50)
    DECLARE @V_RG_CUST_TYPE INT
    DECLARE @V_RG_CUST_TYPE_NAME NVARCHAR(200)

    ------------------------------------------------------------------------
    BEGIN TRY
    --1.业务逻辑与操作
    --校验
	IF NOT EXISTS(SELECT 1 FROM TSALESRESULTFORSTATISTIC WHERE SERIAL_NO = @IN_SERIAL_NO)
    BEGIN
        SET @V_ERROR = N'到帐信息不存在！'
        RAISERROR(@V_ERROR,16,3)
    END

    IF NOT EXISTS(SELECT 1 FROM TOPERATOR WHERE OP_CODE = @IN_FROM_SERVICE_MAN)
    BEGIN
        SET @V_ERROR = N'原销量客户经理不存在！'
        RAISERROR(@V_ERROR,16,4)
    END
    IF NOT EXISTS(SELECT 1 FROM TOPERATOR WHERE OP_CODE = @IN_TO_SERVICE_MAN)
    BEGIN
        SET @V_ERROR = N'转销量后客户经理不存在！'
        RAISERROR(@V_ERROR,16,5)
    END
    
    IF @IN_TO_SERVICE_MAN = @IN_FROM_SERVICE_MAN
    BEGIN
        SET @V_ERROR = N'转销量后客户经理不能为原销量客户经理！'
        RAISERROR(@V_ERROR,16,5)
    END
    
    SELECT @V_PRE_PRODUCT_TYPE=PRE_PRODUCT_TYPE,@V_PRE_PRODUCT_TYPE_NAME=PRE_PRODUCT_TYPE_NAME
    ,@V_DZ_DATE=DZ_DATE,@V_DZ_MONEY=DZ_MONEY,@V_PRE_SERIAL_NO=PRE_SERIAL_NO,@V_PRE_MONEY_SERIAL_NO=FK_TPREMONEYDETAIL 
    FROM TSALESRESULTFORSTATISTIC 
    WHERE SERIAL_NO = @IN_SERIAL_NO
    
    SELECT @V_FROM_SERVICE_MAN_NAME=OP_NAME
    FROM TOPERATOR WHERE OP_CODE = @IN_FROM_SERVICE_MAN
    
    SELECT @V_TO_SERVICE_MAN_NAME=OP_NAME
    FROM TOPERATOR WHERE OP_CODE = @IN_TO_SERVICE_MAN
    
    IF @V_PRE_PRODUCT_TYPE = 1
    BEGIN
		IF NOT EXISTS(SELECT 1 FROM TPRECONTRACT WHERE SERIAL_NO = @V_PRE_SERIAL_NO)
		BEGIN
			SET @V_ERROR = N'预约记录不存在！'
			RAISERROR(@V_ERROR,16,3)
		END
		SELECT @V_PREPRODUCT_ID = PREPRODUCT_ID, @V_CUST_ID = CUST_ID FROM TPRECONTRACT WHERE SERIAL_NO = @V_PRE_SERIAL_NO  
		SELECT @V_PREPRODUCT_NAME = PREPRODUCT_NAME FROM TPREPRODUCT WHERE PREPRODUCT_ID = @V_PREPRODUCT_ID 
		     
		IF NOT EXISTS(SELECT 1 FROM TCustomers WHERE CUST_ID = @V_CUST_ID)
		BEGIN
			SET @V_ERROR = N'客户信息不存在！'
			RAISERROR(@V_ERROR,16,3)
		END
		SELECT @V_CUST_NAME=CUST_NAME FROM TCustomers WHERE CUST_ID = @V_CUST_ID
	    
		SELECT @V_RECORDS_COUNT = COUNT(*) FROM TSALESRESULTFORSTATISTIC WHERE FK_TPREMONEYDETAIL = @V_PRE_MONEY_SERIAL_NO 
		
    END
	ELSE
	BEGIN
		SELECT @V_PREPRODUCT_NAME=RG_PRODUCT_NAME,@V_CUST_NAME=RG_CUST_NAME,@V_RG_CUST_TYPE=RG_CUST_TYPE
		,@V_RG_CUST_TYPE_NAME=RG_CUST_TYPE_NAME
		FROM TSALESRESULTFORSTATISTIC 
		WHERE SERIAL_NO = @IN_SERIAL_NO
		SELECT @V_RECORDS_COUNT = COUNT(*) FROM TSALESRESULTFORSTATISTIC WHERE RG_PRODUCT_NAME = @V_PREPRODUCT_NAME 
	END
    ------------------------------------------------------------------------
    BEGIN TRANSACTION
    
    INSERT INTO TSALES_CHANGES([FK_TPREMONEYDETAIL]
      ,[PRE_SERIAL_NO]
      ,[STATUS]
      ,[STATUS_NAME]
      ,[DZ_DATE]
      ,[DZ_MONEY]
      ,[FROM_SERVICE_MAN]
      ,[FROM_SERVICE_MAN_NAME]
      ,[TO_SERVICE_MAN]
      ,[TO_SERVICE_MAN_NAME]
      ,[CHANGE_MONEY]
      ,[CHANGE_REASON]
      ,[INPUT_MAN],FK_TSALESRESULT)
       VALUES(@V_PRE_MONEY_SERIAL_NO,@V_PRE_SERIAL_NO,@V_STATUS,@V_STATUS_NAME,
       @V_DZ_DATE,@V_DZ_MONEY,@IN_FROM_SERVICE_MAN,@V_FROM_SERVICE_MAN_NAME,
       @IN_TO_SERVICE_MAN,@V_TO_SERVICE_MAN_NAME,@IN_ZR_MONEY,@IN_CHANGE_REASON,@IN_INPUT_MAN,@IN_SERIAL_NO)
    
     SET @V_SERIAL_NO = @@IDENTITY   
    --插入冗余记录
		--DECLARE @V_PRE_PRODUCT_TYPE INT
		--DECLARE @V_PRE_PRODUCT_TYPE_NAME NVARCHAR(50)
		--SET @V_PRE_PRODUCT_TYPE = 1
		--SET @V_PRE_PRODUCT_TYPE_NAME = N'直销(工作台)'
		IF @V_PRE_PRODUCT_TYPE = 1
		BEGIN
			INSERT INTO TSALESRESULTFORSTATISTIC(PRE_SERIAL_NO,DZ_DATE,DZ_MONEY,JK_TYPE,JK_TYPE_NAME,INPUT_MAN,ONWAY_FLAG,PRE_PRODUCT_TYPE,PRE_PRODUCT_TYPE_NAME,FK_TPREMONEYDETAIL,RECORDS_COUNT,FK_TSALES_CHANGES,[STATUS])
			SELECT 
			[PRE_SERIAL_NO]
			,[DZ_DATE]
			,@IN_ZR_MONEY
			,[JK_TYPE]
			,[JK_TYPE_NAME]
			,@IN_INPUT_MAN
			,[ONWAY_FLAG]
			,@V_PRE_PRODUCT_TYPE
			,@V_PRE_PRODUCT_TYPE_NAME
			,[FK_TPREMONEYDETAIL]
			,(@V_RECORDS_COUNT+1)
			,@V_SERIAL_NO
			,@V_R_STATUS
			FROM TSALESRESULTFORSTATISTIC WHERE SERIAL_NO = @IN_SERIAL_NO
		END
		ELSE
		BEGIN
			INSERT INTO TSALESRESULTFORSTATISTIC(PRE_SERIAL_NO,DZ_DATE,DZ_MONEY,JK_TYPE,JK_TYPE_NAME
			,INPUT_MAN,ONWAY_FLAG,PRE_PRODUCT_TYPE,PRE_PRODUCT_TYPE_NAME
			,FK_TPREMONEYDETAIL,RECORDS_COUNT,FK_TSALES_CHANGES,[STATUS]
			,RG_CUST_NAME,RG_CUST_TYPE,RG_CUST_TYPE_NAME,RG_PRODUCT_NAME,RG_SERVICE_MAN,RG_SERVICE_MAN_NAME)
			SELECT 
			[PRE_SERIAL_NO]
			,[DZ_DATE]
			,@IN_ZR_MONEY
			,[JK_TYPE]
			,[JK_TYPE_NAME]
			,@IN_INPUT_MAN
			,[ONWAY_FLAG]
			,@V_PRE_PRODUCT_TYPE
			,@V_PRE_PRODUCT_TYPE_NAME
			,[FK_TPREMONEYDETAIL]
			,(@V_RECORDS_COUNT+1)
			,@V_SERIAL_NO
			,@V_R_STATUS
			,@V_CUST_NAME
			,@V_RG_CUST_TYPE
			,@V_RG_CUST_TYPE_NAME
			,@V_PREPRODUCT_NAME
			,@IN_TO_SERVICE_MAN
			,@V_TO_SERVICE_MAN_NAME
			FROM TSALESRESULTFORSTATISTIC WHERE SERIAL_NO = @IN_SERIAL_NO
		END

    
    --变更原到帐金额
    --UPDATE TSALESRESULTFORSTATISTIC SET DZ_MONEY=(DZ_MONEY-@IN_ZR_MONEY) WHERE SERIAL_NO=@IN_SERIAL_NO
    
   
    --2.日志
    SELECT @SSUMMARY = N'转销量申请，产品名称：'+@V_PREPRODUCT_NAME
						+N'客户名称：' + @V_CUST_NAME
						
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY) VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    COMMIT TRANSACTION
    END TRY
    --3.异常处理
    BEGIN CATCH
        IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)
        SELECT @V_ERROR_STR = N'Message:%s,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()
        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)
        RETURN -100
    END CATCH
    RETURN @V_SERIAL_NO
GO
