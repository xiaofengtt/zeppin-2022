USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_AUTO_CustomerClass @IN_CUST_ID    INTEGER,  --客户ID。为空自动处理所有客户；不为空时，可以调用sp_modi_customerclass
                                       @IN_INPUT_MAN  INTEGER   --操作员
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_BOOK_CODE INT, @V_INTRUST_OPERATOR INT
    DECLARE @RET INT, @V_DT_INTRUST INT
    SELECT @V_DT_INTRUST = VALUE FROM TSYSCONTROL WHERE FLAG_TYPE = N'DT_INTRUST'

    --临时表保存所有客户的分级信息，再将临时表的分级信息复制或更新到TCustomerClass
    CREATE TABLE #TMP_AUTO_CustomerClass(
        CUST_ID         INTEGER, --客户ID
        CLASSDEFINE_ID  INTEGER, --分级定义ID
        CLASSDETAIL_ID  INTEGER  --分级明细ID
    )
    --客户购买金额表，包括受让部分
	CREATE TABLE #TMP_CUST_RG(
		CUST_ID         INTEGER, --客户ID
		RG_MONEY        NUMERIC(15,0), --购买金额
	)
	CREATE TABLE #TMP_CUST_RG1(
		CUST_ID         INTEGER, --客户ID
		RG_MONEY        NUMERIC(15,0), --购买金额
	)
	CREATE TABLE #TMP_CUST_SR(
		CUST_ID         INTEGER, --客户ID
		RG_MONEY        NUMERIC(15,0), --购买金额
	) 
	--计算购买金额
	INSERT INTO #TMP_CUST_RG(CUST_ID,RG_MONEY)
		SELECT CUST_ID,0 FROM TCustomers
	INSERT INTO #TMP_CUST_RG1(CUST_ID,RG_MONEY)
		SELECT CUST_ID,SUM(CAST(ISNULL(RG_MONEY,0) AS NUMERIC(15,0))) FROM INTRUST..TCONTRACT WHERE CHECK_FLAG=2 GROUP BY CUST_ID
	UPDATE #TMP_CUST_RG SET RG_MONEY=ISNULL(A.RG_MONEY,0)+ISNULL(B.RG_MONEY,0) FROM #TMP_CUST_RG A LEFT JOIN #TMP_CUST_RG1 B ON A.CUST_ID=B.CUST_ID WHERE A.CUST_ID=B.CUST_ID
	INSERT INTO #TMP_CUST_SR(CUST_ID,RG_MONEY)
		SELECT TO_CUST_ID,SUM(CAST(ISNULL(TO_MONEY,0) AS NUMERIC(15,0))) FROM INTRUST..TBENCHANGES WHERE CHECK_FLAG=2  GROUP BY TO_CUST_ID
	UPDATE #TMP_CUST_RG SET RG_MONEY=ISNULL(A.RG_MONEY,0)+ISNULL(B.RG_MONEY,0) FROM #TMP_CUST_RG A LEFT JOIN #TMP_CUST_SR B ON A.CUST_ID=B.CUST_ID WHERE A.CUST_ID=B.CUST_ID
	--分类开始-------------------------
    --插入,仅 CLASSDEFINE_ID in (10,11,12) 需要程序自动处理
    INSERT INTO #TMP_AUTO_CustomerClass(CUST_ID,CLASSDEFINE_ID,CLASSDETAIL_ID)
        SELECT A.CUST_ID,B.CLASSDEFINE_ID,NULL
        FROM TCustomers A, TCustClassDefine B
        WHERE B.CLASSDEFINE_ID IN (10,11,12)
            AND (CUST_ID = @IN_CUST_ID OR @IN_CUST_ID IS NULL OR @IN_CUST_ID = 0)
    IF @V_DT_INTRUST = 1 --启用分布式
    BEGIN
        --10.是否认购
        UPDATE #TMP_AUTO_CustomerClass SET CLASSDETAIL_ID = B.CLASSDETAIL_ID
            FROM #TMP_AUTO_CustomerClass A, TCustClassDetail B, SRV_Intrust.INTRUST.dbo.TCUSTOMERINFO C
            WHERE A.CLASSDEFINE_ID = B.CLASSDEFINE_ID AND A.CUST_ID = C.CUST_ID AND (C.RG_TIMES BETWEEN ISNULL(B.CLASS_MINVALUE,-2147483647) AND ISNULL(B.CLASS_MAXVALUE,2147483647))
                AND A.CLASSDEFINE_ID = 10
        --11.活跃度，最后一次认购日期和当前日期相距月数
        UPDATE #TMP_AUTO_CustomerClass SET CLASSDETAIL_ID = B.CLASSDETAIL_ID
            FROM #TMP_AUTO_CustomerClass A, TCustClassDetail B, SRV_Intrust.INTRUST.dbo.TCUSTOMERINFO C
            WHERE A.CLASSDEFINE_ID = B.CLASSDEFINE_ID AND A.CUST_ID = C.CUST_ID
                AND (dbo.GETMONTHDIFF(C.LAST_RG_DATE,dbo.GETDATEINT(getdate())) BETWEEN ISNULL(B.CLASS_MINVALUE,-2147483647) AND ISNULL(B.CLASS_MAXVALUE,2147483647))
                AND A.CLASSDEFINE_ID = 11 AND C.LAST_RG_DATE IS NOT NULL
        --12.客户等级
        UPDATE #TMP_AUTO_CustomerClass SET CLASSDETAIL_ID = B.CLASSDETAIL_ID
            FROM #TMP_AUTO_CustomerClass A, TCustClassDetail B, #TMP_CUST_RG C
            WHERE A.CLASSDEFINE_ID = B.CLASSDEFINE_ID AND A.CUST_ID = C.CUST_ID
				AND (ISNULL(C.RG_MONEY,0)/10000.0 BETWEEN ISNULL(B.CLASS_MINVALUE/10000.0,-2147483647) AND ISNULL(B.CLASS_MAXVALUE/10000.0,2147483647))
                AND A.CLASSDEFINE_ID = 12 --AND C.CURRENT_MONEY IS NOT NULL AND C.CURRENT_MONEY <> 0
    END
    ELSE IF (@V_DT_INTRUST = 2) AND EXISTS(SELECT * FROM master..sysdatabases WHERE NAME = N'INTRUST') --本地信托数据库
    BEGIN
        --10.是否认购
        UPDATE #TMP_AUTO_CustomerClass SET CLASSDETAIL_ID = B.CLASSDETAIL_ID
            FROM #TMP_AUTO_CustomerClass A, TCustClassDetail B, INTRUST..TCUSTOMERINFO C
            WHERE A.CLASSDEFINE_ID = B.CLASSDEFINE_ID AND A.CUST_ID = C.CUST_ID AND (C.RG_TIMES BETWEEN ISNULL(B.CLASS_MINVALUE,-2147483647) AND ISNULL(B.CLASS_MAXVALUE,2147483647))
                AND A.CLASSDEFINE_ID = 10
        --11.活跃度，最后一次认购日期和当前日期相距月数
        UPDATE #TMP_AUTO_CustomerClass SET CLASSDETAIL_ID = B.CLASSDETAIL_ID
            FROM #TMP_AUTO_CustomerClass A, TCustClassDetail B, INTRUST..TCUSTOMERINFO C
            WHERE A.CLASSDEFINE_ID = B.CLASSDEFINE_ID AND A.CUST_ID = C.CUST_ID
                AND (dbo.GETMONTHDIFF(C.LAST_RG_DATE,dbo.GETDATEINT(getdate())) BETWEEN ISNULL(B.CLASS_MINVALUE,-2147483647) AND ISNULL(B.CLASS_MAXVALUE,2147483647))
                AND A.CLASSDEFINE_ID = 11 AND C.LAST_RG_DATE IS NOT NULL
        --12.客户等级
        UPDATE #TMP_AUTO_CustomerClass SET CLASSDETAIL_ID = B.CLASSDETAIL_ID
            FROM #TMP_AUTO_CustomerClass A, TCustClassDetail B, #TMP_CUST_RG C
            WHERE A.CLASSDEFINE_ID = B.CLASSDEFINE_ID AND A.CUST_ID = C.CUST_ID AND (ISNULL(C.RG_MONEY,0)/10000.0 BETWEEN ISNULL(B.CLASS_MINVALUE/10000.0,-2147483647) AND ISNULL(B.CLASS_MAXVALUE/10000.0,2147483647))
                AND A.CLASSDEFINE_ID = 12-- AND C.CURRENT_MONEY IS NOT NULL AND C.CURRENT_MONEY <> 0
    END
    --分类完成-------------------------
    BEGIN TRAN
    --先插入TCustomerClass中不存在的
    INSERT INTO TCustomerClass(CUST_ID,CLASSDEFINE_ID,CLASSDEFINE_NAME,CLASSDETAIL_ID,CLASSDETAIL_NAME,INSERTMAN,CHECK_FLAG)
        SELECT A.CUST_ID,A.CLASSDEFINE_ID,B.CLASSDEFINE_NAME,A.CLASSDETAIL_ID,B.CLASSDETAIL_NAME,@IN_INPUT_MAN,2
        FROM #TMP_AUTO_CustomerClass A, TCustClassDetail B
        WHERE A.CLASSDEFINE_ID = B.CLASSDEFINE_ID AND A.CLASSDETAIL_ID = B.CLASSDETAIL_ID
            AND NOT EXISTS(SELECT 1 FROM TCustomerClass C WHERE A.CUST_ID = C.CUST_ID AND A.CLASSDEFINE_ID = C.CLASSDEFINE_ID)
        ORDER BY A.CUST_ID, A.CLASSDEFINE_ID
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END
    --再将 #TMP_AUTO_CustomerClass.CLASSDETAIL_ID 更新到 TCustomerClass
    UPDATE TCustomerClass
        SET CLASSDETAIL_ID = B.CLASSDETAIL_ID
        FROM TCustomerClass A, #TMP_AUTO_CustomerClass B
        WHERE A.CUST_ID = B.CUST_ID AND A.CLASSDEFINE_ID = B.CLASSDEFINE_ID --AND B.CLASSDETAIL_ID IS NOT NULL
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END
    COMMIT TRAN
    RETURN 100
GO
