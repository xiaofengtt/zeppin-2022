USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_DEL_TCONTRACTUNREAL @IN_SERIAL_NO       INT,                 --序号
                                        @IN_INPUT_MAN       INTEGER                        
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_PREPRODUCT_ID INT
    DECLARE @V_CUST_ID INT, @V_CUST_NAME NVARCHAR(60)
    DECLARE @V_CONTRACT_SUB_BH NVARCHAR(30)
    DECLARE @V_RG_MONEY DECIMAL(16,3)
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    SELECT @V_RET_CODE = -50104000
    SELECT @IBUSI_FLAG = 50104
    SELECT @SBUSI_NAME = N'非正式合同录入后删除'
    SELECT @SSUMMARY = N'非正式合同录入后删除'

    BEGIN TRY
    IF NOT EXISTS (SELECT 1 FROM TCONTRACTUNREAL WHERE SERIAL_NO=@IN_SERIAL_NO)
        RAISERROR('合同不存在！',16,1)
    IF EXISTS (SELECT 1 FROM TCONTRACTUNREAL WHERE SERIAL_NO=@IN_SERIAL_NO AND STATUS=2)--状态：1未转正式认购2已转认购
        RAISERROR('合同已转正式的认购，不能删除！',16,1)    

    SELECT @V_CUST_ID=CUST_ID,@V_CONTRACT_SUB_BH=CONTRACT_SUB_BH,@V_RG_MONEY=RG_MONEY
    FROM TCONTRACTUNREAL 
    WHERE SERIAL_NO = @IN_SERIAL_NO
        
    SELECT @V_CUST_NAME = CUST_NAME FROM INTRUST..TCUSTOMERINFO WHERE CUST_ID=@V_CUST_ID

    BEGIN TRANSACTION 
    
    DELETE FROM TCONTRACTUNREAL WHERE SERIAL_NO=@IN_SERIAL_NO   
    SELECT @SSUMMARY = N'非正式合同录入后删除，预发行产品ID：' + RTRIM(CONVERT(CHAR,@V_PREPRODUCT_ID))      +
                                      N',合同编号: ' + @V_CONTRACT_SUB_BH   +
                                      N',委托人：'   + @V_CUST_NAME          +
                                      N',委托金额：' + RTRIM(CONVERT(CHAR,@V_RG_MONEY)) +
                                      N',记录号：' + CONVERT(VARCHAR,@IN_SERIAL_NO)
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME, @IN_INPUT_MAN,@SSUMMARY)

    COMMIT TRANSACTION
    RETURN 100
    
    END TRY
    
    BEGIN CATCH
        IF @@TRANCOUNT > 0 BEGIN
            ROLLBACK TRANSACTION
        END
        
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)

        SELECT @V_ERROR_STR = N'Message:%s,Error:%d,Level:%d,State:%d,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_NUMBER,@V_ERROR_SEVERITY,@V_ERROR_STATE,
                  @V_ERROR_PROCEDURE,@V_ERROR_LINE)
        
        RETURN -100
    END CATCH
GO
