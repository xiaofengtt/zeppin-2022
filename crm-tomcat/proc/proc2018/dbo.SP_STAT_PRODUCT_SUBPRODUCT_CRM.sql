USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_STAT_PRODUCT_SUBPRODUCT_CRM     @IN_PRODUCT_ID INT
WITH ENCRYPTION
AS
    DECLARE @V_DT_INTRUST INT
    DECLARE @V_PRODUCT_ID INT,@V_SUB_PRODUCT_ID INT,@V_PROV_LEVEL NVARCHAR(10),@V_PROV_LEVEL_NAME NVARCHAR(30),@V_LIST_ID INT,@V_LIST_NAME NVARCHAR(60)
    DECLARE @V_PERIOD_UNIT INT,@V_VALID_PERIOD INT,@V_EXP_RATE1 DECIMAL(16,3)
    DECLARE @V_CONTRACT_COUNT INT,@V_CONTRACT_MONEY DECIMAL(16,3),@V_VALID_PERIOD_UNIT NVARCHAR(10),@V_AVERAGE_RATE DECIMAL(16,3)
    DECLARE @V_TEMP_CONTRACT_COUNT INT,@V_TEMP_CONTRACT_MONEY DECIMAL(16,3),@V_TEMP_PROV_LEVEL NVARCHAR(10),@V_TEMP_PROV_LEVEL_NAME NVARCHAR(30)
    DECLARE @V_TOTAL_CONTRACT_COUNT INT,@V_TOTAL_CONTRACT_MONEY DECIMAL(16,3),@V_RECEIPTS_MONEY DECIMAL(16,3)--收益金额
    DECLARE @V_SQL NVARCHAR(2000)
    --分布式标志
    SELECT @V_DT_INTRUST = VALUE FROM TSYSCONTROL WHERE FLAG_TYPE = N'DT_INTRUST'

    --默认值 赋予
    SET @V_TEMP_PROV_LEVEL = N'000000'      --受益级别编号
    SET @V_TEMP_PROV_LEVEL_NAME = N''       --受益级别编号名称
    SET @V_CONTRACT_COUNT = 0               --单个子产品合同笔数
    SET @V_CONTRACT_MONEY = 0               --单个子产品合同金额
    SET @V_TOTAL_CONTRACT_COUNT = 0         --整个产品的子产品合同笔数统计
    SET @V_TOTAL_CONTRACT_MONEY = 0         --整个产品的子产品合同金额统计
    SET @V_TEMP_CONTRACT_COUNT  = 0         --合同笔数中间变量
    SET @V_TEMP_CONTRACT_MONEY  = 0         --合同金额中间变量
    SET @V_RECEIPTS_MONEY = 0               --合同收益率
    SET @V_AVERAGE_RATE = 0                 --平均收益率

    --临时表
    CREATE TABLE #TEMP_SUBPRODUCT(
        PRODUCT_ID                  INT,                --产品ID
        PRODUCT_NAME                NVARCHAR(60),        --产品名称
        SUB_PRODUCT_ID              INT,                --子产品ID
        PROV_LEVEL                  NVARCHAR(10),       --受益级别
        PROV_LEVEL_NAME             NVARCHAR(30),       --受益级别名称
        LIST_ID                     INT,                --
        LIST_NAME                   NVARCHAR(60),       --分层级别名称
        CONTRACT_COUNT              INT,                --合同笔数
        CONTRACT_MONEY              DECIMAL(16,3),      --合同金额
        EXP_RATE1                   DECIMAL(16,3),      --收益率
        VALID_PERIOD_UNIT           NVARCHAR(60),       --期限
        AVERAGE_RATE                DECIMAL(16,3),      --平均收益率
    )

    IF @V_DT_INTRUST = 1
    BEGIN
        --定义游标
        DECLARE CUR_SUBPRODUCT CURSOR FOR
            SELECT A.PRODUCT_ID,A.SUB_PRODUCT_ID,B.PROV_LEVEL,B.PROV_LEVEL_NAME,A.LIST_ID,A.LIST_NAME,A.EXP_RATE1,A.VALID_PERIOD,A.PERIOD_UNIT
            FROM SRV_Intrust.INTRUST.dbo.TSUBPRODUCT A RIGHT JOIN SRV_Intrust.INTRUST.dbo.TGAINLEVEL B ON A.SUB_PRODUCT_ID = B.SUB_PRODUCT_ID
            WHERE A.PRODUCT_ID = @IN_PRODUCT_ID
            ORDER BY PROV_LEVEL
        --打开游标
        OPEN CUR_SUBPRODUCT
        FETCH NEXT FROM CUR_SUBPRODUCT INTO @V_PRODUCT_ID, @V_SUB_PRODUCT_ID, @V_PROV_LEVEL, @V_PROV_LEVEL_NAME, @V_LIST_ID, @V_LIST_NAME,@V_EXP_RATE1,@V_VALID_PERIOD,@V_PERIOD_UNIT
        WHILE @@FETCH_STATUS = 0
        BEGIN
            --不是首条记录  变更分级统计 进行合计计算
            IF @V_TEMP_PROV_LEVEL <> N'000000' AND @V_TEMP_PROV_LEVEL <> @V_PROV_LEVEL
                BEGIN
                    --计算平均收益率
                    IF @V_TEMP_CONTRACT_MONEY <>0
                    SET @V_AVERAGE_RATE = @V_RECEIPTS_MONEY/@V_TEMP_CONTRACT_MONEY
                    ELSE
                    SET @V_AVERAGE_RATE = 0
                    --修改
                    UPDATE #TEMP_SUBPRODUCT
                    SET AVERAGE_RATE = @V_AVERAGE_RATE
                    WHERE PROV_LEVEL = @V_TEMP_PROV_LEVEL

                    --插入合计行
                    INSERT INTO #TEMP_SUBPRODUCT(PRODUCT_ID,SUB_PRODUCT_ID,PROV_LEVEL,PROV_LEVEL_NAME,LIST_ID,LIST_NAME,CONTRACT_COUNT,CONTRACT_MONEY,EXP_RATE1,VALID_PERIOD_UNIT)
                    VALUES (@V_PRODUCT_ID,0, @V_TEMP_PROV_LEVEL, @V_TEMP_PROV_LEVEL_NAME,0, N'合计',@V_TEMP_CONTRACT_COUNT,@V_TEMP_CONTRACT_MONEY,0,N'')
                END
                --如果是不同分级统计
                IF @V_TEMP_PROV_LEVEL <> @V_PROV_LEVEL
                BEGIN
                    --将平均数计入
                    SET @V_TEMP_CONTRACT_COUNT  = 0
                    SET @V_TEMP_CONTRACT_MONEY  = 0
                    SET @V_RECEIPTS_MONEY = 0
                    --变更受益级别编号
                    SET @V_TEMP_PROV_LEVEL = @V_PROV_LEVEL
                    SET @V_TEMP_PROV_LEVEL_NAME = @V_PROV_LEVEL_NAME
                END

                --拼子产品期限
                SET @V_VALID_PERIOD_UNIT = RTRIM(CONVERT(CHAR(3),@V_VALID_PERIOD))+ CASE @V_PERIOD_UNIT WHEN 1 THEN N'天' WHEN 2 THEN N'月' WHEN 3 THEN N'年'  ELSE N'' END
                --统计子产品合同笔数和金额
                SELECT @V_CONTRACT_COUNT = COUNT(*),@V_CONTRACT_MONEY = SUM(RG_MONEY)
                FROM SRV_Intrust.INTRUST.dbo.TCONTRACT
                WHERE SUB_PRODUCT_ID = @V_SUB_PRODUCT_ID
                --总合计数 统计
                SET @V_TOTAL_CONTRACT_COUNT = @V_TOTAL_CONTRACT_COUNT + @V_CONTRACT_COUNT
                SET @V_TOTAL_CONTRACT_MONEY = @V_TOTAL_CONTRACT_MONEY + @V_CONTRACT_MONEY
                --中间合计数统计
                SET @V_TEMP_CONTRACT_COUNT  = @V_TEMP_CONTRACT_COUNT+@V_CONTRACT_COUNT
                SET @V_TEMP_CONTRACT_MONEY  = @V_TEMP_CONTRACT_MONEY+@V_CONTRACT_MONEY
                SET @V_RECEIPTS_MONEY = @V_RECEIPTS_MONEY + @V_CONTRACT_MONEY * @V_EXP_RATE1

                --向临时表插入数据
                INSERT INTO #TEMP_SUBPRODUCT(PRODUCT_ID,SUB_PRODUCT_ID,PROV_LEVEL,PROV_LEVEL_NAME,LIST_ID,LIST_NAME,CONTRACT_COUNT,CONTRACT_MONEY,EXP_RATE1,VALID_PERIOD_UNIT)
                VALUES (@V_PRODUCT_ID, @V_SUB_PRODUCT_ID, @V_PROV_LEVEL, @V_PROV_LEVEL_NAME, @V_LIST_ID, @V_LIST_NAME,@V_CONTRACT_COUNT,@V_CONTRACT_MONEY,@V_EXP_RATE1,@V_VALID_PERIOD_UNIT)
                IF @@ERROR <> 0
                BEGIN
                    CLOSE CUR_SUBPRODUCT
                    DEALLOCATE CUR_SUBPRODUCT
                    ROLLBACK TRANSACTION
                    RETURN -100
                END

                FETCH NEXT FROM CUR_SUBPRODUCT INTO @V_PRODUCT_ID, @V_SUB_PRODUCT_ID, @V_PROV_LEVEL, @V_PROV_LEVEL_NAME, @V_LIST_ID, @V_LIST_NAME,@V_EXP_RATE1,@V_VALID_PERIOD,@V_PERIOD_UNIT
            END
            CLOSE CUR_SUBPRODUCT
            DEALLOCATE CUR_SUBPRODUCT
    END
    ELSE
    BEGIN
        --定义游标
    DECLARE CUR_SUBPRODUCT CURSOR FOR
		SELECT A.PRODUCT_ID,A.SUB_PRODUCT_ID,B.PROV_LEVEL,B.PROV_LEVEL_NAME,A.LIST_ID,A.LIST_NAME,A.EXP_RATE1,A.VALID_PERIOD,A.PERIOD_UNIT
		FROM INTRUST.dbo.TSUBPRODUCT A RIGHT JOIN INTRUST.dbo.TGAINLEVEL B ON A.SUB_PRODUCT_ID = B.SUB_PRODUCT_ID
        WHERE A.PRODUCT_ID = @IN_PRODUCT_ID
        ORDER BY PROV_LEVEL
    --打开游标
    OPEN CUR_SUBPRODUCT
    FETCH NEXT FROM CUR_SUBPRODUCT INTO @V_PRODUCT_ID, @V_SUB_PRODUCT_ID, @V_PROV_LEVEL, @V_PROV_LEVEL_NAME, @V_LIST_ID, @V_LIST_NAME,@V_EXP_RATE1,@V_VALID_PERIOD,@V_PERIOD_UNIT
    WHILE @@FETCH_STATUS = 0
    BEGIN
            --不是首条记录  变更分级统计 进行合计计算
            IF @V_TEMP_PROV_LEVEL <> N'000000' AND @V_TEMP_PROV_LEVEL <> @V_PROV_LEVEL
            BEGIN
                --计算平均收益率
                IF @V_TEMP_CONTRACT_MONEY <>0
                SET @V_AVERAGE_RATE = @V_RECEIPTS_MONEY/@V_TEMP_CONTRACT_MONEY
                ELSE
                SET @V_AVERAGE_RATE = 0
                --修改
                UPDATE #TEMP_SUBPRODUCT
                SET AVERAGE_RATE = @V_AVERAGE_RATE
                WHERE PROV_LEVEL = @V_TEMP_PROV_LEVEL

                --插入合计行
                INSERT INTO #TEMP_SUBPRODUCT(PRODUCT_ID,SUB_PRODUCT_ID,PROV_LEVEL,PROV_LEVEL_NAME,LIST_ID,LIST_NAME,CONTRACT_COUNT,CONTRACT_MONEY,EXP_RATE1,VALID_PERIOD_UNIT)
                VALUES (@V_PRODUCT_ID,0, @V_TEMP_PROV_LEVEL, @V_TEMP_PROV_LEVEL_NAME,0, N'合计',@V_TEMP_CONTRACT_COUNT,@V_TEMP_CONTRACT_MONEY,0,N'')
            END
            --如果是不同分级统计
            IF @V_TEMP_PROV_LEVEL <> @V_PROV_LEVEL
            BEGIN
                --将平均数计入
                SET @V_TEMP_CONTRACT_COUNT  = 0
                SET @V_TEMP_CONTRACT_MONEY  = 0
                SET @V_RECEIPTS_MONEY = 0
                --变更受益级别编号
                SET @V_TEMP_PROV_LEVEL = @V_PROV_LEVEL
                SET @V_TEMP_PROV_LEVEL_NAME = @V_PROV_LEVEL_NAME
            END

            --拼子产品期限
            SET @V_VALID_PERIOD_UNIT = RTRIM(CONVERT(CHAR(3),@V_VALID_PERIOD))+ CASE @V_PERIOD_UNIT WHEN 1 THEN N'天' WHEN 2 THEN N'月' WHEN 3 THEN N'年'  ELSE N'' END
            --统计子产品合同笔数和金额
            SELECT @V_CONTRACT_COUNT = COUNT(*),@V_CONTRACT_MONEY = SUM(RG_MONEY)
            FROM INTRUST.dbo.TCONTRACT
            WHERE SUB_PRODUCT_ID = @V_SUB_PRODUCT_ID
            --总合计数 统计
            SET @V_TOTAL_CONTRACT_COUNT = @V_TOTAL_CONTRACT_COUNT + @V_CONTRACT_COUNT
            SET @V_TOTAL_CONTRACT_MONEY = @V_TOTAL_CONTRACT_MONEY + @V_CONTRACT_MONEY
            --中间合计数统计
            SET @V_TEMP_CONTRACT_COUNT  = @V_TEMP_CONTRACT_COUNT+@V_CONTRACT_COUNT
            SET @V_TEMP_CONTRACT_MONEY  = @V_TEMP_CONTRACT_MONEY+@V_CONTRACT_MONEY
            SET @V_RECEIPTS_MONEY = @V_RECEIPTS_MONEY + @V_CONTRACT_MONEY * @V_EXP_RATE1

            --向临时表插入数据
            INSERT INTO #TEMP_SUBPRODUCT(PRODUCT_ID,SUB_PRODUCT_ID,PROV_LEVEL,PROV_LEVEL_NAME,LIST_ID,LIST_NAME,CONTRACT_COUNT,CONTRACT_MONEY,EXP_RATE1,VALID_PERIOD_UNIT)
            VALUES (@V_PRODUCT_ID, @V_SUB_PRODUCT_ID, @V_PROV_LEVEL, @V_PROV_LEVEL_NAME, @V_LIST_ID, @V_LIST_NAME,@V_CONTRACT_COUNT,@V_CONTRACT_MONEY,@V_EXP_RATE1,@V_VALID_PERIOD_UNIT)
            IF @@ERROR <> 0
            BEGIN
                CLOSE CUR_SUBPRODUCT
                DEALLOCATE CUR_SUBPRODUCT
                ROLLBACK TRANSACTION
                RETURN -100
            END

            FETCH NEXT FROM CUR_SUBPRODUCT INTO @V_PRODUCT_ID, @V_SUB_PRODUCT_ID, @V_PROV_LEVEL, @V_PROV_LEVEL_NAME, @V_LIST_ID, @V_LIST_NAME,@V_EXP_RATE1,@V_VALID_PERIOD,@V_PERIOD_UNIT
        END
        CLOSE CUR_SUBPRODUCT
        DEALLOCATE CUR_SUBPRODUCT
    END


    --最后的分级统计
    IF @V_TEMP_PROV_LEVEL <> N'000000'
    BEGIN
        --计算平均收益率
        IF @V_TEMP_CONTRACT_MONEY <>0
        SET @V_AVERAGE_RATE = @V_RECEIPTS_MONEY/@V_TEMP_CONTRACT_MONEY
        ELSE
        SET @V_AVERAGE_RATE = 0
        --修改
        UPDATE #TEMP_SUBPRODUCT
        SET AVERAGE_RATE = @V_AVERAGE_RATE
        WHERE PROV_LEVEL = @V_TEMP_PROV_LEVEL

        --插入合计行
        INSERT INTO #TEMP_SUBPRODUCT(PRODUCT_ID,SUB_PRODUCT_ID,PROV_LEVEL,PROV_LEVEL_NAME,LIST_ID,LIST_NAME,CONTRACT_COUNT,CONTRACT_MONEY,EXP_RATE1,VALID_PERIOD_UNIT)
        VALUES (@V_PRODUCT_ID,0, @V_PROV_LEVEL, @V_PROV_LEVEL_NAME,0, N'合计',@V_TEMP_CONTRACT_COUNT,@V_TEMP_CONTRACT_MONEY,0,N'')
    END
    --插入最后合计行
    INSERT INTO #TEMP_SUBPRODUCT(PRODUCT_ID,SUB_PRODUCT_ID,PROV_LEVEL,PROV_LEVEL_NAME,LIST_ID,LIST_NAME,CONTRACT_COUNT,CONTRACT_MONEY,EXP_RATE1,VALID_PERIOD_UNIT)
    VALUES (@V_PRODUCT_ID,0, N'000000', N'合计',0, N'',@V_TOTAL_CONTRACT_COUNT,@V_TOTAL_CONTRACT_MONEY,0,N'')
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END

    IF @V_DT_INTRUST = 1
    BEGIN
        --查询产品名称
        UPDATE #TEMP_SUBPRODUCT
        SET PRODUCT_NAME = B.PRODUCT_NAME
        FROM #TEMP_SUBPRODUCT A,SRV_Intrust.INTRUST.dbo.TPRODUCT B
        WHERE ISNULL(A.PRODUCT_ID,0) = B.PRODUCT_ID
    END
    ELSE
    BEGIN
        --查询产品名称
        UPDATE #TEMP_SUBPRODUCT
        SET PRODUCT_NAME = B.PRODUCT_NAME
        FROM #TEMP_SUBPRODUCT A,INTRUST.dbo.TPRODUCT B
        WHERE ISNULL(A.PRODUCT_ID,0) = B.PRODUCT_ID
    END


    --修改合计金额（万元）
    UPDATE #TEMP_SUBPRODUCT
    SET CONTRACT_MONEY = CONTRACT_MONEY/10000

    SET @V_SQL = N'SELECT PRODUCT_NAME,PROV_LEVEL_NAME,LIST_NAME,CONTRACT_COUNT,CONTRACT_MONEY,VALID_PERIOD_UNIT,EXP_RATE1,AVERAGE_RATE FROM #TEMP_SUBPRODUCT'
    EXECUTE( @V_SQL )
GO
