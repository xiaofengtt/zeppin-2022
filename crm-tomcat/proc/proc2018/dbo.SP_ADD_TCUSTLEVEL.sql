USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_ADD_TCUSTLEVEL @IN_PRODUCT_ID       INTEGER,        --产品ID
                                   @IN_LEVEL_ID         INTEGER,        --类别编号10认购份额20受益份额
                                   @IN_LEVEL_VALUE_NAME NVARCHAR(60),   --当前类别的分类值名称
                                   @IN_MIN_VALUE        DEC(16,3),      --最小值
                                   @IN_MAX_VALUE        DEC(16,3),      --最大值
                                   @IN_INPUT_MAN        INTEGER,        --操作员
                                   @IN_LEVEL_TYPE       INTEGER = 1,    --条件类型：1任意一笔记录在范围内；2所有此类记录在范围内
                                   @IN_SUM_TYPE         INTEGER = 2     --金额汇总类型：1按客户+产品+合同；2按客户+产品；3按客户；为3时PRODUCT_ID值无效
WITH ENCRYPTION
AS
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    SELECT @SBUSI_NAME = N'添加认购份额、受益份额分级设置情况'
    SELECT @SSUMMARY = N'添加认购份额、受益份额分级设置情况'
    SELECT @IBUSI_FLAG = 10110
    SELECT @V_RET_CODE = -10110000

    DECLARE @V_BOOK_CODE INT, @V_INTRUST_OPERATOR INT
    DECLARE @RET INT, @V_DT_INTRUST INT
    SELECT @V_DT_INTRUST = VALUE FROM TSYSCONTROL WHERE FLAG_TYPE = N'DT_INTRUST'

    DECLARE @V_LEVEL_NAME NVARCHAR(60), @V_LEVEL_VALUE_ID INT

    IF @IN_PRODUCT_ID IS NULL SET @IN_PRODUCT_ID = 0
    IF @IN_PRODUCT_ID <> 0
    BEGIN
        IF @V_DT_INTRUST = 1 --启用分布式
        BEGIN
            IF NOT EXISTS(SELECT 1 FROM SRV_Intrust.INTRUST.dbo.TPRODUCT WHERE PRODUCT_ID = @IN_PRODUCT_ID)
                RETURN @V_RET_CODE - 1 --产品不存在
        END
        ELSE IF (@V_DT_INTRUST = 2) AND EXISTS(SELECT * FROM master..sysdatabases WHERE NAME = N'INTRUST') --本地信托数据库
        BEGIN
            IF NOT EXISTS(SELECT 1 FROM INTRUST..TPRODUCT WHERE PRODUCT_ID = @IN_PRODUCT_ID)
                RETURN @V_RET_CODE - 1 --产品不存在
        END
    END
    IF EXISTS(SELECT 1 FROM TCUSTLEVEL WHERE PRODUCT_ID = @IN_PRODUCT_ID AND LEVEL_ID = @IN_LEVEL_ID
                AND (@IN_MIN_VALUE BETWEEN ISNULL(MIN_VALUE,-2147483647) AND ISNULL(MAX_VALUE,2147483647) AND @IN_MIN_VALUE <> MAX_VALUE) )
        RETURN @V_RET_CODE - 2 --输入最小值与现在数值区间重叠
    IF EXISTS(SELECT 1 FROM TCUSTLEVEL WHERE PRODUCT_ID = @IN_PRODUCT_ID AND LEVEL_ID = @IN_LEVEL_ID
                AND (@IN_MAX_VALUE BETWEEN ISNULL(MIN_VALUE,-2147483647) AND ISNULL(MAX_VALUE,2147483647) AND @IN_MAX_VALUE <> MIN_VALUE) )
        RETURN @V_RET_CODE - 3 --输入最大值与现在数值区间重叠

    SET @V_LEVEL_NAME = CASE @IN_LEVEL_ID WHEN 10 THEN '认购份额' WHEN 20 THEN '受益份额' END
    SELECT @V_LEVEL_VALUE_ID = MAX(LEVEL_VALUE_ID)+1 FROM TCUSTLEVEL WHERE PRODUCT_ID = @IN_PRODUCT_ID AND LEVEL_ID = @IN_LEVEL_ID
    IF @V_LEVEL_VALUE_ID IS NULL
        SET @V_LEVEL_VALUE_ID = @IN_LEVEL_ID * 100 + 1

    BEGIN TRANSACTION

    INSERT INTO TCUSTLEVEL(PRODUCT_ID,LEVEL_ID,LEVEL_NAME,LEVEL_VALUE_ID,LEVEL_VALUE_NAME,MIN_VALUE,MAX_VALUE,LEVEL_TYPE,SUM_TYPE)
        VALUES(@IN_PRODUCT_ID,@IN_LEVEL_ID,@V_LEVEL_NAME,@V_LEVEL_VALUE_ID,@IN_LEVEL_VALUE_NAME,@IN_MIN_VALUE,@IN_MAX_VALUE,@IN_LEVEL_TYPE,@IN_SUM_TYPE)
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END

    SELECT @SSUMMARY = N'添加认购份额、受益份额分级设置情况'
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END

    COMMIT TRANSACTION
    RETURN 100
GO
