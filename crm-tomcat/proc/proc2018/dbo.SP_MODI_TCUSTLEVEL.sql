USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_MODI_TCUSTLEVEL @IN_SERIAL_NO        INTEGER,        --序号
                                    @IN_LEVEL_VALUE_NAME NVARCHAR(60),   --当前类别的分类值名称
                                    @IN_MIN_VALUE        DEC(16,3),      --最小值
                                    @IN_MAX_VALUE        DEC(16,3),      --最大值
                                    @IN_INPUT_MAN        INTEGER,        --操作员
                                    @IN_LEVEL_TYPE       INTEGER = 1,    --条件类型：1任意一笔记录在范围内；2所有此类记录在范围内
                                    @IN_SUM_TYPE         INTEGER = 2     --金额汇总类型：1按客户+产品+合同；2按客户+产品；3按客户；为3时PRODUCT_ID值无效
WITH ENCRYPTION
AS
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    SELECT @SBUSI_NAME = N'修改认购份额、受益份额分级设置情况'
    SELECT @SSUMMARY = N'修改认购份额、受益份额分级设置情况'
    SELECT @IBUSI_FLAG = 10110
    SELECT @V_RET_CODE = -10110000

    DECLARE @V_PRODUCT_ID INT, @V_LEVEL_ID INT

    IF NOT EXISTS(SELECT 1 FROM TCUSTLEVEL WHERE SERIAL_NO = @IN_SERIAL_NO)
        RETURN -20702001 --记录不存在

    SELECT @V_PRODUCT_ID = PRODUCT_ID, @V_LEVEL_ID = LEVEL_ID FROM TCUSTLEVEL WHERE SERIAL_NO = @IN_SERIAL_NO

    IF EXISTS(SELECT 1 FROM TCUSTLEVEL WHERE PRODUCT_ID = @V_PRODUCT_ID AND LEVEL_ID = @V_LEVEL_ID AND SERIAL_NO <> @IN_SERIAL_NO
                AND (@IN_MIN_VALUE BETWEEN ISNULL(MIN_VALUE,-2147483647) AND ISNULL(MAX_VALUE,2147483647) AND @IN_MIN_VALUE <> MAX_VALUE) )
        RETURN @V_RET_CODE - 2 --输入最小值与现在数值区间重叠
    IF EXISTS(SELECT 1 FROM TCUSTLEVEL WHERE PRODUCT_ID = @V_PRODUCT_ID AND LEVEL_ID = @V_LEVEL_ID AND SERIAL_NO <> @IN_SERIAL_NO
                AND (@IN_MAX_VALUE BETWEEN ISNULL(MIN_VALUE,-2147483647) AND ISNULL(MAX_VALUE,2147483647) AND @IN_MAX_VALUE <> MIN_VALUE) )
        RETURN @V_RET_CODE - 3 --输入最大值与现在数值区间重叠

    BEGIN TRANSACTION

    UPDATE TCUSTLEVEL
        SET LEVEL_VALUE_NAME = @IN_LEVEL_VALUE_NAME,
            MIN_VALUE = @IN_MIN_VALUE,
            MAX_VALUE = @IN_MAX_VALUE,
            LEVEL_TYPE = @IN_LEVEL_TYPE,
            SUM_TYPE = @IN_SUM_TYPE
        WHERE SERIAL_NO = @IN_SERIAL_NO
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END

    SELECT @SSUMMARY = N'修改认购份额、受益份额分级设置情况'
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END

    COMMIT TRANSACTION
    RETURN 100
GO
