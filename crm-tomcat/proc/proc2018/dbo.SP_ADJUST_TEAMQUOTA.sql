USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_ADJUST_TEAMQUOTA @IN_FUNCTION_ID    INT,        --功能号 101绝对调整 102相对调整
                                     @IN_PRODUCT_ID     INT,        --产品ID
                                     @IN_PREPRODUCT_ID  INT,        --预发行产品ID
                                     @IN_TEAM1_ID       INT,        --团队1ID
                                     @IN_MONEY          DEC(16,3),  --配额金额调整值，增加为正减少为负
                                     @IN_NUM            INT,        --配额合格投资人数量调整值，增加为正减少为负
                                     @IN_TEAM2_ID       INT,        --团队2ID
                                     @IN_INPUT_MAN      INT         --操作员
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_ERROR NVARCHAR(200)
    DECLARE @IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    DECLARE @V_PRE_MONEY DECIMAL(16,3), @V_QUOTAMONEY_SUM DECIMAL(16,3), @V_QUOTANUM INT
    SELECT @SBUSI_NAME = N'调整团队配额'
    SELECT @SSUMMARY = N'调整团队配额'
    SELECT @IBUSI_FLAG = 32003

    SET @IN_PRODUCT_ID = ISNULL(@IN_PRODUCT_ID,0)
    SET @IN_PREPRODUCT_ID = ISNULL(@IN_PREPRODUCT_ID,0)
    DECLARE @V_PRODUCT_NAME NVARCHAR(100), @V_QUOTACHECK_FLAG INT, @V_LIST_ID INT

    BEGIN TRY
    --1.业务逻辑与操作
    IF @IN_FUNCTION_ID NOT IN (101,102)
    BEGIN
        SET @V_ERROR = N'无效的功能号！'
        RAISERROR(@V_ERROR,16,3)
    END
    IF @IN_PREPRODUCT_ID <> 0
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM TPREPRODUCT WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID)
        BEGIN
            SET @V_ERROR = N'预发行产品不存在！'
            RAISERROR(@V_ERROR,16,3)
        END
        SELECT @V_PRODUCT_NAME = PREPRODUCT_NAME, @V_QUOTACHECK_FLAG = QUOTACHECK_FLAG FROM TPREPRODUCT WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
        --预期发行金额
        SELECT @V_PRE_MONEY = PRE_MONEY FROM TPREPRODUCT WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
        --产品所有团队的总配额
        SELECT @V_QUOTAMONEY_SUM = ISNULL(SUM(QUOTAMONEY),0) + ISNULL(@IN_MONEY,0), @V_QUOTANUM = SUM(ISNULL(QUOTA_QUALIFIED_NUM,0)) + @IN_NUM
            FROM TTEAMQUOTA WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID        
        IF ISNULL(@V_QUOTAMONEY_SUM,0) > ISNULL(@V_PRE_MONEY,0) BEGIN
            SET @V_ERROR = N'配额不能大于预期发行金额！'
            RAISERROR(@V_ERROR,16,3)
        END
        IF ISNULL(@V_QUOTANUM,0) > 50 BEGIN
            SET @V_ERROR = N'合格投资人数量配额不能超过50个！'
            RAISERROR(@V_ERROR,16,3)
        END
    END
    IF @IN_PRODUCT_ID <> 0
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM INTRUST..TPRODUCT WHERE PRODUCT_ID = @IN_PRODUCT_ID)
        BEGIN
            SET @V_ERROR = N'产品不存在！'
            RAISERROR(@V_ERROR,16,3)
        END
        SELECT @V_PRODUCT_NAME = PRODUCT_NAME FROM INTRUST..TPRODUCT WHERE PRODUCT_ID = @IN_PRODUCT_ID
    END
    IF NOT EXISTS(SELECT 1 FROM TManagerTeams WHERE TEAM_ID = @IN_TEAM1_ID)
    BEGIN
        SET @V_ERROR = N'团队编号不存在！'
        RAISERROR(@V_ERROR,16,3)
    END
    IF @IN_FUNCTION_ID = 102 AND NOT EXISTS(SELECT 1 FROM TManagerTeams WHERE TEAM_ID = @IN_TEAM2_ID)
    BEGIN
        SET @V_ERROR = N'团队编号不存在！'
        RAISERROR(@V_ERROR,16,3)
    END
    IF @V_QUOTACHECK_FLAG NOT IN (2,3,4)
    BEGIN
        SET @V_ERROR = N'当前配额信息未审核，不可做调整，可以直接编辑！'
        RAISERROR(@V_ERROR,16,3)
    END

    BEGIN TRANSACTION
    IF @IN_PRODUCT_ID <> 0  --当@IN_PRODUCT_ID<>0时，调整功能针对【产品】；
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM TTEAMQUOTA WHERE TEAM_ID = @IN_TEAM1_ID AND PRODUCT_ID = @IN_PRODUCT_ID)
            INSERT INTO TTEAMQUOTA(PRODUCT_ID,TEAM_ID,QUOTAMONEY,QUOTA_QUALIFIED_NUM)
                VALUES (@IN_PRODUCT_ID,@IN_TEAM1_ID,@IN_MONEY,@IN_NUM)
        ELSE
            UPDATE TTEAMQUOTA SET QUOTAMONEY = ISNULL(QUOTAMONEY,0) + @IN_MONEY, QUOTA_QUALIFIED_NUM = ISNULL(QUOTA_QUALIFIED_NUM,0) + @IN_NUM
                WHERE TEAM_ID = @IN_TEAM1_ID AND PRODUCT_ID = @IN_PRODUCT_ID
        IF @IN_FUNCTION_ID = 102
        BEGIN
            IF NOT EXISTS(SELECT 1 FROM TTEAMQUOTA WHERE TEAM_ID = @IN_TEAM2_ID AND PRODUCT_ID = @IN_PRODUCT_ID)
                INSERT INTO TTEAMQUOTA(PRODUCT_ID,TEAM_ID,QUOTAMONEY,QUOTA_QUALIFIED_NUM)
                    VALUES (@IN_PRODUCT_ID,@IN_TEAM2_ID,-@IN_MONEY,-@IN_NUM)
            ELSE
                UPDATE TTEAMQUOTA SET QUOTAMONEY = ISNULL(QUOTAMONEY,0) - @IN_MONEY, QUOTA_QUALIFIED_NUM = ISNULL(QUOTA_QUALIFIED_NUM,0) - @IN_NUM
                    WHERE TEAM_ID = @IN_TEAM2_ID AND PRODUCT_ID = @IN_PRODUCT_ID
        END
    END
    IF @IN_PREPRODUCT_ID <> 0  --当@IN_PREPORDUCT_ID<>0时，调整功能针对【预发行产品】
    BEGIN
        UPDATE TPREPRODUCT SET QUOTACHECK_FLAG = 3 WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
        SELECT @V_LIST_ID = ISNULL(MAX(LIST_ID),0) FROM HTEAMQUOTA WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
        IF @V_QUOTACHECK_FLAG = 2 AND @V_LIST_ID = 0 --如果是第1次调整，将初始配额数据作为批次0保存在历史表中
        BEGIN
            INSERT INTO HTEAMQUOTA(LIST_ID,ADJUST_TIME,PRODUCT_ID,TEAM_ID,QUOTAMONEY,ALREADYSALE,QUOTA_QUALIFIED_NUM,ALREADY_QUALIFIED_NUM,PREPRODUCT_ID,PRE_SALEMONEY,PRE_QUALIFIEDNUM)
                SELECT @V_LIST_ID,GETDATE(),PRODUCT_ID,TEAM_ID,QUOTAMONEY,ALREADYSALE,QUOTA_QUALIFIED_NUM,ALREADY_QUALIFIED_NUM,PREPRODUCT_ID,PRE_SALEMONEY,PRE_QUALIFIEDNUM
                FROM TTEAMQUOTA WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
        END
        IF NOT EXISTS(SELECT 1 FROM TTEAMQUOTA WHERE TEAM_ID = @IN_TEAM1_ID AND PREPRODUCT_ID = @IN_PREPRODUCT_ID)
            INSERT INTO TTEAMQUOTA(PRODUCT_ID,PREPRODUCT_ID,TEAM_ID,QUOTAMONEY,QUOTA_QUALIFIED_NUM)
                VALUES (@IN_PRODUCT_ID,@IN_PREPRODUCT_ID,@IN_TEAM1_ID,@IN_MONEY,@IN_NUM)
        ELSE
            UPDATE TTEAMQUOTA SET QUOTAMONEY = ISNULL(QUOTAMONEY,0) + @IN_MONEY, QUOTA_QUALIFIED_NUM = ISNULL(QUOTA_QUALIFIED_NUM,0) + @IN_NUM
                WHERE TEAM_ID = @IN_TEAM1_ID AND PREPRODUCT_ID = @IN_PREPRODUCT_ID
        IF @IN_FUNCTION_ID = 102
        BEGIN
            IF NOT EXISTS(SELECT 1 FROM TTEAMQUOTA WHERE TEAM_ID = @IN_TEAM2_ID AND PREPRODUCT_ID = @IN_PREPRODUCT_ID)
                INSERT INTO TTEAMQUOTA(PRODUCT_ID,PREPRODUCT_ID,TEAM_ID,QUOTAMONEY,QUOTA_QUALIFIED_NUM)
                    VALUES (@IN_PRODUCT_ID,@IN_PREPRODUCT_ID,@IN_TEAM1_ID,-@IN_MONEY,-@IN_NUM)
            ELSE
                UPDATE TTEAMQUOTA SET QUOTAMONEY = ISNULL(QUOTAMONEY,0) - @IN_MONEY, QUOTA_QUALIFIED_NUM = ISNULL(QUOTA_QUALIFIED_NUM,0) - @IN_NUM
                    WHERE TEAM_ID = @IN_TEAM2_ID AND PREPRODUCT_ID = @IN_PREPRODUCT_ID
        END
        IF @V_QUOTACHECK_FLAG IN (2,4) --生成新的LIST_ID和批次数据
        BEGIN
            SELECT @V_LIST_ID = @V_LIST_ID + 1
            INSERT INTO HTEAMQUOTA(LIST_ID,ADJUST_TIME,PRODUCT_ID,TEAM_ID,QUOTAMONEY,ALREADYSALE,QUOTA_QUALIFIED_NUM,ALREADY_QUALIFIED_NUM,PREPRODUCT_ID,PRE_SALEMONEY,PRE_QUALIFIEDNUM)
                SELECT @V_LIST_ID,GETDATE(),PRODUCT_ID,TEAM_ID,QUOTAMONEY,ALREADYSALE,QUOTA_QUALIFIED_NUM,ALREADY_QUALIFIED_NUM,PREPRODUCT_ID,PRE_SALEMONEY,PRE_QUALIFIEDNUM
                FROM TTEAMQUOTA WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
        END
        ELSE  --如果处于配额调整中，取当前取大LIST_ID，更新本批次数据
        BEGIN
            UPDATE HTEAMQUOTA
                SET ADJUST_TIME = GETDATE(), QUOTAMONEY = B.QUOTAMONEY, QUOTA_QUALIFIED_NUM = B.QUOTA_QUALIFIED_NUM
                FROM HTEAMQUOTA A, TTEAMQUOTA B
                WHERE A.PREPRODUCT_ID = B.PREPRODUCT_ID AND A.TEAM_ID = B.TEAM_ID
                    AND A.PREPRODUCT_ID = @IN_PREPRODUCT_ID AND A.LIST_ID = @V_LIST_ID
        END
    END
    --2.日志
    SET @SSUMMARY = N'调整团队配额，产品：' + @V_PRODUCT_NAME
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY) VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    COMMIT TRANSACTION
    END TRY
    --3.异常处理
    BEGIN CATCH
        IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)
        SELECT @V_ERROR_STR = N'Message:%s,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()
        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)
        RETURN -100
    END CATCH
    RETURN 100
GO
