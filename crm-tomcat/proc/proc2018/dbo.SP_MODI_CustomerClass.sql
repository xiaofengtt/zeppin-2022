USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_MODI_CustomerClass @IN_CUST_ID          INTEGER,  --客户ID
                                       @IN_CLASSDEFINE_ID   INTEGER,  --分级定义ID。为空时，处理当前客户所有分级
                                       @IN_CLASSDETAIL_ID   INTEGER,  --分级明细ID。为空时，根据分级定义ID自动归类
                                       @IN_INPUT_MAN        INTEGER   --操作员
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_RET_CODE INT, @IBUSI_FLAG INT, @SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    SELECT @V_RET_CODE = -20206000, @IBUSI_FLAG = 20206
    SELECT @SBUSI_NAME = N'客户评级', @SSUMMARY = N'客户评级'

    DECLARE @RET INT
    DECLARE @V_PreviousDETAIL_ID INTEGER, @V_PreviousDETAIL_NAME NVARCHAR(60), @V_CUST_NAME NVARCHAR(100),
            @V_CLASSDEFINE_NAME NVARCHAR(60),@V_CLASSDETAIL_NAME NVARCHAR(60), @V_CHECK_FLAG INT
    BEGIN TRY
    IF NOT EXISTS(SELECT 1 FROM TCustomers WHERE CUST_ID = @IN_CUST_ID)
        RAISERROR('客户不存在',16,1) --客户不存在
    SELECT @V_CUST_NAME = CUST_NAME FROM TCustomers WHERE CUST_ID = @IN_CUST_ID
    SELECT @V_CLASSDEFINE_NAME = CLASSDEFINE_NAME,@V_CLASSDETAIL_NAME = CLASSDETAIL_NAME FROM TCustClassDetail
        WHERE CLASSDEFINE_ID = @IN_CLASSDEFINE_ID AND CLASSDETAIL_ID = @IN_CLASSDETAIL_ID
    SELECT @V_CHECK_FLAG = 1
    IF EXISTS(SELECT 1 FROM TCustClassDefine WHERE CLASSDEFINE_ID = @IN_CLASSDEFINE_ID AND CD_NO = 2)--CD_NO:1客户评级；2客户分类
        SELECT @V_CHECK_FLAG = 2
    BEGIN TRANSACTION

    --临时表保存客户的分级信息，再将临时表的分级信息复制或更新到TCustomerClass
    CREATE TABLE #TMP_AUTO_CustomerClass(
        CUST_ID         INTEGER, --客户ID
        CLASSDEFINE_ID  INTEGER, --分级定义ID
        CLASSDETAIL_ID  INTEGER  --分级明细ID
    )

    --如果输入了分级定义ID和分级明细ID，根据输入设置
    IF ISNULL(@IN_CLASSDEFINE_ID,0) <> 0
    BEGIN
        IF ISNULL(@IN_CLASSDETAIL_ID,0) <> 0
        BEGIN
        IF NOT EXISTS(SELECT 1 FROM TCustomerClass WHERE CUST_ID = @IN_CUST_ID AND CLASSDEFINE_ID = @IN_CLASSDEFINE_ID)
            INSERT INTO TCustomerClass(CUST_ID,CLASSDEFINE_ID,CLASSDEFINE_NAME,CLASSDETAIL_ID,CLASSDETAIL_NAME,INSERTMAN,CHECK_FLAG)
                SELECT @IN_CUST_ID,@IN_CLASSDEFINE_ID,B.CLASSDEFINE_NAME,@IN_CLASSDETAIL_ID,B.CLASSDETAIL_NAME,@IN_INPUT_MAN,@V_CHECK_FLAG
                FROM TCustClassDetail B
                WHERE B.CLASSDEFINE_ID = @IN_CLASSDEFINE_ID AND B.CLASSDETAIL_ID = @IN_CLASSDETAIL_ID
        ELSE
        BEGIN
            SELECT @V_PreviousDETAIL_ID = CLASSDETAIL_ID, @V_PreviousDETAIL_NAME = CLASSDETAIL_NAME
                FROM TCustomerClass
                WHERE CUST_ID = @IN_CUST_ID AND CLASSDEFINE_ID = @IN_CLASSDEFINE_ID
            IF NOT EXISTS(SELECT 1 FROM TCustomerClass WHERE CUST_ID = @IN_CUST_ID AND CLASSDEFINE_ID = @IN_CLASSDEFINE_ID AND CLASSDETAIL_ID = @IN_CLASSDETAIL_ID)
                UPDATE TCustomerClass
                    SET CLASSDETAIL_ID = @IN_CLASSDETAIL_ID, CLASSDEFINE_NAME = @V_CLASSDEFINE_NAME, CLASSDETAIL_NAME = @V_CLASSDETAIL_NAME,
                        CHECK_FLAG = @V_CHECK_FLAG,PreviousDETAIL_ID = @V_PreviousDETAIL_ID, PreviousDETAIL_NAME = @V_PreviousDETAIL_NAME, INSERTMAN = @IN_INPUT_MAN
                    WHERE CUST_ID = @IN_CUST_ID AND CLASSDEFINE_ID = @IN_CLASSDEFINE_ID
        END
        END
        ELSE
			DELETE FROM TCustomerClass WHERE CUST_ID = @IN_CUST_ID AND CLASSDEFINE_ID = @IN_CLASSDEFINE_ID
    END
    ELSE --未输入分级定义ID和分级明细ID，根据自动分类设置
    BEGIN
        EXEC @RET = SP_AUTO_CustomerClass @IN_CUST_ID, @IN_INPUT_MAN
        
    END

    SELECT @SSUMMARY = N'客户评级，客户名称：' + @V_CUST_NAME
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    
    COMMIT TRANSACTION
    END TRY

    BEGIN CATCH
        IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION

        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)

        SELECT @V_ERROR_STR = N'Message:%s,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)

        RETURN -100
    END CATCH
    RETURN 100
GO
