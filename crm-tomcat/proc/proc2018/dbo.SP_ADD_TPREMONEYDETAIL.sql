USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE SP_ADD_TPREMONEYDETAIL @IN_PRE_SERIAL_NO INT, --预约表主键(EFCRM..TPRECONTRACT.SERIAL_NO)
                                        @IN_DZ_TIME       DATETIME,     --到帐时间
                                        @IN_DZ_MONEY      DEC(16,3),    --到帐金额
                                        @IN_JK_TYPE       NVARCHAR(10), --缴款方式(1114)
                                        @IN_INPUT_MAN     INT,
                                        @IN_ONWAY_FLAG    INT = 0       --在途资金标志:1是
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_ERROR NVARCHAR(200)
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    DECLARE @V_AUTO_QUOTA_VALUE INT/*自动配额阀值*/,@V_PREPRODUCT_FLAG INT
    DECLARE @V_DZ_MONEY_TOTAL DEC(16,3),@V_ADD_QUOTA_FLAG INT,@V_TEAM_ID INT
    SELECT @V_RET_CODE = -20701000
    SELECT @IBUSI_FLAG = 20701
    SELECT @SBUSI_NAME = N'客户预约到帐'
    SELECT @SSUMMARY = N'客户预约到帐'

    DECLARE @V_JK_TYPE_NAME NVARCHAR(30), @V_SERIAL_NO INT
    DECLARE @V_END_DATE INT, @V_PRE_CODE NVARCHAR(16), @V_PREPRODUCT_ID INT, @V_PREPRODUCT_NAME NVARCHAR(100),
            @V_PRE_MONEY DEC(16,3), @V_RG_MONEY DEC(16,3),@V_PRODUCT_ID INT, @V_SUB_PRODUCT_ID INT,
            @V_LINK_MAN INT

    ------------------------------------------------------------------------
    BEGIN TRY
    --1.业务逻辑与操作
    --校验
    SELECT @V_JK_TYPE_NAME = TYPE_CONTENT FROM TDICTPARAM WHERE TYPE_VALUE = @IN_JK_TYPE
    IF @V_JK_TYPE_NAME IS NULL
    BEGIN
        SET @V_ERROR = N'缴款方式【'+@IN_JK_TYPE+N'】不存在！'
        RAISERROR(@V_ERROR,16,3)
    END
    IF NOT EXISTS(SELECT 1 FROM TPRECONTRACT WHERE SERIAL_NO = @IN_PRE_SERIAL_NO)
    BEGIN
        SET @V_ERROR = N'预约记录不存在！'
        RAISERROR(@V_ERROR,16,3)
    END
    SELECT @V_PREPRODUCT_ID = PREPRODUCT_ID, @V_PRE_MONEY = PRE_MONEY, @V_RG_MONEY = ISNULL(RG_MONEY,0), @V_PRE_CODE = PRE_CODE,
		@V_ADD_QUOTA_FLAG=ADD_QUOTA_FLAG, @V_PRODUCT_ID=PRODUCT_ID,@V_SUB_PRODUCT_ID=SUB_PRODUCT_ID,@V_LINK_MAN=LINK_MAN,
		@V_PREPRODUCT_FLAG=ISNULL(PREPRODUCT_FLAG,0)
        FROM TPRECONTRACT WHERE SERIAL_NO = @IN_PRE_SERIAL_NO
    SELECT @V_PREPRODUCT_NAME = PREPRODUCT_NAME FROM TPREPRODUCT WHERE PREPRODUCT_ID = @V_PREPRODUCT_ID
    SELECT @V_TEAM_ID=TEAM_ID FROM TManagerTeamMembers WHERE MANAGERID=@V_LINK_MAN
	IF @V_RG_MONEY + @IN_DZ_MONEY > @V_PRE_MONEY
    BEGIN
        SET @V_ERROR = N'本次到帐后到帐总金额大于预约金额！'
        RAISERROR(@V_ERROR,16,3)
    END

    ------------------------------------------------------------------------
    BEGIN TRANSACTION
    
    --自动增加小额份额的大额销售阀值 0不自动增加;其他值为大额阀值(单位万元,当预约额大于此值时,自动增加一份小额份额)
    SELECT @V_AUTO_QUOTA_VALUE=ISNULL(MAX(VALUE),0) FROM TSYSCONTROL WHERE FLAG_TYPE='AUTO_QUOTA'
    --计算已到账金额总计
    SELECT @V_DZ_MONEY_TOTAL=ISNULL(SUM(DZ_MONEY),0)+@IN_DZ_MONEY FROM TPREMONEYDETAIL WHERE PRE_SERIAL_NO=@IN_PRE_SERIAL_NO
	--根据条件自动增加小额配额:预约金额大于设置的金额(有设置),且没有增加过,且本团队分配过配额
    IF @V_DZ_MONEY_TOTAL>=@V_AUTO_QUOTA_VALUE*10000 AND @V_AUTO_QUOTA_VALUE>0 AND ISNULL(@V_ADD_QUOTA_FLAG,0)<>1 AND EXISTS (SELECT * FROM TTEAMQUOTA WHERE PRODUCT_ID=@V_PRODUCT_ID AND SUB_PRODUCT_ID=@V_SUB_PRODUCT_ID AND TEAM_ID=@V_TEAM_ID)
    BEGIN
		--找出已分配的小额数
		DECLARE @V_QUOTA_NUM_M INT
		SELECT @V_QUOTA_NUM_M=ISNULL(SUM(QUOTA_QUALIFIED_NUM),0) FROM TTEAMQUOTA WHERE PRODUCT_ID=@V_PRODUCT_ID AND PREPRODUCT_ID=@V_PREPRODUCT_ID AND SUB_PRODUCT_ID=@V_SUB_PRODUCT_ID AND ISNULL(PREPRODUCT_FLAG,0)=@V_PREPRODUCT_FLAG AND TEAM_ID IN (SELECT TEAM_ID FROM TManagerTeams WHERE ISNULL(PARENT_ID,0)=0)
		IF @V_QUOTA_NUM_M>0 AND @V_QUOTA_NUM_M<50
		BEGIN
			--修改本团队的配额小额个数
			UPDATE TPERSONALQUOTA SET QUOTA_QUALIFIED_NUM=QUOTA_QUALIFIED_NUM+1 WHERE PRODUCT_ID=@V_PRODUCT_ID AND PREPRODUCT_ID=@V_PREPRODUCT_ID AND SUB_PRODUCT_ID=@V_SUB_PRODUCT_ID AND ISNULL(PREPRODUCT_FLAG,0)=@V_PREPRODUCT_FLAG AND OP_CODE=@V_LINK_MAN
			UPDATE TTEAMQUOTA SET QUOTA_QUALIFIED_NUM=QUOTA_QUALIFIED_NUM+1 WHERE PRODUCT_ID=@V_PRODUCT_ID AND PREPRODUCT_ID=@V_PREPRODUCT_ID AND SUB_PRODUCT_ID=@V_SUB_PRODUCT_ID AND ISNULL(PREPRODUCT_FLAG,0)=@V_PREPRODUCT_FLAG AND TEAM_ID=@V_TEAM_ID
			--找父团队,顺着树结构一直更新到最高级团队
			DECLARE @V_TEAM_ID_F INT
			SELECT @V_TEAM_ID_F=PARENT_ID FROM TManagerTeams WHERE TEAM_ID=@V_TEAM_ID
			WHILE ISNULL(@V_TEAM_ID_F,0)>0
			BEGIN --修改父团队的配额小额个数
				UPDATE TTEAMQUOTA SET QUOTA_QUALIFIED_NUM=QUOTA_QUALIFIED_NUM+1 WHERE PRODUCT_ID=@V_PRODUCT_ID AND PREPRODUCT_ID=@V_PREPRODUCT_ID AND SUB_PRODUCT_ID=@V_SUB_PRODUCT_ID AND ISNULL(PREPRODUCT_FLAG,0)=@V_PREPRODUCT_FLAG AND TEAM_ID=@V_TEAM_ID_F
				SELECT @V_TEAM_ID_F=ISNULL(PARENT_ID,0) FROM TManagerTeams WHERE TEAM_ID=@V_TEAM_ID_F
			END
			UPDATE TPRECONTRACT SET ADD_QUOTA_FLAG = 1 WHERE SERIAL_NO = @IN_PRE_SERIAL_NO
		END
	END
    UPDATE TPRECONTRACT SET RG_MONEY = ISNULL(RG_MONEY,0) + @IN_DZ_MONEY, RG_DATE = DBO.GETDATEINT(@IN_DZ_TIME),FLOW_STATUS=2 WHERE SERIAL_NO = @IN_PRE_SERIAL_NO
    INSERT INTO TPREMONEYDETAIL(PRE_SERIAL_NO,DZ_DATE,DZ_MONEY,JK_TYPE,JK_TYPE_NAME,INPUT_MAN,ONWAY_FLAG)
        VALUES(@IN_PRE_SERIAL_NO,@IN_DZ_TIME,@IN_DZ_MONEY,@IN_JK_TYPE,@V_JK_TYPE_NAME,@IN_INPUT_MAN,@IN_ONWAY_FLAG)
     
    SET @V_SERIAL_NO = @@IDENTITY
        --20180704同步添加至销量统计结果表
    DECLARE @V_PRE_PRODUCT_TYPE INT,@V_RECORDS_COUNT INT
    DECLARE @V_PRE_PRODUCT_TYPE_NAME NVARCHAR(50)
    SET @V_PRE_PRODUCT_TYPE = 1
    SET @V_RECORDS_COUNT = 1
    SET @V_PRE_PRODUCT_TYPE_NAME = N'直销(工作台)'
    INSERT INTO TSALESRESULTFORSTATISTIC(PRE_SERIAL_NO,DZ_DATE,DZ_MONEY,JK_TYPE,JK_TYPE_NAME,INPUT_MAN,ONWAY_FLAG,PRE_PRODUCT_TYPE,PRE_PRODUCT_TYPE_NAME,FK_TPREMONEYDETAIL,RECORDS_COUNT)
        VALUES(@IN_PRE_SERIAL_NO,@IN_DZ_TIME,@IN_DZ_MONEY,@IN_JK_TYPE,@V_JK_TYPE_NAME,@IN_INPUT_MAN,@IN_ONWAY_FLAG,@V_PRE_PRODUCT_TYPE,@V_PRE_PRODUCT_TYPE_NAME,@V_SERIAL_NO,@V_RECORDS_COUNT)
      
    --2.日志
    SELECT @SSUMMARY = N'客户预约到帐，产品名称：' + @V_PREPRODUCT_NAME
                                     + N'预约号：' + @V_PRE_CODE
                                   + N'到帐金额：' + CONVERT(NVARCHAR(30),@IN_DZ_MONEY)
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY) VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    COMMIT TRANSACTION
    END TRY
    --3.异常处理
    BEGIN CATCH
        IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)
        SELECT @V_ERROR_STR = N'Message:%s,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()
        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)
        RETURN -100
    END CATCH
    RETURN @V_SERIAL_NO
GO
