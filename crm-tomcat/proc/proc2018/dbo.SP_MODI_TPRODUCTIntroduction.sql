USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_MODI_TPRODUCTIntroduction
				@IN_PRODUCT_ID      INTEGER ,        --产品ID
				@IN_PRE_PRODUCT_ID  INTEGER,         --预发行产品ID
				@IN_PRODUCT_DESC    NTEXT,           --产品说明书 (当不修改时传入NULL)
				@IN_FEASSTUDY       NVARCHAR(500) ,  --可研报告(PPT格式)，这里存放上传文件的路径 (当不修改时传入NULL)
				@IN_FEASSTUDY_EASY  NVARCHAR(500) ,  --可研报告(PPT格式)简化版，这里存放上传文件的路径 (当不修改时传入NULL)
				@IN_NOTICES         NTEXT,           --推介通知单 (当不修改时传入NULL)
				@IN_STUDY_VOICE     NVARCHAR(500) ,  --售前培训会录音 (当不修改时传入NULL)
				@IN_INPUT_MAN       INTEGER          --录入人
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200),@V_DATE INT
    DECLARE @V_PRODUCT_NAME NVARCHAR(100)
    SELECT @IBUSI_FLAG = 21701
    SELECT @SBUSI_NAME = N'保存产品推介材料',@SSUMMARY=''
    SET @V_DATE=CONVERT(INT,CONVERT(CHAR(8),GETDATE(),112))

    BEGIN TRY

    BEGIN TRANSACTION
    IF ISNULL(@IN_PRODUCT_ID,0)=0 AND ISNULL(@IN_PRE_PRODUCT_ID,0)=0
		RAISERROR('未指定具体的产品',16,1)

    IF @IN_PRODUCT_DESC IS NOT NULL
    BEGIN
		UPDATE TPRODUCTIntroduction SET PRODUCT_DESC = @IN_PRODUCT_DESC, INPUT_MAN = @IN_INPUT_MAN, INPUT_DATE=@V_DATE
			WHERE PRODUCT_ID = @IN_PRODUCT_ID AND PRE_PRODUCT_ID=@IN_PRE_PRODUCT_ID
		IF @@ROWCOUNT=0
			INSERT INTO TPRODUCTIntroduction(PRODUCT_ID,PRE_PRODUCT_ID,PRODUCT_DESC,INPUT_MAN,INPUT_DATE)
				VALUES(@IN_PRODUCT_ID,@IN_PRE_PRODUCT_ID,@IN_PRODUCT_DESC,@IN_INPUT_MAN,@V_DATE)
		SELECT @SSUMMARY=@SSUMMARY+'产品说明书；'
	END
	IF @IN_FEASSTUDY IS NOT NULL
	BEGIN
		UPDATE TPRODUCTIntroduction SET FEASSTUDY = @IN_FEASSTUDY, INPUT_MAN = @IN_INPUT_MAN, INPUT_DATE=@V_DATE
			WHERE PRODUCT_ID = @IN_PRODUCT_ID AND PRE_PRODUCT_ID=@IN_PRE_PRODUCT_ID
		IF @@ROWCOUNT=0
			INSERT INTO TPRODUCTIntroduction(PRODUCT_ID,PRE_PRODUCT_ID,FEASSTUDY,INPUT_MAN,INPUT_DATE)
				VALUES(@IN_PRODUCT_ID,@IN_PRE_PRODUCT_ID,@IN_FEASSTUDY,@IN_INPUT_MAN,@V_DATE)
		SELECT @SSUMMARY=@SSUMMARY+'可研报告；'
	END
	IF @IN_FEASSTUDY_EASY IS NOT NULL
	BEGIN
		UPDATE TPRODUCTIntroduction SET FEASSTUDY_EASY = @IN_FEASSTUDY_EASY, INPUT_MAN = @IN_INPUT_MAN, INPUT_DATE=@V_DATE
			WHERE PRODUCT_ID = @IN_PRODUCT_ID AND PRE_PRODUCT_ID=@IN_PRE_PRODUCT_ID
		IF @@ROWCOUNT=0
			INSERT INTO TPRODUCTIntroduction(PRODUCT_ID,PRE_PRODUCT_ID,FEASSTUDY_EASY,INPUT_MAN,INPUT_DATE)
				VALUES(@IN_PRODUCT_ID,@IN_PRE_PRODUCT_ID,@IN_FEASSTUDY_EASY,@IN_INPUT_MAN,@V_DATE)
		SELECT @SSUMMARY=@SSUMMARY+'可研报告简化版；'
	END
	IF @IN_NOTICES IS NOT NULL
	BEGIN
		UPDATE TPRODUCTIntroduction SET NOTICES = @IN_NOTICES, INPUT_MAN = @IN_INPUT_MAN, INPUT_DATE=@V_DATE
			WHERE PRODUCT_ID = @IN_PRODUCT_ID AND PRE_PRODUCT_ID=@IN_PRE_PRODUCT_ID
		IF @@ROWCOUNT=0
			INSERT INTO TPRODUCTIntroduction(PRODUCT_ID,PRE_PRODUCT_ID,NOTICES,INPUT_MAN,INPUT_DATE)
				VALUES(@IN_PRODUCT_ID,@IN_PRE_PRODUCT_ID,@IN_NOTICES,@IN_INPUT_MAN,@V_DATE)
		SELECT @SSUMMARY=@SSUMMARY+'推介通知单；'
	END
	IF @IN_STUDY_VOICE IS NOT NULL
	BEGIN
		UPDATE TPRODUCTIntroduction SET STUDY_VOICE = @IN_STUDY_VOICE, INPUT_MAN = @IN_INPUT_MAN, INPUT_DATE=@V_DATE
			WHERE PRODUCT_ID = @IN_PRODUCT_ID AND PRE_PRODUCT_ID=@IN_PRE_PRODUCT_ID
		IF @@ROWCOUNT=0
			INSERT INTO TPRODUCTIntroduction(PRODUCT_ID,PRE_PRODUCT_ID,STUDY_VOICE,INPUT_MAN,INPUT_DATE)
				VALUES(@IN_PRODUCT_ID,@IN_PRE_PRODUCT_ID,@IN_STUDY_VOICE,@IN_INPUT_MAN,@V_DATE)
		SELECT @SSUMMARY=@SSUMMARY+'售前培训会录音；'
	END
    --保存日志
    IF ISNULL(@IN_PRODUCT_ID,0)<>0
		SELECT @V_PRODUCT_NAME=PRODUCT_NAME FROM INTRUST..TPRODUCT WHERE PRODUCT_ID=@IN_PRODUCT_ID
    ELSE IF ISNULL(@IN_PRE_PRODUCT_ID,0)<>0
		SELECT @V_PRODUCT_NAME=PREPRODUCT_NAME FROM TPREPRODUCT WHERE PREPRODUCT_ID=@IN_PRE_PRODUCT_ID
    SET @SSUMMARY=N'保存产品['+ISNULL(@V_PRODUCT_NAME,'')+']推介材料:'+@SSUMMARY
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    
    COMMIT TRANSACTION
    END TRY

    BEGIN CATCH
        IF @@TRANCOUNT > 0 
            ROLLBACK TRANSACTION 

        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)
        SELECT @V_ERROR_STR = N',Message %s,Error %d,Level %d,State %d,Procedure %s,Line %d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE, @V_ERROR_NUMBER,@V_ERROR_SEVERITY,
                  @V_ERROR_STATE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)
        RETURN -100

    END CATCH
    RETURN 100
GO
