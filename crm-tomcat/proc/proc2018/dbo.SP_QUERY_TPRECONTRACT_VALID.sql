USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_QUERY_TPRECONTRACT_VALID @IN_BOOK_CODE 		INT,
                                             @IN_PRODUCT_ID 	INT,
                                             @IN_PRE_CODE 		NVARCHAR(16),
                                             @IN_LINK_MAN 		INT = NULL,
                                             @IN_INPUT_MAN 		INT,
                                             @IN_CUST_NAME 		NVARCHAR(100) = '',
                                             @IN_CUST_TYPE		INT=0,					--客户类型
                                             @IN_MAX_RG_MONEY	DECIMAL(16,3)=NULL,		--最大预约金额
                                             @IN_MIN_RG_MONEY	DECIMAL(16,3)=NULL,		--最小预约金额
                                             @IN_CUST_SOURCE	NVARCHAR(10)=NULL,		--客户来源
                                             @IN_GroupID        INTEGER=NULL,           --客户分组序号
                                             @IN_CLASSDETAIL_ID INTEGER=NULL,           --客户分级ID
                                             @IN_MONEY_STATUS   INT = NULL,             --缴款状态 0全部 1已缴款 2未缴款
                                             @IN_SUB_PRODUCT_ID INT=0,                  --子产品ID
                                             @IN_PREPRODUCT_ID 	INT=0                   --预发行产品ID 
WITH ENCRYPTION
AS
--20409: The Products can be accessed. START
    DECLARE @V_SW20409 INT,@V_PREPRODUCT_ID INT
    SELECT @V_SW20409 = VALUE FROM INTRUST..TSYSCONTROL WHERE FLAG_TYPE = 'SW20409'
    IF @V_SW20409 IS NULL SELECT @V_SW20409 = 0
    DECLARE @V_PRODUCTS TABLE(PRODUCT_ID INT)
    IF @V_SW20409 = 1
        INSERT INTO @V_PRODUCTS
            SELECT PRODUCT_ID FROM INTRUST..TPRODUCT WHERE BOOK_CODE = @IN_BOOK_CODE
                AND(INTRUST_FLAG1 IN ( SELECT FUNC_ID-2040900 FROM INTRUST..TOPRIGHT WHERE MENU_ID = '20409' AND FUNC_ID > 2040900 AND FUNC_ID <= 2040902 AND OP_CODE = @IN_INPUT_MAN )
                    OR DEPART_ID IN (SELECT B.DEPART_ID FROM INTRUST..TOPRIGHT A,TOPERATOR B WHERE A.OP_CODE = B.OP_CODE AND A.MENU_ID = '20409' AND A.FUNC_ID = 2040903 AND A.OP_CODE = @IN_INPUT_MAN)
                    OR PRODUCT_ID IN ( SELECT FUNC_ID FROM INTRUST..TOPRIGHT WHERE MENU_ID = '20409' AND FUNC_ID < 2040900 AND OP_CODE = @IN_INPUT_MAN)
                    OR ADMIN_MANAGER = @IN_INPUT_MAN OR INPUT_MAN = @IN_INPUT_MAN 
                    OR SUB_MAN = @IN_INPUT_MAN OR SUB_MAN2 = @IN_INPUT_MAN
                    OR CASH_MAN = @IN_INPUT_MAN OR CASH_MAN2 = @IN_INPUT_MAN
					OR ADMIN_MANAGER IN(SELECT OP_CODE FROM INTRUST..TOPCUSTRIGHT WHERE ENABLE_OP_CODE = @IN_INPUT_MAN) OR ISNULL(@IN_INPUT_MAN,0)=0 )
--20409: The Products can be accessed. END
    DECLARE @V_IS_FLAG INT,@V_PRE_CODE NVARCHAR(16),@V_PRE_MONEY DECIMAL(16,3),@V_PRE_NUM INT,
            @V_PRODUCT_ID INT,@V_RG_NUM INT,@V_RG_MONEY DECIMAL(16,3)
    SELECT @V_IS_FLAG = 0
    --能够访问所有预约信息
    IF EXISTS(SELECT 1 FROM INTRUST..TOPRIGHT WHERE OP_CODE = @IN_INPUT_MAN AND MENU_ID ='20409' AND FUNC_ID = 2049905)
       SELECT @V_IS_FLAG = 1
    DECLARE @V_TEMPCUST2 TABLE(CUST_ID INT) --根据访问权限能够访问的客户，根据访问权限 OR
    DECLARE @IN_NODE_SHARE INT, @V_QUERYCUSTOMERS INT
    SELECT @V_QUERYCUSTOMERS = VALUE FROM TSYSCONTROL WHERE FLAG_TYPE = N'QUERYCUSTOMERS'
    IF @V_QUERYCUSTOMERS IS NULL SET @V_QUERYCUSTOMERS = 1
    --客户经理级别树中，同节点客户经理是否共享客户
    IF EXISTS(SELECT 1 FROM TSYSCONTROL WHERE FLAG_TYPE = 'MANAGER002' AND VALUE = 1)
        SET @IN_NODE_SHARE = 0  --共享
    ELSE
        SET @IN_NODE_SHARE = 1  --不共享
    --------------------------------------------------------------------
    DECLARE @V_MANAGER_IDS TABLE(MANAGERID INT, MANAGERNAME NVARCHAR(60))
    --处理客户经理同级共享(共享给当前操作员的源客户经理)，共享时，同节点及下级节点的客户经理所辖客户，由于也具有访问权限，故一起共享了。故对经理树的处理放在下面
    INSERT INTO @V_MANAGER_IDS(MANAGERID)
        SELECT SourceManagerID FROM TAuthorizationShare WHERE ShareType = 1 AND Status = 1 AND ManagerID = @IN_INPUT_MAN
    --从客户经理树取当前操作员所辖客户经理,再取这些客户经理的客户
    INSERT INTO @V_MANAGER_IDS
        --1.根据节点主经理来判断当前操作员
        --所辖节点的主客户经理
        SELECT A.MANAGERID,A.MANAGERNAME FROM TCustManagerTree A, TCustManagerTree B
        WHERE (A.LEFT_ID BETWEEN B.LEFT_ID+@IN_NODE_SHARE AND B.RIGHT_ID) AND A.MANAGERID <> 0 AND A.MANAGERID IS NOT NULL
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --所辖节点的成员客户经理
        UNION ALL
        SELECT C.MANAGERID,C.MANAGERNAME FROM TCustManagerTree A, TCustManagerTree B, TCustManagerTreeMembers C
        WHERE (A.LEFT_ID BETWEEN B.LEFT_ID+@IN_NODE_SHARE AND B.RIGHT_ID) AND A.SERIAL_NO = C.TREE_ID
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --2.根据节点成员经理来判断当前操作员
        --所辖节点的主客户经理
        UNION ALL
        SELECT D.MANAGERID,D.MANAGERNAME FROM TCustManagerTreeMembers B, TCustManagerTree C, TCustManagerTree D
        WHERE B.TREE_ID = C.SERIAL_NO AND (D.LEFT_ID BETWEEN C.LEFT_ID+@IN_NODE_SHARE AND C.RIGHT_ID)
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --所辖节点的成员客户经理
        UNION ALL
        SELECT A.MANAGERID,A.MANAGERNAME FROM TCustManagerTreeMembers B, TCustManagerTree C, TCustManagerTree D, TCustManagerTreeMembers A
        WHERE B.TREE_ID = C.SERIAL_NO AND (D.LEFT_ID BETWEEN C.LEFT_ID+@IN_NODE_SHARE AND C.RIGHT_ID) AND A.TREE_ID = D.SERIAL_NO
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
    --处理授权给下级的(当前操作员的)客户授权集，注：被授权的客户没有级联共享给同级别经理
    INSERT INTO @V_TEMPCUST2
        SELECT DISTINCT A.CUST_ID FROM TAuthorizationCusts A, TAuthorizationShare B
        WHERE A.CA_ID = B.CA_ID AND B.ShareType = 2 AND B.Status = 1 AND B.ManagerID = @IN_INPUT_MAN
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
    --处理快捷授权的客户ShareType=3
    INSERT INTO @V_TEMPCUST2(CUST_ID)
        SELECT CUST_ID FROM TAuthorizationShare A WHERE ShareType = 3 AND Status = 1 AND (GETDATE() BETWEEN ISNULL(A.START_TIME,GETDATE()) AND ISNULL(A.INVALID_TIME,GETDATE()+36000)) AND ManagerID = @IN_INPUT_MAN
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
        UNION ALL
        SELECT B.CUST_ID FROM TAuthorizationShare A, TCustomers B
        WHERE A.SourceManagerID = B.SERVICE_MAN AND A.ShareType = 3 AND A.Status = 1 AND A.CUST_ID = 0 AND (GETDATE() BETWEEN ISNULL(A.START_TIME,GETDATE()) AND ISNULL(A.INVALID_TIME,GETDATE()+36000)) AND A.ManagerID = @IN_INPUT_MAN
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
    --以上客户经理的预约客户
    INSERT INTO @V_TEMPCUST2
        SELECT DISTINCT A.CUST_ID FROM TPRECONTRACT A, TCustomers Z
        WHERE A.CUST_ID = Z.CUST_ID AND (EXISTS( SELECT 1 FROM @V_MANAGER_IDS B WHERE Z.SERVICE_MAN = B.MANAGERID)
                OR EXISTS( SELECT 1 FROM @V_MANAGER_IDS C WHERE (@V_QUERYCUSTOMERS = 1 AND A.INPUT_MAN = C.MANAGERID) ) )
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
    --团队领导的团队成员
    INSERT INTO @V_TEMPCUST2(CUST_ID)
		SELECT CUST_ID FROM TCustomers T WHERE EXISTS (
			SELECT MANAGERID FROM TManagerTeamMembers A WHERE EXISTS (SELECT TEAM_ID FROM TManagerTeams B WHERE A.TEAM_ID=B.TEAM_ID AND LEADER=@IN_INPUT_MAN)
				AND T.SERVICE_MAN=A.MANAGERID)
			AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE T.CUST_ID = C.CUST_ID)
  
    IF @IN_PRODUCT_ID IS NULL SELECT @IN_PRODUCT_ID = 0
    IF @IN_LINK_MAN IS NULL SELECT @IN_LINK_MAN = 0
    IF @IN_PRE_CODE IS NULL SELECT @IN_PRE_CODE = ''

    CREATE TABLE #TPRECONTRACT
    (
        PRODUCT_ID INT,
        PRE_CODE NVARCHAR(16),
        PREPRODUCT_ID INT
     )
    DECLARE C1_VALID CURSOR FOR
        SELECT A.PRODUCT_ID,A.PRE_CODE,A.PRE_MONEY,A.PRE_NUM,A.PREPRODUCT_ID
            FROM TPRECONTRACT A
            WHERE A.PRE_STATUS IN ('111301','111302')
                AND (A.PRODUCT_ID  = @IN_PRODUCT_ID OR @IN_PRODUCT_ID = 0)
                AND (ISNULL(@IN_SUB_PRODUCT_ID,0)=0 OR @IN_SUB_PRODUCT_ID=A.SUB_PRODUCT_ID)
                AND (ISNULL(A.PRODUCT_ID,0)=0 OR (ISNULL(A.PRODUCT_ID,0)<>0 AND EXISTS(SELECT 1 FROM INTRUST..TPRODUCT B WHERE B.PRODUCT_STATUS = '110202' OR (B.PRODUCT_STATUS = '110203' AND (B.FPRG_FLAG = 1 OR B.OPEN_FLAG = 1)))))
                AND (A.LINK_MAN = @IN_LINK_MAN OR A.INPUT_MAN = @IN_INPUT_MAN OR @V_IS_FLAG = 1 OR EXISTS(SELECT 1 FROM @V_TEMPCUST2 Y WHERE A.CUST_ID = Y.CUST_ID))
                AND (A.PRE_CODE LIKE '%'+@IN_PRE_CODE+'%' OR @IN_PRE_CODE = '')
    OPEN C1_VALID
    FETCH NEXT FROM C1_VALID INTO @V_PRODUCT_ID,@V_PRE_CODE,@V_PRE_MONEY,@V_PRE_NUM,@V_PREPRODUCT_ID
    WHILE @@FETCH_STATUS = 0
    BEGIN
        SELECT @V_RG_NUM = 0
        SELECT @V_RG_MONEY = 0
        SELECT @V_RG_NUM = COUNT(*),@V_RG_MONEY = SUM(RG_MONEY)
        FROM INTRUST..TCONTRACT
        WHERE PRODUCT_ID = @V_PRODUCT_ID AND PRE_CODE = @V_PRE_CODE AND PRE_FLAG = 1 AND HT_STATUS = '120101'
        IF (ISNULL(@V_RG_NUM,0) < @V_PRE_NUM) AND (ISNULL(@V_RG_MONEY,0) < @V_PRE_MONEY)
            INSERT INTO #TPRECONTRACT VALUES(@V_PRODUCT_ID,@V_PRE_CODE,@V_PREPRODUCT_ID)
        FETCH NEXT FROM C1_VALID INTO @V_PRODUCT_ID,@V_PRE_CODE,@V_PRE_MONEY,@V_PRE_NUM,@V_PREPRODUCT_ID
    END
    CLOSE C1_VALID
    DEALLOCATE C1_VALID
    IF ISNULL(@IN_CUST_NAME,'') = ''
        SELECT A.SERIAL_NO,A.PREPRODUCT_ID,A.SUB_PRODUCT_ID,A.CUST_ID,A.PRE_CODE,A.PRE_MONEY,A.RG_MONEY,A.RG_DATE
				,A.HT_RG_MONEY,A.LINK_MAN,A.PRE_DATE,A.VALID_DAYS,A.END_DATE,A.PRE_TYPE,A.PRE_TYPE_NAME
				,CASE A.CHECK_FLAG WHEN 1 THEN '111304' ELSE A.PRE_STATUS END PRE_STATUS --预约未审核时，不能做到账处理
				,CASE A.CHECK_FLAG WHEN 1 THEN '未审核' ELSE A.PRE_STATUS_NAME END PRE_STATUS_NAME
				,A.INPUT_MAN,A.INPUT_TIME,A.SUMMARY,A.PRE_NUM,A.RG_NUM,A.EXP_REG_DATE,A.CUST_SOURCE
				,A.CUST_SOURCE_NAME,A.CHANNEL_TYPE,A.CHANNEL_FARE,A.BIND_SERIAL_NO,A.PRE_LEVEL,A.PRE_LEVEL_NAME
				,A.CHECK_FLAG,A.CHECK_MAN,A.CONTRACT_NO,A.PRODUCT_ID,A.PREPRODUCT_FLAG,A.ADD_QUOTA_FLAG,A.FLOW_STATUS
				,B.CUST_NAME, B.CUST_TEL,B.H_TEL,B.O_TEL,B.MOBILE,B.BP,B.CUST_NO
			,/*如果不存在按子产品设置的收益级别设置，则按父产品的收益级别设置来取*/ 
                CASE WHEN NOT EXISTS 
                    (SELECT 1
                      FROM INTRUST..TGAINLEVEL GL JOIN INTRUST..TGAINLEVELRATE GLR ON GL.SERIAL_NO=GLR.DF_SERIAL_NO
                      WHERE GL.PRODUCT_ID=A.PRODUCT_ID                        
                        AND (GL.CUST_TYPE=0 OR GL.CUST_TYPE=B.CUST_TYPE)
                        AND A.PRE_MONEY>=GL.LOWER_LIMIT AND A.PRE_MONEY<=GL.UPPER_LIMIT
                        AND A.PRE_DATE<=GLR.END_DATE) THEN
                    CASE WHEN ISNULL(A.SUB_PRODUCT_ID,0)=0 THEN                    
                        (SELECT ISNULL(EXP_RATE1,0.0) FROM INTRUST..TPRODUCT WHERE PRODUCT_ID=A.PRODUCT_ID)
                    ELSE
                        (SELECT ISNULL(EXP_RATE1,0.0) FROM INTRUST..TSUBPRODUCT WHERE SUB_PRODUCT_ID=A.SUB_PRODUCT_ID)
                    END
                ELSE 
                    (SELECT TOP 1 GLR.GAIN_RATE 
                      FROM INTRUST..TGAINLEVEL GL JOIN INTRUST..TGAINLEVELRATE GLR ON GL.SERIAL_NO=GLR.DF_SERIAL_NO
                      WHERE GL.PRODUCT_ID=A.PRODUCT_ID       
                        AND (ISNULL(GL.SUB_PRODUCT_ID,0)=0 OR GL.SUB_PRODUCT_ID=A.SUB_PRODUCT_ID)                  
                        AND (GL.CUST_TYPE=0 OR GL.CUST_TYPE=B.CUST_TYPE)
                        AND A.PRE_MONEY>=GL.LOWER_LIMIT AND A.PRE_MONEY<=GL.UPPER_LIMIT
                        AND A.PRE_DATE<=GLR.END_DATE
                      ORDER BY ISNULL(GL.SUB_PRODUCT_ID,0) DESC, GL.PROV_FLAG, GL.PROV_LEVEL)
                END AS EXP_RATE1,
                CASE WHEN NOT EXISTS 
                    (SELECT 1
                      FROM INTRUST..TGAINLEVEL GL JOIN INTRUST..TGAINLEVELRATE GLR ON GL.SERIAL_NO=GLR.DF_SERIAL_NO
                      WHERE GL.PRODUCT_ID=A.PRODUCT_ID                        
                        AND (GL.CUST_TYPE=0 OR GL.CUST_TYPE=B.CUST_TYPE)
                        AND A.PRE_MONEY>=GL.LOWER_LIMIT AND A.PRE_MONEY<=GL.UPPER_LIMIT
                        AND A.PRE_DATE<=GLR.END_DATE) THEN
                    CASE WHEN ISNULL(A.SUB_PRODUCT_ID,0)=0 THEN                    
                        (SELECT ISNULL(EXP_RATE2,0.0) FROM INTRUST..TPRODUCT WHERE PRODUCT_ID=A.PRODUCT_ID)
                    ELSE
                        (SELECT ISNULL(EXP_RATE2,0.0) FROM INTRUST..TSUBPRODUCT WHERE SUB_PRODUCT_ID=A.SUB_PRODUCT_ID)
                    END
                ELSE                     
                    (SELECT TOP 1 GLR.GAIN_RATE 
                      FROM INTRUST..TGAINLEVEL GL JOIN INTRUST..TGAINLEVELRATE GLR ON GL.SERIAL_NO=GLR.DF_SERIAL_NO
                      WHERE GL.PRODUCT_ID=A.PRODUCT_ID       
                        AND (ISNULL(GL.SUB_PRODUCT_ID,0)=0 OR GL.SUB_PRODUCT_ID=A.SUB_PRODUCT_ID)                  
                        AND (GL.CUST_TYPE=0 OR GL.CUST_TYPE=B.CUST_TYPE)
                        AND A.PRE_MONEY>=GL.LOWER_LIMIT AND A.PRE_MONEY<=GL.UPPER_LIMIT
                        AND A.PRE_DATE<=GLR.END_DATE
                      ORDER BY ISNULL(GL.SUB_PRODUCT_ID,0) DESC, GL.PROV_FLAG, GL.PROV_LEVEL)
                END AS EXP_RATE2
			,B.CUST_TYPE_NAME,E.OP_NAME AS LINK_MAN_NAME
			, (SELECT SUM(DZ_MONEY) FROM TPREMONEYDETAIL WHERE PRE_SERIAL_NO=A.SERIAL_NO) AS DZ_MONEY
			, (SELECT PRODUCT_NAME FROM INTRUST..TPRODUCT WHERE PRODUCT_ID=A.PRODUCT_ID) AS PRODUCT_NAME
		FROM TPRECONTRACT A, TCustomers B,#TPRECONTRACT C,INTRUST..TPRODUCT D,TOPERATOR E
        WHERE (A.CUST_ID = B.CUST_ID) AND (A.PRODUCT_ID = C.PRODUCT_ID AND A.PRE_CODE = C.PRE_CODE) AND (A.PRODUCT_ID=D.PRODUCT_ID)
			AND A.LINK_MAN = E.OP_CODE AND A.PRODUCT_ID<>0
			AND (A.PRODUCT_ID=@IN_PRODUCT_ID OR (ISNULL(@IN_PRODUCT_ID,0)=0 AND ISNULL(@IN_PREPRODUCT_ID,0)=0))
            AND(@V_SW20409 = 0 OR A.PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCTS))
            AND (ISNULL(@IN_CUST_TYPE,0)=0 OR B.CUST_TYPE=@IN_CUST_TYPE)
            AND (ISNULL(@IN_MAX_RG_MONEY,0)=0 OR A.PRE_MONEY <= @IN_MAX_RG_MONEY)
            AND (ISNULL(@IN_MIN_RG_MONEY,0)=0 OR A.PRE_MONEY >= @IN_MIN_RG_MONEY)
           	AND (ISNULL(@IN_CUST_SOURCE,'')='' OR A.CUST_SOURCE=@IN_CUST_SOURCE)
			AND (ISNULL(@IN_GroupID,0)=0 OR A.CUST_ID IN (SELECT CUST_ID FROM TCustGroupMembers WHERE GroupID = @IN_GroupID))
			AND (ISNULL(@IN_CLASSDETAIL_ID,0)=0 OR A.CUST_ID IN (SELECT CUST_ID FROM TCustomerClass WHERE CLASSDETAIL_ID = @IN_CLASSDETAIL_ID))
			AND (B.SERVICE_MAN = @IN_INPUT_MAN OR @V_IS_FLAG = 1 OR EXISTS(SELECT 1 FROM @V_TEMPCUST2 Y WHERE B.CUST_ID = Y.CUST_ID))
            --AND ISNULL(A.CHECK_FLAG,0)<>1
		UNION
		SELECT A.SERIAL_NO,A.PREPRODUCT_ID,A.SUB_PRODUCT_ID,A.CUST_ID,A.PRE_CODE,A.PRE_MONEY,A.RG_MONEY,A.RG_DATE
				,A.HT_RG_MONEY,A.LINK_MAN,A.PRE_DATE,A.VALID_DAYS,A.END_DATE,A.PRE_TYPE,A.PRE_TYPE_NAME
				,CASE A.CHECK_FLAG WHEN 1 THEN '111304' ELSE A.PRE_STATUS END PRE_STATUS --预约未审核时，不能做到账处理
				,CASE A.CHECK_FLAG WHEN 1 THEN '未审核' ELSE A.PRE_STATUS_NAME END PRE_STATUS_NAME
				,A.INPUT_MAN,A.INPUT_TIME,A.SUMMARY,A.PRE_NUM,A.RG_NUM,A.EXP_REG_DATE,A.CUST_SOURCE
				,A.CUST_SOURCE_NAME,A.CHANNEL_TYPE,A.CHANNEL_FARE,A.BIND_SERIAL_NO,A.PRE_LEVEL,A.PRE_LEVEL_NAME
				,A.CHECK_FLAG,A.CHECK_MAN,A.CONTRACT_NO,A.PRODUCT_ID,A.PREPRODUCT_FLAG,A.ADD_QUOTA_FLAG,A.FLOW_STATUS
				,B.CUST_NAME, B.CUST_TEL,B.H_TEL,B.O_TEL,B.MOBILE,B.BP,B.CUST_NO
				,0 EXP_RATE1,0 EXP_RATE2,B.CUST_TYPE_NAME,E.OP_NAME AS LINK_MAN_NAME
				, (SELECT SUM(DZ_MONEY) FROM TPREMONEYDETAIL WHERE PRE_SERIAL_NO=A.SERIAL_NO) AS DZ_MONEY
				, (SELECT PREPRODUCT_NAME FROM TPREPRODUCT WHERE PREPRODUCT_ID=A.PREPRODUCT_ID) AS PRODUCT_NAME
		FROM TPRECONTRACT A , TCustomers B,#TPRECONTRACT C,INTRUST..TOPERATOR E
        WHERE (A.CUST_ID = B.CUST_ID) AND (A.PREPRODUCT_ID = C.PREPRODUCT_ID AND A.PRE_CODE = C.PRE_CODE)
			AND A.LINK_MAN = E.OP_CODE
            AND A.PREPRODUCT_ID<>0
            AND (A.PREPRODUCT_ID=@IN_PREPRODUCT_ID OR (ISNULL(@IN_PRODUCT_ID,0)=0 AND ISNULL(@IN_PREPRODUCT_ID,0)=0))
            --AND(@V_SW20409 = 0 OR A.PREPRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCTS))
            AND (ISNULL(@IN_CUST_TYPE,0)=0 OR B.CUST_TYPE=@IN_CUST_TYPE)
            AND (ISNULL(@IN_MAX_RG_MONEY,0)=0 OR A.PRE_MONEY <= @IN_MAX_RG_MONEY)
            AND (ISNULL(@IN_MIN_RG_MONEY,0)=0 OR A.PRE_MONEY >= @IN_MIN_RG_MONEY)
           	AND (ISNULL(@IN_CUST_SOURCE,'')='' OR A.CUST_SOURCE=@IN_CUST_SOURCE)
			AND (ISNULL(@IN_GroupID,0)=0 OR A.CUST_ID IN (SELECT CUST_ID FROM TCustGroupMembers WHERE GroupID = @IN_GroupID))
			AND (ISNULL(@IN_CLASSDETAIL_ID,0)=0 OR A.CUST_ID IN (SELECT CUST_ID FROM TCustomerClass WHERE CLASSDETAIL_ID = @IN_CLASSDETAIL_ID))
			AND (B.SERVICE_MAN = @IN_INPUT_MAN OR @V_IS_FLAG = 1 OR EXISTS(SELECT 1 FROM @V_TEMPCUST2 Y WHERE B.CUST_ID = Y.CUST_ID))
            --AND ISNULL(A.CHECK_FLAG,0)<>1
        ORDER BY A.PRODUCT_ID DESC,A.PRE_MONEY DESC,A.PRE_CODE
    ELSE
        SELECT A.SERIAL_NO,A.PREPRODUCT_ID,A.SUB_PRODUCT_ID,A.CUST_ID,A.PRE_CODE,A.PRE_MONEY,A.RG_MONEY,A.RG_DATE
				,A.HT_RG_MONEY,A.LINK_MAN,A.PRE_DATE,A.VALID_DAYS,A.END_DATE,A.PRE_TYPE,A.PRE_TYPE_NAME
				,CASE A.CHECK_FLAG WHEN 1 THEN '111304' ELSE A.PRE_STATUS END PRE_STATUS --预约未审核时，不能做到账处理
				,CASE A.CHECK_FLAG WHEN 1 THEN '未审核' ELSE A.PRE_STATUS_NAME END PRE_STATUS_NAME
				,A.INPUT_MAN,A.INPUT_TIME,A.SUMMARY,A.PRE_NUM,A.RG_NUM,A.EXP_REG_DATE,A.CUST_SOURCE
				,A.CUST_SOURCE_NAME,A.CHANNEL_TYPE,A.CHANNEL_FARE,A.BIND_SERIAL_NO,A.PRE_LEVEL,A.PRE_LEVEL_NAME
				,A.CHECK_FLAG,A.CHECK_MAN,A.CONTRACT_NO,A.PRODUCT_ID,A.PREPRODUCT_FLAG,A.ADD_QUOTA_FLAG,A.FLOW_STATUS
				,B.CUST_NAME, B.CUST_TEL,B.H_TEL,B.O_TEL,B.MOBILE,B.BP,B.CUST_NO
			,/*如果不存在按子产品设置的收益级别设置，则按父产品的收益级别设置来取*/ 
                CASE WHEN NOT EXISTS 
                    (SELECT 1
                      FROM INTRUST..TGAINLEVEL GL JOIN INTRUST..TGAINLEVELRATE GLR ON GL.SERIAL_NO=GLR.DF_SERIAL_NO
                      WHERE GL.PRODUCT_ID=A.PRODUCT_ID                        
                        AND (GL.CUST_TYPE=0 OR GL.CUST_TYPE=B.CUST_TYPE)
                        AND A.PRE_MONEY>=GL.LOWER_LIMIT AND A.PRE_MONEY<=GL.UPPER_LIMIT
                        AND A.PRE_DATE<=GLR.END_DATE) THEN
                    CASE WHEN ISNULL(A.SUB_PRODUCT_ID,0)=0 THEN                    
                        (SELECT ISNULL(EXP_RATE1,0.0) FROM INTRUST..TPRODUCT WHERE PRODUCT_ID=A.PRODUCT_ID)
                    ELSE
                        (SELECT ISNULL(EXP_RATE1,0.0) FROM INTRUST..TSUBPRODUCT WHERE SUB_PRODUCT_ID=A.SUB_PRODUCT_ID)
                    END
                ELSE 
                    (SELECT TOP 1 GLR.GAIN_RATE 
                      FROM INTRUST..TGAINLEVEL GL JOIN INTRUST..TGAINLEVELRATE GLR ON GL.SERIAL_NO=GLR.DF_SERIAL_NO
                      WHERE GL.PRODUCT_ID=A.PRODUCT_ID       
                        AND (ISNULL(GL.SUB_PRODUCT_ID,0)=0 OR GL.SUB_PRODUCT_ID=A.SUB_PRODUCT_ID)                  
                        AND (GL.CUST_TYPE=0 OR GL.CUST_TYPE=B.CUST_TYPE)
                        AND A.PRE_MONEY>=GL.LOWER_LIMIT AND A.PRE_MONEY<=GL.UPPER_LIMIT
                        AND A.PRE_DATE<=GLR.END_DATE
                      ORDER BY ISNULL(GL.SUB_PRODUCT_ID,0) DESC, GL.PROV_FLAG, GL.PROV_LEVEL)
                END AS EXP_RATE1,
                CASE WHEN NOT EXISTS 
                    (SELECT 1
                      FROM INTRUST..TGAINLEVEL GL JOIN INTRUST..TGAINLEVELRATE GLR ON GL.SERIAL_NO=GLR.DF_SERIAL_NO
                      WHERE GL.PRODUCT_ID=A.PRODUCT_ID                        
                        AND (GL.CUST_TYPE=0 OR GL.CUST_TYPE=B.CUST_TYPE)
                        AND A.PRE_MONEY>=GL.LOWER_LIMIT AND A.PRE_MONEY<=GL.UPPER_LIMIT
                        AND A.PRE_DATE<=GLR.END_DATE) THEN
                    CASE WHEN ISNULL(A.SUB_PRODUCT_ID,0)=0 THEN                    
                        (SELECT ISNULL(EXP_RATE2,0.0) FROM INTRUST..TPRODUCT WHERE PRODUCT_ID=A.PRODUCT_ID)
                    ELSE
                        (SELECT ISNULL(EXP_RATE2,0.0) FROM INTRUST..TSUBPRODUCT WHERE SUB_PRODUCT_ID=A.SUB_PRODUCT_ID)
                    END
                ELSE                     
                    (SELECT TOP 1 GLR.GAIN_RATE 
                      FROM INTRUST..TGAINLEVEL GL JOIN INTRUST..TGAINLEVELRATE GLR ON GL.SERIAL_NO=GLR.DF_SERIAL_NO
                      WHERE GL.PRODUCT_ID=A.PRODUCT_ID       
                        AND (ISNULL(GL.SUB_PRODUCT_ID,0)=0 OR GL.SUB_PRODUCT_ID=A.SUB_PRODUCT_ID)                  
                        AND (GL.CUST_TYPE=0 OR GL.CUST_TYPE=B.CUST_TYPE)
                        AND A.PRE_MONEY>=GL.LOWER_LIMIT AND A.PRE_MONEY<=GL.UPPER_LIMIT
                        AND A.PRE_DATE<=GLR.END_DATE
                      ORDER BY ISNULL(GL.SUB_PRODUCT_ID,0) DESC, GL.PROV_FLAG, GL.PROV_LEVEL)
                END AS EXP_RATE2
			,B.CUST_TYPE_NAME,E.OP_NAME AS LINK_MAN_NAME
			, (SELECT SUM(DZ_MONEY) FROM TPREMONEYDETAIL WHERE PRE_SERIAL_NO=A.SERIAL_NO) AS DZ_MONEY
			, (SELECT PRODUCT_NAME FROM INTRUST..TPRODUCT WHERE PRODUCT_ID=A.PRODUCT_ID) AS PRODUCT_NAME
		FROM TPRECONTRACT A,TCustomers B,#TPRECONTRACT C,INTRUST..TPRODUCT D,TOPERATOR E
        WHERE (A.CUST_ID = B.CUST_ID) AND (A.PRODUCT_ID = C.PRODUCT_ID AND A.PRE_CODE = C.PRE_CODE) AND (A.PRODUCT_ID=D.PRODUCT_ID)
            AND A.LINK_MAN = E.OP_CODE AND A.PRODUCT_ID<>0
            AND (A.PRODUCT_ID=@IN_PRODUCT_ID OR (ISNULL(@IN_PRODUCT_ID,0)=0 AND ISNULL(@IN_PREPRODUCT_ID,0)=0))
            AND(B.CUST_NAME LIKE '%'+@IN_CUST_NAME+'%')
            AND(@V_SW20409 = 0 OR A.PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCTS))
            AND (ISNULL(@IN_CUST_TYPE,0)=0 OR B.CUST_TYPE=@IN_CUST_TYPE)
            AND (ISNULL(@IN_MAX_RG_MONEY,0)=0 OR A.PRE_MONEY <= @IN_MAX_RG_MONEY)
            AND (ISNULL(@IN_MIN_RG_MONEY,0)=0 OR A.PRE_MONEY >= @IN_MIN_RG_MONEY)
            AND (ISNULL(@IN_CUST_SOURCE,'')='' OR A.CUST_SOURCE=@IN_CUST_SOURCE)
			AND (ISNULL(@IN_GroupID,0)=0 OR A.CUST_ID IN (SELECT CUST_ID FROM TCustGroupMembers WHERE GroupID = @IN_GroupID))
			AND (ISNULL(@IN_CLASSDETAIL_ID,0)=0 OR A.CUST_ID IN (SELECT CUST_ID FROM TCustomerClass WHERE CLASSDETAIL_ID = @IN_CLASSDETAIL_ID))
			AND (B.SERVICE_MAN = @IN_INPUT_MAN OR @V_IS_FLAG = 1 OR EXISTS(SELECT 1 FROM @V_TEMPCUST2 Y WHERE B.CUST_ID = Y.CUST_ID))
            --AND ISNULL(A.CHECK_FLAG,0)<>1
		UNION
		SELECT A.SERIAL_NO,A.PREPRODUCT_ID,A.SUB_PRODUCT_ID,A.CUST_ID,A.PRE_CODE,A.PRE_MONEY,A.RG_MONEY,A.RG_DATE
				,A.HT_RG_MONEY,A.LINK_MAN,A.PRE_DATE,A.VALID_DAYS,A.END_DATE,A.PRE_TYPE,A.PRE_TYPE_NAME
				,CASE A.CHECK_FLAG WHEN 1 THEN '111304' ELSE A.PRE_STATUS END PRE_STATUS --预约未审核时，不能做到账处理
				,CASE A.CHECK_FLAG WHEN 1 THEN '未审核' ELSE A.PRE_STATUS_NAME END PRE_STATUS_NAME
				,A.INPUT_MAN,A.INPUT_TIME,A.SUMMARY,A.PRE_NUM,A.RG_NUM,A.EXP_REG_DATE,A.CUST_SOURCE
				,A.CUST_SOURCE_NAME,A.CHANNEL_TYPE,A.CHANNEL_FARE,A.BIND_SERIAL_NO,A.PRE_LEVEL,A.PRE_LEVEL_NAME
				,A.CHECK_FLAG,A.CHECK_MAN,A.CONTRACT_NO,A.PRODUCT_ID,A.PREPRODUCT_FLAG,A.ADD_QUOTA_FLAG,A.FLOW_STATUS
				,B.CUST_NAME, B.CUST_TEL,B.H_TEL,B.O_TEL,B.MOBILE,B.BP,B.CUST_NO
				,0 EXP_RATE1,0 EXP_RATE2,B.CUST_TYPE_NAME,E.OP_NAME AS LINK_MAN_NAME
				, (SELECT SUM(DZ_MONEY) FROM TPREMONEYDETAIL WHERE PRE_SERIAL_NO=A.SERIAL_NO) AS DZ_MONEY
				, (SELECT PREPRODUCT_NAME FROM TPREPRODUCT WHERE PREPRODUCT_ID=A.PREPRODUCT_ID) AS PRODUCT_NAME
		FROM TPRECONTRACT A, TCustomers B,#TPRECONTRACT C, TOPERATOR E
        WHERE (A.CUST_ID = B.CUST_ID) AND (A.PRODUCT_ID = C.PRODUCT_ID AND A.PRE_CODE = C.PRE_CODE)
            AND A.LINK_MAN = E.OP_CODE AND A.PREPRODUCT_ID<>0
            AND (A.PREPRODUCT_ID=@IN_PREPRODUCT_ID OR (ISNULL(@IN_PRODUCT_ID,0)=0 AND ISNULL(@IN_PREPRODUCT_ID,0)=0))
            AND(B.CUST_NAME LIKE '%'+@IN_CUST_NAME+'%')
            AND(@V_SW20409 = 0 OR A.PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCTS))
            AND (ISNULL(@IN_CUST_TYPE,0)=0 OR B.CUST_TYPE=@IN_CUST_TYPE)
            AND (ISNULL(@IN_MAX_RG_MONEY,0)=0 OR A.PRE_MONEY <= @IN_MAX_RG_MONEY)
            AND (ISNULL(@IN_MIN_RG_MONEY,0)=0 OR A.PRE_MONEY >= @IN_MIN_RG_MONEY)
            AND (ISNULL(@IN_CUST_SOURCE,'')='' OR A.CUST_SOURCE=@IN_CUST_SOURCE)
			AND (ISNULL(@IN_GroupID,0)=0 OR A.CUST_ID IN (SELECT CUST_ID FROM TCustGroupMembers WHERE GroupID = @IN_GroupID))
			AND (ISNULL(@IN_CLASSDETAIL_ID,0)=0 OR A.CUST_ID IN (SELECT CUST_ID FROM TCustomerClass WHERE CLASSDETAIL_ID = @IN_CLASSDETAIL_ID))
			AND (B.SERVICE_MAN = @IN_INPUT_MAN OR @V_IS_FLAG = 1 OR EXISTS(SELECT 1 FROM @V_TEMPCUST2 Y WHERE B.CUST_ID = Y.CUST_ID))
			--AND ISNULL(A.CHECK_FLAG,0)<>1
        ORDER BY A.PRODUCT_ID DESC,A.PRE_MONEY DESC,A.PRE_CODE
GO
