USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_MODI_TCUSTSCORE_TOTAL   @IN_CUST_ID     		INT,   --主键
											@IN_SUBJECT_ID       	INT,   --操作数ID
											@IN_SCORING_DATE		INT,   --评分日期
											@IN_INPUT_MAN        	INT    --操作员
WITH ENCRYPTION
AS
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
	DECLARE @V_END_DATE INT,@V_CUST_SCORING INT,@V_SCORE_END_DATE INT,@V_CURRENT_SOURE INT
	DECLARE @V_ALL_SCORE INT --总分值
	DECLARE  @V_INCLUDE_TOP INT,@V_INCLUDE_END INT
    SELECT @SBUSI_NAME = N'修改系统打分取值信息'
    SELECT @SSUMMARY = N'修改系统打分取值信息'
    SELECT @IBUSI_FLAG = 21005
    SELECT @V_RET_CODE = -21005000
    
 
		
	--查询客户得分表中是否有记录存在	
	SELECT  @V_SCORE_END_DATE = END_DATE,@V_CURRENT_SOURE = CURRENT_SOURCE FROM  TCustScore 
		WHERE CUST_ID = @IN_CUST_ID AND SUBJECT_ID = @IN_SUBJECT_ID AND END_DATE = 21001231	
	
    BEGIN TRANSACTION
	
	IF(ISNULL(@V_SCORE_END_DATE,0)<>0) --修改客户得分表上次评分的截止日期
	BEGIN
		UPDATE TCustScore SET END_DATE = dbo.GETDATE(@IN_SCORING_DATE,-1),INPUT_MAN = @IN_INPUT_MAN
						  WHERE CUST_ID = @IN_CUST_ID AND SUBJECT_ID = @IN_SUBJECT_ID AND END_DATE = 21001231
	END
	
	
	--查询出当前评分科目在明细表中的总分值
	BEGIN
		SELECT @V_ALL_SCORE = SUM(CUST_SOURCE) FROM TCustScoreDetail 
			WHERE CUST_ID = @IN_CUST_ID AND SUBJECT_ID = @IN_SUBJECT_ID AND END_DATE = 21001231
	END
	--插入客户得分数据
	INSERT INTO TCustScore(CUST_ID,SUBJECT_ID,CURRENT_SOURCE,CURRENTDATE,REGULATION,END_DATE,INPUT_MAN)
		VALUES(@IN_CUST_ID,@IN_SUBJECT_ID,@V_ALL_SCORE,@IN_SCORING_DATE,@V_ALL_SCORE-ISNULL(@V_CURRENT_SOURE,0),21001231,@IN_INPUT_MAN)
	
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END

	
	--最终-客户评级
	--如果存在相同的记录 则修改END_DATE为当前日期的前一天
	IF EXISTS(SELECT 1 FROM TCustRating WHERE CUST_ID = @IN_CUST_ID AND SUBJECT_ID=@IN_SUBJECT_ID AND END_DATE = 21001231)
	BEGIN
		UPDATE TCustRating SET	 END_DATE 	= dbo.GETDATE(@IN_SCORING_DATE,-1),
								 INPUT_MAN 	= @IN_INPUT_MAN
						   WHERE CUST_ID = @IN_CUST_ID AND SUBJECT_ID=@IN_SUBJECT_ID AND END_DATE = 21001231
	END
	
	DECLARE C1_T1 CURSOR FOR
			SELECT INCLUDE_TOP,INCLUDE_END FROM TSubjectScoreRating
				WHERE SUBJECT_ID = @IN_SUBJECT_ID
				AND (@V_ALL_SCORE BETWEEN SCORE_LOWER AND SCORE_UPPER)
	OPEN C1_T1
	FETCH NEXT FROM C1_T1 INTO @V_INCLUDE_TOP,@V_INCLUDE_END
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @V_INCLUDE_TOP = 1 AND @V_INCLUDE_END = 1 --算头算尾
		BEGIN 
			 INSERT INTO TCustRating
				SELECT @IN_CUST_ID,@IN_SUBJECT_ID,RATING_NO,RATING_NAME,@IN_SCORING_DATE,21001231,@IN_INPUT_MAN FROM TSubjectScoreRating
				WHERE SUBJECT_ID = @IN_SUBJECT_ID 
				AND SCORE_LOWER <= ISNULL(@V_ALL_SCORE,0)
				AND	(ISNULL(@V_ALL_SCORE,0)<=SCORE_UPPER) 	
		END
		ELSE IF @V_INCLUDE_TOP = 1 AND @V_INCLUDE_END = 2 --算头不算尾
		BEGIN
			 INSERT INTO TCustRating
				SELECT @IN_CUST_ID,@IN_SUBJECT_ID,RATING_NO,RATING_NAME,@IN_SCORING_DATE,21001231,@IN_INPUT_MAN FROM TSubjectScoreRating
				WHERE SUBJECT_ID = @IN_SUBJECT_ID 
				AND SCORE_LOWER <= ISNULL(@V_ALL_SCORE,0)
				AND	(ISNULL(@V_ALL_SCORE,0)<SCORE_UPPER)  
		END	
		ELSE IF @V_INCLUDE_TOP = 2 AND @V_INCLUDE_END = 1 --不算头算尾
		BEGIN
			  INSERT INTO TCustRating
				SELECT @IN_CUST_ID,@IN_SUBJECT_ID,RATING_NO,RATING_NAME,@IN_SCORING_DATE,21001231,@IN_INPUT_MAN FROM TSubjectScoreRating
				WHERE SUBJECT_ID = @IN_SUBJECT_ID 
				AND SCORE_LOWER < ISNULL(@V_ALL_SCORE,0)
				AND	(ISNULL(@V_ALL_SCORE,0)<=SCORE_UPPER) 
		END
		ELSE IF @V_INCLUDE_TOP = 2 AND @V_INCLUDE_END = 2 --不算头不算尾
		BEGIN
			  INSERT INTO TCustRating
				SELECT @IN_CUST_ID,@IN_SUBJECT_ID,RATING_NO,RATING_NAME,@IN_SCORING_DATE,21001231,@IN_INPUT_MAN FROM TSubjectScoreRating
				WHERE SUBJECT_ID = @IN_SUBJECT_ID 
				AND SCORE_LOWER < ISNULL(@V_ALL_SCORE,0)
				AND	(ISNULL(@V_ALL_SCORE,0)< SCORE_UPPER) 
		END
		FETCH NEXT FROM C1_T1 INTO @V_INCLUDE_TOP,@V_INCLUDE_END
	END
	CLOSE C1_T1
	DEALLOCATE C1_T1
	
	 
	
	IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END
	
    SELECT @SSUMMARY = N'修改系统打分取值信息:'
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END

    COMMIT TRANSACTION
    RETURN 100
GO
