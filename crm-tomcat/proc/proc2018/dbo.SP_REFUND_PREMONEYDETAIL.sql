USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_REFUND_PREMONEYDETAIL @IN_SERIAL_NO     INT, --预约到账序号，退某笔到帐时指定
                                          @IN_PRE_SERIAL_NO INT, --预约序号，全部退款时指定
                                          @IN_REFUND_MONEY  DEC(16,3), --退款金额，为0表示退全部
                                          @IN_REFUND_DATE   INT,       --退款日期
                                          @IN_INPUT_MAN     INT
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_ERROR NVARCHAR(200)
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    SELECT @V_RET_CODE = -20701000
    SELECT @IBUSI_FLAG = 20701
    SELECT @SBUSI_NAME = N'预约退款'
    SELECT @SSUMMARY = N'预约退款'

    DECLARE @V_PRE_CODE NVARCHAR(16), @V_PREPRODUCT_ID INT, @V_PREPRODUCT_NAME NVARCHAR(100),@V_LINK_MAN INT,
            @V_PRE_MONEY DEC(16,3), @V_RG_MONEY DEC(16,3), @V_PRE_SERIAL_NO INT, @V_DZ_MONEY DEC(16,3)
    IF @IN_REFUND_MONEY IS NULL SET @IN_REFUND_MONEY = 0
    ------------------------------------------------------------------------
    BEGIN TRY
    --1.业务逻辑与操作
    --校验
    IF @IN_SERIAL_NO <> 0
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM TPREMONEYDETAIL WHERE SERIAL_NO = @IN_SERIAL_NO)
        BEGIN
            SET @V_ERROR = N'预约到帐记录不存在！'
            RAISERROR(@V_ERROR,16,3)
        END
    END
    IF @IN_PRE_SERIAL_NO <> 0
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM TPRECONTRACT WHERE SERIAL_NO = @IN_PRE_SERIAL_NO)
        BEGIN
            SET @V_ERROR = N'预约记录不存在！'
            RAISERROR(@V_ERROR,16,3)
        END
    END
    SELECT @V_PRE_SERIAL_NO = PRE_SERIAL_NO, @V_DZ_MONEY = DZ_MONEY FROM TPREMONEYDETAIL WHERE SERIAL_NO = @IN_SERIAL_NO
    SELECT @V_PREPRODUCT_ID = PREPRODUCT_ID, @V_PRE_MONEY = PRE_MONEY, @V_RG_MONEY = ISNULL(RG_MONEY,0), @V_PRE_CODE = PRE_CODE,
           @V_LINK_MAN = LINK_MAN
        FROM TPRECONTRACT WHERE SERIAL_NO = @V_PRE_SERIAL_NO
    SELECT @V_PREPRODUCT_NAME = PREPRODUCT_NAME FROM TPREPRODUCT WHERE PREPRODUCT_ID = @V_PREPRODUCT_ID
    DECLARE @V_TEAM_ID INT, @V_PRE_QUALIFIEDNUM INT

    SELECT @V_TEAM_ID = A.TEAM_ID FROM TManagerTeams A
        WHERE A.LEADER = @V_LINK_MAN OR EXISTS(SELECT 1 FROM TManagerTeamMembers Z WHERE A.TEAM_ID = Z.TEAM_ID AND Z.MANAGERID = @V_LINK_MAN)
    IF @V_TEAM_ID IS NULL SET @V_TEAM_ID = -1

    ------------------------------------------------------------------------
    BEGIN TRANSACTION

    IF @IN_SERIAL_NO <> 0
    BEGIN
    --针对具体到帐记录做退款时，支持部分退款，不做配额、实际预约金额方面的处理
        IF @IN_REFUND_MONEY = 0
            SET @IN_REFUND_MONEY = @V_DZ_MONEY
        UPDATE TPREMONEYDETAIL SET REFUND_DATE = @IN_REFUND_DATE, REFUND_MONEY = @IN_REFUND_MONEY WHERE SERIAL_NO = @IN_SERIAL_NO
        UPDATE TPRECONTRACT SET RG_MONEY = RG_MONEY - @IN_REFUND_MONEY WHERE SERIAL_NO = @V_PRE_SERIAL_NO
    END
    ELSE IF @IN_PRE_SERIAL_NO <> 0
    BEGIN
    --针对预约记录退款时，表示全部退款，需要处理配额、实际预约金额
        SET @IN_REFUND_MONEY = @V_PRE_MONEY
        IF @IN_REFUND_MONEY < 3000000
            SET @V_PRE_QUALIFIEDNUM = 1
        ELSE
            SET @V_PRE_QUALIFIEDNUM = 0
        UPDATE TPREMONEYDETAIL SET REFUND_DATE = @IN_REFUND_DATE, REFUND_MONEY = DZ_MONEY WHERE PRE_SERIAL_NO = @IN_PRE_SERIAL_NO
        UPDATE TPRECONTRACT SET RG_MONEY = 0 WHERE SERIAL_NO = @IN_PRE_SERIAL_NO
        UPDATE TTEAMQUOTA SET PRE_SALEMONEY = ISNULL(PRE_SALEMONEY,0) - @V_PRE_MONEY, PRE_QUALIFIEDNUM = ISNULL(PRE_QUALIFIEDNUM,0) - @V_PRE_QUALIFIEDNUM
            WHERE TEAM_ID = @V_TEAM_ID AND PREPRODUCT_ID = @V_PREPRODUCT_ID
        UPDATE TPREPRODUCT SET PRE_FACT_MONEY = PRE_FACT_MONEY - @IN_REFUND_MONEY WHERE PREPRODUCT_ID = @V_PREPRODUCT_ID
    END

    --2.日志
    SELECT @SSUMMARY = N'预约退款，产品名称：' + @V_PREPRODUCT_NAME
                                 + N'预约号：' + @V_PRE_CODE
                               + N'退款金额：' + CONVERT(NVARCHAR(30),@IN_REFUND_MONEY)
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY) VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    COMMIT TRANSACTION
    END TRY
    --3.异常处理
    BEGIN CATCH
        IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)
        SELECT @V_ERROR_STR = N'Message:%s,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()
        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)
        RETURN -100
    END CATCH
    RETURN 100
GO
