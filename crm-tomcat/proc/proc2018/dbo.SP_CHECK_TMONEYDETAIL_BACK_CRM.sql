USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_CHECK_TMONEYDETAIL_BACK_CRM @IN_SERIAL_NO INT,
                                            @IN_INPUT_MAN INT
WITH ENCRYPTION
AS
    --SET NOCOUNT ON
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    DECLARE @V_PRODUCT_ID INT,@V_SUB_PRODUCT_ID INT,@V_PRE_NUM INT,@V_PRE_MONEY DEC(18,3)
    DECLARE @V_INPUT_MAN INT,@V_CHECK_FLAG INT,@V_ISMONYFH INT
    SELECT @SBUSI_NAME = N'资金到帐复核恢复'
    SELECT @SSUMMARY = N'资金到帐复核恢复'
    SELECT @IBUSI_FLAG = 30220
    
    BEGIN TRY
		SELECT @V_CHECK_FLAG=CHECK_FLAG FROM INTRUST..TMONEYDETAIL WHERE SERIAL_NO = @IN_SERIAL_NO
        IF @@ROWCOUNT=0
            RAISERROR('记录不存在',16,1)

        IF ISNULL(@V_CHECK_FLAG,1)=1
            RAISERROR('已恢复，不用重复恢复',16,1)
     
    BEGIN TRANSACTION
        --资金到账需要业务经理审核时，必须先做业务经理审核，才能做此审核；资金到账不需要业务经理审核时，表TMONEYDETAIL中的CHECK_FLAG必须为1时，才能做复核
        SELECT @V_ISMONYFH = VALUE FROM INTRUST..TSYSCONTROL WHERE FLAG_TYPE = 'ISMONYFH'
        IF @V_ISMONYFH <> 1  --当CRM中开放资金到帐复核恢复菜单，而开关设置一步操作，则代替财务部门的恢复操作
        BEGIN        
            IF ISNULL(@V_CHECK_FLAG,1)<>2
				RAISERROR('财务部门还未审核，不能恢复',16,1)
            EXEC INTRUST..SP_CHECK_TMONEYDETAIL_BACK @IN_SERIAL_NO,@IN_INPUT_MAN
        END
        ELSE
        BEGIN
			IF ISNULL(@V_CHECK_FLAG,1)<>9
				RAISERROR('财务部门已审核，不能恢复',16,1)
			UPDATE INTRUST..TMONEYDETAIL SET CHECK_FLAG=1 WHERE SERIAL_NO = @IN_SERIAL_NO
		END
		SET @SSUMMARY = N'到账资金审核恢复，操作员：' + CAST(@IN_INPUT_MAN AS NVARCHAR(10))+'，记录号：'+CAST(@IN_SERIAL_NO AS VARCHAR)
		INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
			VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    
    COMMIT TRANSACTION
    END TRY

    BEGIN CATCH
        IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION

        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)

        SELECT @V_ERROR_STR = N'Message:%s,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)

        RETURN -100
    END CATCH
    RETURN 100
GO
