USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_QUERY_TTEAMQUOTA_SUBTEAM @IN_TEAM_ID   INT,        --团队ID，-1表示无团队的销售发生
                                     @IN_PRODUCT_ID        INT,        --产品ID
                                     @IN_INPUT_MAN         INT,        --操作员
                                     @IN_PREPRODUCT_ID     INT = NULL, --预发行产品ID
                                     @IN_SUB_PRODUCT_ID    INT = 0     --子产品ID
WITH ENCRYPTION
AS
    --SET NOCOUNT ON
    SET @IN_PRODUCT_ID = ISNULL(@IN_PRODUCT_ID,0)
    DECLARE @V_TEAM_ID INT, @V_USER_ID INT, @V_Role_ID INT
    SELECT @V_USER_ID = USER_ID FROM TSYSTEMINFO
    SELECT @V_Role_ID=ROLE_ID FROM TOPERATOR WHERE OP_CODE=@IN_INPUT_MAN
    --SELECT @V_TEAM_ID = A.TEAM_ID FROM TManagerTeams A
    --    WHERE A.LEADER = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM TManagerTeamMembers Z WHERE A.TEAM_ID = Z.TEAM_ID AND Z.MANAGERID = @IN_INPUT_MAN)
    IF @V_TEAM_ID IS NULL SET @V_TEAM_ID = -1
    DECLARE @V_TEAM_MONEY TABLE(PARENT_ID INT,Q_MONEY DECIMAL(16,3),Q_NUM INT)
    
    IF @IN_PRODUCT_ID <> 0-- OR ISNULL(@IN_PREPRODUCT_ID,0)=0 --针对产品的查询
    BEGIN
		INSERT INTO @V_TEAM_MONEY(PARENT_ID,Q_MONEY,Q_NUM)--本团队所属父团队的配额总额
		SELECT B.PARENT_ID,SUM(A.QUOTAMONEY),SUM(A.QUOTA_QUALIFIED_NUM) FROM TTEAMQUOTA A LEFT JOIN TManagerTeams B ON A.TEAM_ID=B.TEAM_ID
		    WHERE PRODUCT_ID=@IN_PRODUCT_ID
		    GROUP BY B.PARENT_ID
        SELECT A.TEAM_ID,A.TEAM_NAME,A.DESCRIPTION,B.QUOTAMONEY,B.QUOTA_QUALIFIED_NUM,B.ALREADYSALE,B.ALREADY_QUALIFIED_NUM,
            C.QUOTAMONEY-ISNULL(D.Q_MONEY,0) TEAMMONEY,C.QUOTA_QUALIFIED_NUM-ISNULL(D.Q_NUM,0) TEAMQNUM
            FROM TManagerTeams A LEFT JOIN TTEAMQUOTA B ON (A.TEAM_ID = B.TEAM_ID AND B.PRODUCT_ID = @IN_PRODUCT_ID AND (B.SUB_PRODUCT_ID = @IN_SUB_PRODUCT_ID OR ISNULL(@IN_SUB_PRODUCT_ID,0)=0))
            LEFT JOIN (SELECT TEAM_ID,QUOTAMONEY,QUOTA_QUALIFIED_NUM FROM TTEAMQUOTA WHERE PRODUCT_ID=@IN_PRODUCT_ID) C ON C.TEAM_ID=A.PARENT_ID
            LEFT JOIN @V_TEAM_MONEY D ON D.PARENT_ID=A.PARENT_ID
            WHERE ISNULL(A.PARENT_ID,0)<>0 AND (A.LEADER=@IN_INPUT_MAN OR @V_Role_ID=1)
        RETURN
    END
    ELSE IF @IN_PREPRODUCT_ID <> 0  --针对预发行产品的查询
    BEGIN
		INSERT INTO @V_TEAM_MONEY(PARENT_ID,Q_MONEY,Q_NUM)--本团队所属父团队的配额总额
		SELECT B.PARENT_ID,SUM(A.QUOTAMONEY),SUM(A.QUOTA_QUALIFIED_NUM) FROM TTEAMQUOTA A LEFT JOIN TManagerTeams B ON A.TEAM_ID=B.TEAM_ID
		    WHERE PRODUCT_ID=@IN_PREPRODUCT_ID
		    GROUP BY B.PARENT_ID
		SELECT A.TEAM_ID,A.TEAM_NAME,A.DESCRIPTION,B.QUOTAMONEY,B.QUOTA_QUALIFIED_NUM,B.PRE_SALEMONEY,B.ALREADY_QUALIFIED_NUM,
            C.QUOTAMONEY-D.Q_MONEY TEAMMONEY,C.QUOTA_QUALIFIED_NUM-D.Q_NUM TEAMQNUM
            FROM TManagerTeams A LEFT JOIN TTEAMQUOTA B ON (A.TEAM_ID = B.TEAM_ID AND B.PREPRODUCT_ID = @IN_PREPRODUCT_ID AND (B.SUB_PRODUCT_ID = @IN_SUB_PRODUCT_ID OR ISNULL(@IN_SUB_PRODUCT_ID,0)=0))
            LEFT JOIN (SELECT TEAM_ID,QUOTAMONEY,QUOTA_QUALIFIED_NUM FROM TTEAMQUOTA WHERE PRODUCT_ID=@IN_PREPRODUCT_ID) C ON C.TEAM_ID=A.PARENT_ID
            LEFT JOIN @V_TEAM_MONEY D ON D.PARENT_ID=A.PARENT_ID
            WHERE ISNULL(A.PARENT_ID,0)<>0 AND (A.LEADER=@IN_INPUT_MAN OR @V_Role_ID=1)
        RETURN
		
    END
    ELSE
        SELECT B.*, A.TEAM_NAME FROM TTEAMQUOTA B LEFT JOIN TManagerTeams A ON B.TEAM_ID = A.TEAM_ID WHERE 1=0

GO
