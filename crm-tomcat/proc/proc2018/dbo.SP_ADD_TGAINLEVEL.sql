USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_ADD_TGAINLEVEL @IN_PREPRODUCT_ID           INTEGER,        --预发行产品ID
                                   @IN_PROV_FLAG               INTEGER,        --1.优先，2一般，3劣后
                                   @IN_PROV_LEVEL              NVARCHAR(10),   --收益级别编号
                                   @IN_PROV_LEVEL_NAME         NVARCHAR(20),   --收益级别名称
                                   @IN_LOWER_LIMIT             DECIMAL(16,2),  --份额下限
                                   @IN_UPPER_LIMIT             DECIMAL(16,2),  --份额上限
                                   @IN_SUMMARY                 NVARCHAR(200),  --备注
                                   @IN_EXP_RATE                DECIMAL(7,6),   -- 预期收益率
                                   @IN_INPUT_MAN               INTEGER         --操作员
WITH ENCRYPTION 
AS
    --1.参数定义
    --DECLARE @V_ASFUND_FLAG INT,@V_GAIN_FLAG INT,@V_PERIOD_UNIT INT
    DECLARE @V_PRODUCT_CODE NVARCHAR(6),@V_PRODUCT_NAME NVARCHAR(60),@V_SUB_PRODUCT_NAME NVARCHAR(60)
    DECLARE @V_TGAINLEVEL_ID INT
    DECLARE @V_START_DATE INT,@V_END_DATE INT,@V_EXP_RATE1 DECIMAL(7,6),@V_EXP_RATE2 DECIMAL(7,6)
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT
    DECLARE @SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    SET @V_RET_CODE = -330010900
    SET @IBUSI_FLAG = 3300109
    SET @SBUSI_NAME = N'新增收益级别'
    
    BEGIN TRY
        BEGIN TRANSACTION
        
        --SELECT @V_ASFUND_FLAG = ASFUND_FLAG,@V_GAIN_FLAG = GAIN_FLAG,@V_PERIOD_UNIT = PERIOD_UNIT
       --     FROM INTRUST..TPRODUCTLIMIT WHERE PRODUCT_ID = @IN_PRODUCT_ID
            
        --2.错误验证
        IF EXISTS(SELECT 1 FROM TGAINLEVEL 
                      WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID AND PROV_FLAG = @IN_PROV_FLAG AND PROV_LEVEL = @IN_PROV_LEVEL)
        BEGIN
            RAISERROR('该收益级别已设置',16,1)
        END
        
        IF @IN_LOWER_LIMIT > @IN_UPPER_LIMIT BEGIN
            RAISERROR('收益级别份额下限不能大于份额上限',16,1)
        END
        
        
        SELECT @V_PRODUCT_NAME = PREPRODUCT_NAME,@V_START_DATE = START_DATE,@V_END_DATE = PRE_END_DATE
            FROM TPREPRODUCT WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
        
        SELECT @IN_PROV_LEVEL_NAME = TYPE_CONTENT FROM INTRUST..TDICTPARAM WHERE TYPE_VALUE = @IN_PROV_LEVEL

        SET @SSUMMARY = @SBUSI_NAME + N'，预发行产品，产品名称：' + @V_PRODUCT_NAME 
                                    + N'，收益级别：' + ISNULL(@IN_PROV_LEVEL_NAME,'')
                                    + N'，份额区间：' + RTRIM(CONVERT(CHAR,ISNULL(@IN_LOWER_LIMIT,0))) + '-' + RTRIM(CONVERT(CHAR,ISNULL(@IN_UPPER_LIMIT,0)))
        
        --3.业务处理
        INSERT INTO TGAINLEVEL(PREPRODUCT_ID,PROV_FLAG,PROV_LEVEL,PROV_LEVEL_NAME,
                               LOWER_LIMIT,UPPER_LIMIT,SUMMARY,INPUT_MAN)
            VALUES(@IN_PREPRODUCT_ID,@IN_PROV_FLAG,@IN_PROV_LEVEL,@IN_PROV_LEVEL_NAME,
                   @IN_LOWER_LIMIT,@IN_UPPER_LIMIT,@IN_SUMMARY,@IN_INPUT_MAN)
        SET @V_TGAINLEVEL_ID = @@IDENTITY
        
        INSERT INTO TGAINLEVELRATE(DF_SERIAL_NO,START_DATE,END_DATE,GAIN_RATE,INPUT_MAN)
            VALUES(@V_TGAINLEVEL_ID,@V_START_DATE,@V_END_DATE,@IN_EXP_RATE,@IN_INPUT_MAN)
        
        --4.日志记录
        INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
            VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
            
        COMMIT TRANSACTION
    END TRY
    
    --异常处理
    BEGIN CATCH
        IF @@TRANCOUNT > 0 BEGIN
            ROLLBACK TRANSACTION
        END
        
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)

        SELECT @V_ERROR_STR = N'Message:%s,Error:%d,Level:%d,State:%d,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_NUMBER,@V_ERROR_SEVERITY,@V_ERROR_STATE,
                  @V_ERROR_PROCEDURE,@V_ERROR_LINE)

        RETURN -100
    END CATCH
    
    RETURN 100
GO
