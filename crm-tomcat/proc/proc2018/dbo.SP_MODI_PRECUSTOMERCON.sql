USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_MODI_PRECUSTOMERCON @IN_CUST_ID       		INTEGER,
										@IN_TCUSTOMERS_CUST_ID	INTEGER,
                                        @IN_PRODUCT_ID	  		INTEGER,
										@IN_PRE_CODE			NVARCHAR(16),
                                        @IN_INPUT_MAN     		INTEGER
WITH ENCRYPTION
AS

	DECLARE @V_ERROR NVARCHAR(200)
			
	BEGIN TRY
		
		IF NOT EXISTS(SELECT 1 FROM PRECUSTOMERCON WHERE CUST_ID = @IN_CUST_ID)
		BEGIN
			SET @V_ERROR = '预约转认购失败,请检查预约的数据是否已从总行导入!'
			RAISERROR(@V_ERROR,16,1)
		END
		
		UPDATE PRECUSTOMERCON SET TURN_FLAG = 2,
								  TCUSTOMERS_CUST_ID = @IN_TCUSTOMERS_CUST_ID,
								  PRE_CODE = @IN_PRE_CODE
							  WHERE CUST_ID = @IN_CUST_ID AND PRODUCT_ID = @IN_PRODUCT_ID	  
		
	END TRY

    BEGIN CATCH
        IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION

        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)
        SELECT @V_ERROR_STR = N',Message %s,Error %d,Level %d,State %d,Procedure %s,Line %d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        RAISERROR(@V_ERROR_STR,@V_ERROR_MESSAGE,@V_ERROR_SEVERITY,1,@V_ERROR_NUMBER,@V_ERROR_SEVERITY,
                  @V_ERROR_STATE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)
        RETURN -100

    END CATCH
    RETURN 100
GO
