USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_CHECK_TTEAMQUOTA @IN_PREPRODUCT_ID   INT,   --预发行产品ID
                                     @IN_QUOTACHECK_FLAG INT,   --2设置已审核 4调整已审核
                                     @IN_INPUT_MAN       INT    --操作员
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_ERROR NVARCHAR(200)
    DECLARE @IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    SELECT @SBUSI_NAME = N'预发行产品配额审核'
    SELECT @SSUMMARY = N'预发行产品配额审核'
    SELECT @IBUSI_FLAG = 32005

    DECLARE @V_PREPRODUCT_NAME NVARCHAR(100), @V_QUOTACHECK_FLAG INT

    BEGIN TRY
    --1.业务逻辑与操作
    IF NOT EXISTS(SELECT 1 FROM TPREPRODUCT WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID)
    BEGIN
        SET @V_ERROR = N'预发行产品不存在！'
        RAISERROR(@V_ERROR,16,3)
    END
    IF @IN_QUOTACHECK_FLAG NOT IN (2,4)
    BEGIN
        SET @V_ERROR = N'输入审核标志无效！'
        RAISERROR(@V_ERROR,16,3)
    END
    SELECT @V_PREPRODUCT_NAME = PREPRODUCT_NAME, @V_QUOTACHECK_FLAG = QUOTACHECK_FLAG FROM TPREPRODUCT WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
    IF @IN_QUOTACHECK_FLAG = 2 AND @V_QUOTACHECK_FLAG <> 1
    BEGIN
        SET @V_ERROR = N'仅设置未审核的记录才可以审核！'
        RAISERROR(@V_ERROR,16,3)
    END
    IF @IN_QUOTACHECK_FLAG = 4 AND @V_QUOTACHECK_FLAG <> 3
    BEGIN
        SET @V_ERROR = N'仅调整未审核的记录才可以审核！'
        RAISERROR(@V_ERROR,16,3)
    END

    BEGIN TRANSACTION
    UPDATE TPREPRODUCT SET QUOTACHECK_FLAG = @IN_QUOTACHECK_FLAG WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID

    --2.日志
    SET @SSUMMARY = N'预发行产品配额审核，产品：' + @V_PREPRODUCT_NAME + N'；FLAG：' + CONVERT(NVARCHAR(20),@IN_QUOTACHECK_FLAG)
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY) VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    COMMIT TRANSACTION
    END TRY
    --3.异常处理
    BEGIN CATCH
        IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)
        SELECT @V_ERROR_STR = N'Message:%s,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()
        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)
        RETURN -100
    END CATCH
    RETURN 100
GO
