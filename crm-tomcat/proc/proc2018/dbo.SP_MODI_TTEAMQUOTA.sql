USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_MODI_TTEAMQUOTA @IN_SERIAL_NO           INT,        --序号
                                    @IN_PRODUCT_ID          INT,        --产品ID(INTRUST..TPRODUCT.PRODUCT_ID)
                                    @IN_TEAM_ID             INT,        --团队ID(EFCRM..TManagerTeams.TEAM_ID)
                                    @IN_QUOTAMONEY          DECIMAL(16,3) = 0,  --该团队金额配额
                                    @IN_QUOTA_QUALIFIED_NUM INT = 0,    --该团队合格投资人配额
                                    @IN_INPUT_MAN           INT = 0,    --操作员
                                    @IN_PREPRODUCT_ID       INT = 0,     --预发行产品ID(EFCRM..TPREPRODUCT.PREPRODUCT_ID)
                                    @IN_SUB_PRODUCT_ID      INT = 0

WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    DECLARE @V_PRE_MONEY DECIMAL(16,3), @V_QUOTAMONEY_SUM DECIMAL(16,3), @V_QUOTAMONEY DECIMAL(16,3)
    DECLARE @V_QUOTA_NUM INT, @V_QUOTA_QUALIFIED_NUM INT,@V_PARENT_ID INT,@V_DT_INTRUST INT
    DECLARE @V_MAX_MONEY DECIMAL(16,3),@V_MAX_NUM INT
    SELECT @SBUSI_NAME = N'修改销售配额'
    SELECT @SSUMMARY = N'修改销售配额'
    SELECT @IBUSI_FLAG = 30105
    SELECT @V_RET_CODE = -30105000

    SET @IN_PRODUCT_ID = ISNULL(@IN_PRODUCT_ID,0)
    SET @IN_SUB_PRODUCT_ID = ISNULL(@IN_SUB_PRODUCT_ID,0);
    SET @IN_PREPRODUCT_ID = ISNULL(@IN_PREPRODUCT_ID,0)
    SELECT @V_DT_INTRUST=VALUE FROM TSYSCONTROL WHERE FLAG_TYPE='DT_INTRUST'--0无信托1分布式查询和更新信托数据库2本地信托数据库

    BEGIN TRY
    --针对产品设置
    IF @IN_PRODUCT_ID <> 0
    BEGIN
		--IF EXISTS(SELECT * FROM TTEAMQUOTA WHERE (SERIAL_NO <> @IN_SERIAL_NO AND PRODUCT_ID = @IN_PRODUCT_ID AND TEAM_ID = @IN_TEAM_ID AND ISNULL(SUB_PRODUCT_ID,0) = @IN_SUB_PRODUCT_ID ))
        --    RETURN @V_RET_CODE - 1   -- 销售配额项已存在
        IF @V_DT_INTRUST=2--本地信托数据库
		BEGIN
			--产品最大可预约值
			SELECT @V_MAX_MONEY=PRE_MAX_MONEY,@V_MAX_NUM=PRE_MAX_NUM FROM INTRUST..TPRODUCT WHERE PRODUCT_ID= @IN_PRODUCT_ID
			IF @@ROWCOUNT=0
				RAISERROR('产品不存在',16,1)--RETURN -10110001 --产品不存在
		END
		ELSE IF @V_DT_INTRUST=1--分布式查询
		BEGIN
			--产品最大可预约值
			SELECT @V_MAX_MONEY=PRE_MAX_MONEY,@V_MAX_NUM=PRE_MAX_NUM FROM SRV_Intrust.INTRUST.dbo.TPRODUCT WHERE PRODUCT_ID= @IN_PRODUCT_ID
			IF @@ROWCOUNT=0
				RAISERROR('产品不存在',16,1)--RETURN -10110001 --产品不存在
		END
        IF ISNULL(@IN_SERIAL_NO,0)>0
			SELECT @V_QUOTAMONEY = QUOTAMONEY, @V_QUOTA_QUALIFIED_NUM = QUOTA_QUALIFIED_NUM FROM TTEAMQUOTA WHERE SERIAL_NO = @IN_SERIAL_NO
        ELSE
			SELECT @V_QUOTAMONEY = QUOTAMONEY, @V_QUOTA_QUALIFIED_NUM = QUOTA_QUALIFIED_NUM FROM TTEAMQUOTA WHERE TEAM_ID=@IN_TEAM_ID AND PRODUCT_ID=@IN_PRODUCT_ID AND SUB_PRODUCT_ID=@IN_SUB_PRODUCT_ID
        SELECT @V_PARENT_ID = PARENT_ID FROM TManagerTeams WHERE TEAM_ID=@IN_TEAM_ID
        IF ISNULL(@V_PARENT_ID,0)=0
        BEGIN
			--产品所有团队的总配额
			SELECT @V_QUOTAMONEY_SUM = ISNULL(SUM(QUOTAMONEY),0) - ISNULL(@V_QUOTAMONEY,0) + ISNULL(@IN_QUOTAMONEY,0),
					@V_QUOTA_NUM = SUM(ISNULL(QUOTA_QUALIFIED_NUM,0)) - @V_QUOTA_QUALIFIED_NUM + ISNULL(@IN_QUOTA_QUALIFIED_NUM,0)
				FROM TTEAMQUOTA WHERE PRODUCT_ID = @IN_PRODUCT_ID AND TEAM_ID IN (SELECT TEAM_ID FROM TManagerTeams WHERE ISNULL(PARENT_ID,0)=0)
			IF ISNULL(@V_MAX_MONEY,0)>0 AND @V_QUOTAMONEY_SUM>@V_MAX_MONEY
				RAISERROR('配额不能大于预期发行金额',16,1)--RETURN @V_RET_CODE - 2  --配额不能大于预期发行金额
			IF ISNULL(@V_QUOTA_NUM,0) > 50
				RAISERROR('合格投资人数量配额不能超过50个',16,1)--RETURN @V_RET_CODE - 3  --合格投资人数量配额不能超过50个
		END
		ELSE
		BEGIN
			--产品最大可预约值
			SELECT @V_MAX_MONEY=QUOTAMONEY,@V_MAX_NUM=QUOTA_QUALIFIED_NUM FROM TTEAMQUOTA WHERE PRODUCT_ID= @IN_PRODUCT_ID AND SUB_PRODUCT_ID=@IN_SUB_PRODUCT_ID AND TEAM_ID=@V_PARENT_ID
			--团队的总配额
			SELECT @V_QUOTAMONEY_SUM = ISNULL(SUM(QUOTAMONEY),0) - ISNULL(@V_QUOTAMONEY,0) + ISNULL(@IN_QUOTAMONEY,0),
					@V_QUOTA_NUM = SUM(ISNULL(QUOTA_QUALIFIED_NUM,0)) - @V_QUOTA_QUALIFIED_NUM + ISNULL(@IN_QUOTA_QUALIFIED_NUM,0)
				FROM TTEAMQUOTA WHERE PRODUCT_ID = @IN_PRODUCT_ID AND TEAM_ID IN (SELECT TEAM_ID FROM TManagerTeams WHERE ISNULL(PARENT_ID,0)=@V_PARENT_ID)
			IF ISNULL(@V_MAX_MONEY,0)>0 AND @V_QUOTAMONEY_SUM>@V_MAX_MONEY
				RAISERROR('配额不能大于上级团队的配额',16,1)--RETURN @V_RET_CODE - 2  --配额不能大于预期发行金额
			IF ISNULL(@V_QUOTA_NUM,0) > @V_MAX_NUM
				RAISERROR('合格投资人数量配额不能超过上级团队的配额',16,1)
		END
    END
    --针对预发行产品设置
    IF @IN_PREPRODUCT_ID <> 0
    BEGIN
        --IF EXISTS(SELECT * FROM TTEAMQUOTA WHERE (SERIAL_NO <> @IN_SERIAL_NO AND PREPRODUCT_ID = @IN_PREPRODUCT_ID AND TEAM_ID = @IN_TEAM_ID))
        --    RETURN @V_RET_CODE - 1   -- 销售配额项已存在
        IF NOT EXISTS(SELECT 1 FROM TPREPRODUCT WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID)
            RAISERROR('预发行产品不存在',16,1)--RETURN -10110001 --预发行产品不存在
        IF ISNULL(@IN_SERIAL_NO,0)>0
			SELECT @V_QUOTAMONEY = QUOTAMONEY, @V_QUOTA_QUALIFIED_NUM = QUOTA_QUALIFIED_NUM FROM TTEAMQUOTA WHERE SERIAL_NO = @IN_SERIAL_NO
        ELSE
			SELECT @V_QUOTAMONEY = QUOTAMONEY, @V_QUOTA_QUALIFIED_NUM = QUOTA_QUALIFIED_NUM FROM TTEAMQUOTA WHERE TEAM_ID=@IN_TEAM_ID AND PRODUCT_ID=@IN_PRODUCT_ID AND SUB_PRODUCT_ID=@IN_SUB_PRODUCT_ID
        SELECT @V_PARENT_ID = PARENT_ID FROM TManagerTeams WHERE TEAM_ID=@IN_TEAM_ID
        IF ISNULL(@V_PARENT_ID,0)=0
        BEGIN
			--预期发行金额(产品最大可预约值)
			SELECT @V_PRE_MONEY = PRE_MONEY FROM TPREPRODUCT WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
			
			--产品所有团队的总配额
			SELECT @V_QUOTAMONEY_SUM = ISNULL(SUM(QUOTAMONEY),0) - ISNULL(@V_QUOTAMONEY,0) + ISNULL(@IN_QUOTAMONEY,0),
					@V_QUOTA_NUM = SUM(ISNULL(QUOTA_QUALIFIED_NUM,0)) - @V_QUOTA_QUALIFIED_NUM + ISNULL(@IN_QUOTA_QUALIFIED_NUM,0)
				FROM TTEAMQUOTA WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID AND TEAM_ID IN (SELECT TEAM_ID FROM TManagerTeams WHERE ISNULL(PARENT_ID,0)=0)
			IF ISNULL(@V_QUOTAMONEY_SUM,0) > ISNULL(@V_PRE_MONEY,0)
				RAISERROR('配额不能大于预期发行金额',16,1)--RETURN @V_RET_CODE - 2  --配额不能大于预期发行金额
			IF ISNULL(@V_QUOTA_NUM,0) > 50
				RAISERROR('合格投资人数量配额不能超过50个',16,1)--RETURN @V_RET_CODE - 3  --合格投资人数量配额不能超过50个
		END
		ELSE
		BEGIN
			--产品最大可预约值
			SELECT @V_MAX_MONEY=QUOTAMONEY,@V_MAX_NUM=QUOTA_QUALIFIED_NUM FROM TTEAMQUOTA WHERE PRODUCT_ID= @IN_PRODUCT_ID AND TEAM_ID=@V_PARENT_ID
			--产品所有团队的总配额
			SELECT @V_QUOTAMONEY_SUM = ISNULL(SUM(QUOTAMONEY),0) - ISNULL(@V_QUOTAMONEY,0) + ISNULL(@IN_QUOTAMONEY,0),
					@V_QUOTA_NUM = SUM(ISNULL(QUOTA_QUALIFIED_NUM,0)) - @V_QUOTA_QUALIFIED_NUM + ISNULL(@IN_QUOTA_QUALIFIED_NUM,0)
				FROM TTEAMQUOTA WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID AND TEAM_ID IN (SELECT TEAM_ID FROM TManagerTeams WHERE ISNULL(PARENT_ID,0)=@V_PARENT_ID)
			IF ISNULL(@V_QUOTAMONEY_SUM,0) > ISNULL(@V_MAX_MONEY,0)
				RAISERROR('配额不能超过上级团队的配额',16,1)
			IF ISNULL(@V_QUOTA_NUM,0) > ISNULL(@V_MAX_NUM,0)
				RAISERROR('合格投资人数量不能超过上级团队的配额',16,1)
		END
    END

    BEGIN TRANSACTION

    --针对产品设置
    IF @IN_PRODUCT_ID <> 0
    BEGIN
        IF EXISTS(SELECT * FROM TTEAMQUOTA WHERE (PRODUCT_ID = @IN_PRODUCT_ID) AND (TEAM_ID = @IN_TEAM_ID) AND (ISNULL(SUB_PRODUCT_ID,0) = @IN_SUB_PRODUCT_ID))
        BEGIN
           UPDATE TTEAMQUOTA
                SET PRODUCT_ID = @IN_PRODUCT_ID,
                    TEAM_ID = @IN_TEAM_ID,
                    QUOTAMONEY = @IN_QUOTAMONEY,
                    QUOTA_QUALIFIED_NUM = @IN_QUOTA_QUALIFIED_NUM,
                    SUB_PRODUCT_ID = @IN_SUB_PRODUCT_ID
                WHERE (PRODUCT_ID = @IN_PRODUCT_ID)
                    AND (TEAM_ID = @IN_TEAM_ID)
                    AND (SUB_PRODUCT_ID = @IN_SUB_PRODUCT_ID OR ISNULL(@IN_SUB_PRODUCT_ID,0)=0)
        END
        ELSE
        BEGIN
           INSERT INTO TTEAMQUOTA(PRODUCT_ID,TEAM_ID,QUOTAMONEY,QUOTA_QUALIFIED_NUM,SUB_PRODUCT_ID)
               VALUES (@IN_PRODUCT_ID,@IN_TEAM_ID,@IN_QUOTAMONEY,@IN_QUOTA_QUALIFIED_NUM,@IN_SUB_PRODUCT_ID)
        END
   END
    --针对预发行产品设置
    IF @IN_PREPRODUCT_ID <> 0
    BEGIN
        IF EXISTS(SELECT * FROM TTEAMQUOTA WHERE (PREPRODUCT_ID = @IN_PREPRODUCT_ID) AND (TEAM_ID = @IN_TEAM_ID))
        BEGIN
           UPDATE TTEAMQUOTA
                SET PREPRODUCT_ID = @IN_PREPRODUCT_ID,
                    TEAM_ID = @IN_TEAM_ID,
                    QUOTAMONEY = @IN_QUOTAMONEY,
                    QUOTA_QUALIFIED_NUM = @IN_QUOTA_QUALIFIED_NUM
                WHERE SERIAL_NO = @IN_SERIAL_NO
        END
        ELSE
        BEGIN
           INSERT INTO TTEAMQUOTA(PRODUCT_ID,PREPRODUCT_ID,TEAM_ID,QUOTAMONEY,QUOTA_QUALIFIED_NUM,SUB_PRODUCT_ID)
               VALUES (@IN_PRODUCT_ID,@IN_PREPRODUCT_ID,@IN_TEAM_ID,@IN_QUOTAMONEY,@IN_QUOTA_QUALIFIED_NUM,@IN_SUB_PRODUCT_ID)
        END
        UPDATE TPREPRODUCT SET QUOTACHECK_FLAG = 1 WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
    END

    SELECT @SSUMMARY = N'修改销售配额'
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    
    COMMIT TRANSACTION
    END TRY

    BEGIN CATCH
        IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION

        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)

        SELECT @V_ERROR_STR = N'Message:%s,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)

        RETURN -100
    END CATCH
    RETURN 100
GO
