USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_ADD_TSQREDEEM_CRM @IN_BEN_SERIAL_NO         INTEGER,                        --对应TBENIFOTOR表中的SERIAL_NO
                                  @IN_REDEEM_AMOUNT         DECIMAL(16,3),                  --申请赎回份额
                                  @IN_SQ_DATE               INTEGER,                        --申请办理日期
                                  @IN_INPUT_MAN             INTEGER,                        --录入操作员
                                  @IN_BENLIST_SERIAL_NO     INTEGER         = NULL,         --指定赎回时，传入受益明细记录序号
                                  @IN_NAV_PRICE             DECIMAL(16,10)  = 0,            --赎回净值
                                  @IN_OPEN_DATE             INTEGER         = NULL,         --赎回开放日
                                  @IN_REDEEM_MONEY          DECIMAL(16,3)   = 0,            --赎回金额
                                  @IN_FEE_MONEY             DECIMAL(16,3)   = 0,            --其中：赎回费
                                  @IN_TRANSFER_PRODUCT_ID   INTEGER         = NULL,         --转入产品(目前传入的为CRM中预发行产品ID)
                                  @IN_TRANSFER_SUB_PRODUCT_ID   INTEGER     = NULL,         --转入子产品
                                  @IN_TRANSFER_MONEY        DECIMAL(16,3)   = NULL          --转入金额
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_PRODUCT_ID INT,@V_PRODUCT_CODE VARCHAR(6),@V_PRODUCT_NAME NVARCHAR(60),@V_INTRUST_FLAG1 INT
    DECLARE @V_CONTRACT_BH VARCHAR(16),@V_CONTRACT_SUB_BH NVARCHAR(50),@V_LIST_ID INT
    DECLARE @V_CUST_ID INT,@V_CUST_NAME NVARCHAR(100),@V_REDEEM_FREEZE INT
    DECLARE @V_BEN_DATE INT,@V_BEN_AMOUNT DECIMAL(16,3),@V_ORDER_FLAG INT,@V_RET INT
    DECLARE @V_SERIAL_NO INT,@V_SYS_DATE INT,@V_LOGIN_NAME NVARCHAR(100),@V_TASK_CODE INT,
            @OUT_SERIAL_NO INT,@V_OP_NAME NVARCHAR(30),@V_MENU_ID NVARCHAR(10),@V_COERCE_FLAG INT,@V_TA_FLAG INT
    DECLARE @V_COERCE_REDEEM_FLAG INT,@V_MIN_REDEEM_VOL DECIMAL(16,2),@V_MIN_REDEEM_VOL2 DECIMAL(16,2),
            @V_REDEEM_AMOUNT_COERCE DECIMAL(16,2),@V_REDEEM_AMOUNT_COERCE0 DECIMAL(16,2)
    DECLARE @V_FULLAMOUNT_FLAG INT
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME VARCHAR(40),@SSUMMARY VARCHAR(200)
    
    BEGIN TRY
    
    SET @V_RET_CODE = -20404000
    SET @IBUSI_FLAG = 20404
    SET @SBUSI_NAME = '赎回申请'

    IF NOT EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR WHERE SERIAL_NO = @IN_BEN_SERIAL_NO)
        RAISERROR('受益人记录不存在!',16,1)
        
    IF EXISTS(SELECT 1 FROM INTRUST..TSQREDEEM WHERE BEN_SERIAL_NO = @IN_BEN_SERIAL_NO AND CHECK_FLAG = 1 AND SQ_DATE < @IN_SQ_DATE)
        RAISERROR('该受益记录存在未审核的赎回申请记录，请返回编辑!',16,2)

    IF EXISTS(SELECT 1 FROM INTRUST..TBENLIST WHERE SERIAL_NO = @IN_BENLIST_SERIAL_NO)
        SET @V_ORDER_FLAG = 2       --是
    ELSE
        SET @V_ORDER_FLAG = 1       --否
        
    SELECT @V_PRODUCT_ID = A.PRODUCT_ID,@V_CONTRACT_BH = A.CONTRACT_BH,@V_CUST_ID = A.CUST_ID,@V_LIST_ID = A.LIST_ID,
           @V_BEN_DATE = A.BEN_DATE,@V_BEN_AMOUNT = A.BEN_AMOUNT,@V_TA_FLAG = ISNULL(A.TA_FLAG,2),@V_CUST_NAME = C.CUST_NAME,
           @V_PRODUCT_CODE = B.PRODUCT_CODE,@V_PRODUCT_NAME = B.PRODUCT_NAME,@V_INTRUST_FLAG1 = B.INTRUST_FLAG1,
           @V_COERCE_REDEEM_FLAG = D.COERCE_REDEEM_FLAG,@V_REDEEM_FREEZE = ISNULL(D.REDEEM_FREEZE,0),
           @V_MIN_REDEEM_VOL = ISNULL(CASE C.CUST_TYPE WHEN 1 THEN D.MIN_REDEEM_VOL ELSE D.MIN_REDEEM_VOL2 END,0)
        FROM INTRUST..TBENIFITOR A,INTRUST..TPRODUCT B LEFT JOIN INTRUST..TPRODUCTLIMIT D ON B.PRODUCT_ID = D.PRODUCT_ID,INTRUST..TCUSTOMERINFO C 
        WHERE A.SERIAL_NO = @IN_BEN_SERIAL_NO AND A.PRODUCT_ID = B.PRODUCT_ID AND A.CUST_ID = C.CUST_ID
        
    SET @V_FULLAMOUNT_FLAG = CASE WHEN @IN_REDEEM_AMOUNT = @V_BEN_AMOUNT THEN 1 ELSE 2 END
    SET @V_COERCE_FLAG = 2
    SET @V_REDEEM_AMOUNT_COERCE = 0
    SET @V_REDEEM_AMOUNT_COERCE0 = 0

	IF ISNULL(@IN_TRANSFER_PRODUCT_ID,0)>0 --有转入信托产品时
	BEGIN
		IF ISNULL(@IN_TRANSFER_MONEY,0)<=0
			RAISERROR('转入信托产品的金额不合法!',16,1)
		DECLARE @V_CUST_TYPE INT,@OLD_SERVICE_MAN INT,@V_QUOTA_MONEY NUMERIC(18,3), @V_QUOTA_NUM INT,@V_TEAM_ID INT
		SELECT @V_CUST_TYPE = CUST_TYPE,@OLD_SERVICE_MAN=SERVICE_MAN,@V_CUST_NAME=CUST_NAME FROM TCUSTOMERS WHERE CUST_ID = @V_CUST_ID 
		--判断是否超配额
		SELECT @V_QUOTA_MONEY=ISNULL(QUOTAMONEY,0)-ISNULL(PRE_SALEMONEY,0),@V_QUOTA_NUM=ISNULL(QUOTA_QUALIFIED_NUM,0)-ISNULL(PRE_QUALIFIEDNUM,0) FROM TPERSONALQUOTA WHERE PREPRODUCT_ID=@IN_TRANSFER_PRODUCT_ID AND SUB_PRODUCT_ID=0 AND OP_CODE=@OLD_SERVICE_MAN
		IF @@ROWCOUNT>0 --个人配额部分
		BEGIN
			IF @V_QUOTA_MONEY-@IN_TRANSFER_MONEY<0
				RAISERROR('个人配额已不足，不能再转入预约',16,1)
			--个人预约金额小于300W记录小额预约份数
			IF @V_CUST_TYPE = 1 AND @IN_TRANSFER_MONEY < 3000000 AND @V_QUOTA_NUM-1<0
				RAISERROR('个人配额的合同份数已不足，不能再转入预约',16,1)
		END
		ELSE IF EXISTS (SELECT * FROM TPERSONALQUOTA WHERE PREPRODUCT_ID=@IN_TRANSFER_PRODUCT_ID AND SUB_PRODUCT_ID=0 AND QUOTAMONEY>0)
			RAISERROR('个人配额未设置，不能转入预约',16,1)
		SELECT TOP 1 @V_TEAM_ID=TEAM_ID FROM TManagerTeamMembers WHERE MANAGERID=@OLD_SERVICE_MAN
		--团队配额部分
		SELECT @V_QUOTA_MONEY=ISNULL(QUOTAMONEY,0)-ISNULL(PRE_SALEMONEY,0),@V_QUOTA_NUM=ISNULL(QUOTA_QUALIFIED_NUM,0)-ISNULL(PRE_QUALIFIEDNUM,0) FROM TTEAMQUOTA WHERE (PREPRODUCT_ID=@IN_TRANSFER_PRODUCT_ID) AND SUB_PRODUCT_ID=0 AND TEAM_ID=@V_TEAM_ID
		IF @@ROWCOUNT>0
		BEGIN
			IF @V_QUOTA_MONEY-@IN_TRANSFER_MONEY<0
				RAISERROR('本团队配额已不足，不能再转入预约',16,1)
			IF @V_CUST_TYPE = 1 AND @IN_TRANSFER_MONEY < 3000000 AND @V_QUOTA_NUM-1<0 --个人预约金额小于300W记录小额预约份数
				RAISERROR('本团队配额的合同份数已不足，不能再转入预约',16,1)
		END
		ELSE IF EXISTS (SELECT * FROM TTEAMQUOTA WHERE PREPRODUCT_ID=@IN_TRANSFER_PRODUCT_ID AND SUB_PRODUCT_ID=0 AND QUOTAMONEY>0)
			RAISERROR('本团队配额未设置，不能转入预约',16,1)
    END
    --指定赎回
    IF @V_ORDER_FLAG = 2
    BEGIN
        SELECT @V_BEN_DATE = BEN_DATE,@V_BEN_AMOUNT = BEN_AMOUNT FROM INTRUST..TBENLIST WHERE SERIAL_NO = @IN_BENLIST_SERIAL_NO
    END
    
    IF @IN_REDEEM_AMOUNT > @V_BEN_AMOUNT
        RAISERROR('赎回份额不能大于受益份额!',16,3)
        
    IF dbo.GETDATEDIFF(@V_BEN_DATE,@IN_SQ_DATE) < @V_REDEEM_FREEZE AND @V_REDEEM_FREEZE > 0
        RAISERROR('赎回冻结期内不能进行赎回申请!',16,4)

    SELECT @V_CONTRACT_SUB_BH = CONTRACT_SUB_BH FROM INTRUST..TCONTRACT WHERE PRODUCT_ID = @V_PRODUCT_ID AND CONTRACT_BH = @V_CONTRACT_BH
    
    /*IF @V_TA_FLAG = 1 BEGIN
        SET @V_COERCE_FLAG = 1
        SET @V_REDEEM_AMOUNT_COERCE = @IN_REDEEM_AMOUNT
    END */

    IF ISNULL(@V_COERCE_REDEEM_FLAG,2) = 1 /*AND @V_ORDER_FLAG = 1 */ 
    BEGIN
        SET @V_REDEEM_AMOUNT_COERCE0 = @V_BEN_AMOUNT - @IN_REDEEM_AMOUNT
        IF 0 < @V_REDEEM_AMOUNT_COERCE0 AND @V_REDEEM_AMOUNT_COERCE0 < ISNULL(@V_MIN_REDEEM_VOL,0) 
        BEGIN
            SELECT @V_COERCE_FLAG = 1
            SELECT @V_FULLAMOUNT_FLAG = 1
            SELECT @V_REDEEM_AMOUNT_COERCE = @V_REDEEM_AMOUNT_COERCE0
        END
    END

    BEGIN TRANSACTION

    INSERT INTO INTRUST..TSQREDEEM(BEN_SERIAL_NO,PRODUCT_ID,CONTRACT_BH,LIST_ID,REDEEM_AMOUNT,REDEEM_AMOUNT0,
                         SQ_DATE,INPUT_MAN,ORDER_FLAG,BL_SERIAL_NO,NAV_PRICE,TRANS_DATE,
                         REDEEM_RATE,REDEEM_MONEY,FEE,COERCE_FLAG,FULLAMOUNT_FLAG,REDEEM_AMOUNT_COERCE,
                         TRANSFER_PRODUCT_ID,TRANSFER_SUB_PRODUCT_ID,TRANSFER_MONEY)
        VALUES(@IN_BEN_SERIAL_NO,@V_PRODUCT_ID,@V_CONTRACT_BH,@V_LIST_ID,@IN_REDEEM_AMOUNT,@IN_REDEEM_AMOUNT,
               @IN_SQ_DATE,@IN_INPUT_MAN,@V_ORDER_FLAG,@IN_BENLIST_SERIAL_NO,@IN_NAV_PRICE,@IN_OPEN_DATE,
               1,@IN_REDEEM_MONEY,@IN_FEE_MONEY,@V_COERCE_FLAG,@V_FULLAMOUNT_FLAG,@V_REDEEM_AMOUNT_COERCE,
               @IN_TRANSFER_PRODUCT_ID,@IN_TRANSFER_SUB_PRODUCT_ID,@IN_TRANSFER_MONEY)
    SET @V_SERIAL_NO = @@IDENTITY

    --强制赎回
    IF  @V_COERCE_FLAG = 1 /*AND @V_TA_FLAG <> 1*/
        UPDATE INTRUST..TSQREDEEM
            SET REDEEM_AMOUNT_COERCE = @V_REDEEM_AMOUNT_COERCE,
                REDEEM_AMOUNT0       = ISNULL(REDEEM_AMOUNT0,0) + @V_REDEEM_AMOUNT_COERCE,
                FULLAMOUNT_FLAG      = 1
            WHERE SERIAL_NO = @V_SERIAL_NO
    
    --信息提示
    IF @V_INTRUST_FLAG1 = 1
        SET @V_MENU_ID = '4020702'
    ELSE
        SET @V_MENU_ID = '2130602'

    SELECT @V_TASK_CODE = TASK_CODE,@V_LOGIN_NAME = TASK_INFO FROM INTRUST..TTASKDICT WHERE TASK_CODE = 601
    SET @V_LOGIN_NAME = @V_LOGIN_NAME + N'产品编号：' + @V_PRODUCT_CODE + N'；产品名称: ' + @V_PRODUCT_NAME
                                      + N'；合同序号：' + @V_CONTRACT_BH + N'；合同编号：' + @V_CONTRACT_SUB_BH
                                      + N'；受益人：' + @V_CUST_NAME + N'；赎回份额：' + CONVERT(NVARCHAR,@IN_REDEEM_AMOUNT)
                                      
    SET @V_SYS_DATE = CONVERT(INT,CONVERT(CHAR(8),GETDATE(),112))
    
    EXEC @V_RET = INTRUST..SP_INNER_MAKETASKINFO @V_TASK_CODE,@V_LOGIN_NAME,@V_LOGIN_NAME,@V_SYS_DATE,@V_PRODUCT_ID,
                                             @IN_INPUT_MAN,@V_MENU_ID,@IN_INPUT_MAN,@V_SERIAL_NO,0

    --日志记录
    SELECT @SSUMMARY = @SBUSI_NAME + N',产品编号: ' + @V_PRODUCT_CODE
                                   + N',合同序号: ' + @V_CONTRACT_BH
                                   + N',合同编号: ' + @V_CONTRACT_SUB_BH
                                   + N',受益人：' + @V_CUST_NAME
                                   + N',申请日期：' + CONVERT(NVARCHAR,@IN_SQ_DATE)
                                   + N',赎回份额：' + CONVERT(NVARCHAR,@IN_REDEEM_AMOUNT)
                                   + N',赎回金额：' + CONVERT(NVARCHAR,@IN_REDEEM_MONEY)
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)

    COMMIT TRANSACTION
    END TRY

    BEGIN CATCH
        IF @@TRANCOUNT > 0 BEGIN
            ROLLBACK TRANSACTION
        END
        
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)

        SELECT @V_ERROR_STR = N'Message:%s,<br><font color = "white">Error:%d,Level:%d,State:%d,Procedure:%s,Line:%d </font>',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_NUMBER,@V_ERROR_SEVERITY,@V_ERROR_STATE,
                  @V_ERROR_PROCEDURE,@V_ERROR_LINE)
        
        RETURN -100
    END CATCH
    
    RETURN 100
GO
