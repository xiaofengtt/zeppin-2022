USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_STAT_CUST_CONTRACT2 @P_FUNCTION_ID          INT,            --100: 152@客户购买明细简表;200: 153@客户购买明细表;0统计客户经理的客户汇总；1统计客户明细
                                        @P_PRODUCT_ID           INT,            --产品ID
                                        @P_CUST_TYPE            INT,
                                        @P_ORDERBY              NVARCHAR(60),   --输出排序字段
                                        @IN_INPUT_MAN           INT = NULL,
                                        @IN_GroupID             INT = NULL,    --客户分组序号
                                        @IN_CLASSDETAIL_ID      INT = NULL,    --客户分级ID
                                        @IN_SCOPE               INT=0,         --统计范围:0全部，1本人；2本部门
                                        @IN_RG_DATE_START       INT=0,         --统计认购起始日期
                                        @IN_RG_DATE_END         INT=21991231   --统计认购终止日期
WITH ENCRYPTION
AS
    -- 帐套|操作员|RET|分布式标志|产品访问标志
    DECLARE @V_BOOK_CODE INT, @V_INTRUST_OPERATOR INT,@RET INT, @V_DT_INTRUST INT,@V_SW20409_R INT
    DECLARE @V_STR NVARCHAR(100),@V_FLAG_ACCESS_ALL INT
    DECLARE @V_STEMP NVARCHAR(2000), @V_PRODUCT_NAME NVARCHAR(60), @V_CONTRACT_BH NVARCHAR(16), @V_RG_MONEY DEC(16,3), @V_CUST_ID INT, @V_QS_DATE INT
    DECLARE @V_PRODUCTS TABLE(PRODUCT_ID INT)
    DECLARE @V_OPCODES TABLE(OP_CODE INT)
    --产品信息
    DECLARE @V_PRODUCT_IDS TABLE(PRODUCT_ID INT,PRODUCT_NAME NVARCHAR(60))

    SET @IN_RG_DATE_START=ISNULL(@IN_RG_DATE_START,0)
    IF ISNULL(@IN_RG_DATE_END,0)=0 SET @IN_RG_DATE_END=21991231
    SET @V_FLAG_ACCESS_ALL=0
    ------临时表
    CREATE TABLE #STAT_CUST_CONTRACT (
        CUST_ID         INT,
        --CUST_NO         NVARCHAR(8),
        --CUST_NAME       NVARCHAR(100),
        --CUST_TYPE       INT,
        RG_TIMES        INT,
        RG_MONEY        DECIMAL(16,3),
        CURRENT_MONEY   DECIMAL(16,3),
        BEN_AMOUNT      DECIMAL(16,3),
        PRODUCT_NAMES   NVARCHAR(2000)
    )
    
    -- 映射帐套
    SELECT @V_BOOK_CODE = INTRUST_BOOKCODE, @V_INTRUST_OPERATOR = INTRUST_Operator
        FROM INTRUST.dbo.TOperatorMap WHERE CRM_Operator = @IN_INPUT_MAN
    IF @V_INTRUST_OPERATOR IS NULL --从sso映射表中未取到Intrust操作员时，使用CRM操作员
        SELECT @V_INTRUST_OPERATOR = @IN_INPUT_MAN
    IF @V_BOOK_CODE IS NULL --从sso映射表中未取到Intrust帐套时，使用Intrust操作员表设置的默认帐套
        SELECT @V_BOOK_CODE = BOOK_CODE FROM INTRUST.dbo.TOPERATOR WHERE OP_CODE = @V_INTRUST_OPERATOR
    IF @V_BOOK_CODE IS NULL --最后取不到使用默认值1
        SELECT @V_BOOK_CODE = 1
    IF @IN_SCOPE=2 --保存下本部门的客户经理列表
		INSERT INTO @V_OPCODES
			SELECT OP_CODE FROM TOPERATOR WHERE DEPART_ID=(SELECT DEPART_ID FROM TOPERATOR WHERE OP_CODE=@IN_INPUT_MAN)

    SELECT @V_STR = ''
    -- 分布式标志
    SELECT @V_DT_INTRUST = VALUE FROM TSYSCONTROL WHERE FLAG_TYPE = N'DT_INTRUST'
    --获得开关 报表数据是否根据产品访问权过滤
    SELECT @V_SW20409_R = VALUE FROM TSYSCONTROL WHERE FLAG_TYPE = 'SW20409R'
    --能够访问所有客户信息
    IF EXISTS(SELECT 1 FROM TOPRIGHT WHERE OP_CODE = @IN_INPUT_MAN AND MENU_ID = N'999' AND FUNC_ID = 99903)
        SELECT @V_FLAG_ACCESS_ALL = 1
    --如果操作员的角色中存在访问所有客户信息权限的标志 则赋予能够访问所有客户信息权限
    IF EXISTS(SELECT 1 FROM TOPROLE WHERE OP_CODE = @IN_INPUT_MAN AND ROLE_ID IN(SELECT ROLE_ID FROM TROLE WHERE FLAG_ACCESS_ALL = 1))
        SELECT @V_FLAG_ACCESS_ALL = 1
--------------------------------------------------------------------
    DECLARE @V_MANAGER_IDS TABLE(MANAGERID INT, MANAGERNAME NVARCHAR(60))
    DECLARE @V_TEMPCUST2 TABLE(CUST_ID INT,AUTH_FLAG INT) --根据访问权限能够访问的客户
    DECLARE @IN_NODE_SHARE INT
    IF @V_FLAG_ACCESS_ALL=0
    BEGIN
		--客户经理级别树中，同节点客户经理是否共享客户
		IF EXISTS(SELECT 1 FROM TSYSCONTROL WHERE FLAG_TYPE = 'MANAGER002' AND VALUE = 1)
			SET @IN_NODE_SHARE = 0  --共享
		ELSE
			SET @IN_NODE_SHARE = 1  --不共享
		--处理客户经理同级共享(共享给当前操作员的源客户经理)，共享时，同节点及下级节点的客户经理所辖客户，由于也具有访问权限，故一起共享了。故对经理树的处理放在下面
		INSERT INTO @V_MANAGER_IDS(MANAGERID)
			SELECT SourceManagerID FROM TAuthorizationShare WHERE ShareType = 1 AND Status = 1 AND ManagerID = @IN_INPUT_MAN
		--从客户经理树取当前操作员所辖客户经理,再取这些客户经理的客户
		INSERT INTO @V_MANAGER_IDS
			--1.根据节点主经理来判断当前操作员
			--所辖节点的主客户经理
			SELECT A.MANAGERID,A.MANAGERNAME FROM TCustManagerTree A, TCustManagerTree B
			WHERE (A.LEFT_ID BETWEEN B.LEFT_ID+@IN_NODE_SHARE AND B.RIGHT_ID) AND A.MANAGERID <> 0 AND A.MANAGERID IS NOT NULL
				AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
			--所辖节点的成员客户经理
			UNION ALL
			SELECT C.MANAGERID,C.MANAGERNAME FROM TCustManagerTree A, TCustManagerTree B, TCustManagerTreeMembers C
			WHERE (A.LEFT_ID BETWEEN B.LEFT_ID+@IN_NODE_SHARE AND B.RIGHT_ID) AND A.SERIAL_NO = C.TREE_ID
				AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
			--2.根据节点成员经理来判断当前操作员
			--所辖节点的主客户经理
			UNION ALL
			SELECT D.MANAGERID,D.MANAGERNAME FROM TCustManagerTreeMembers B, TCustManagerTree C, TCustManagerTree D
			WHERE B.TREE_ID = C.SERIAL_NO AND (D.LEFT_ID BETWEEN C.LEFT_ID+@IN_NODE_SHARE AND C.RIGHT_ID)
				AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
			--所辖节点的成员客户经理
			UNION ALL
			SELECT A.MANAGERID,A.MANAGERNAME FROM TCustManagerTreeMembers B, TCustManagerTree C, TCustManagerTree D, TCustManagerTreeMembers A
			WHERE B.TREE_ID = C.SERIAL_NO AND (D.LEFT_ID BETWEEN C.LEFT_ID+@IN_NODE_SHARE AND C.RIGHT_ID) AND A.TREE_ID = D.SERIAL_NO
				AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
		--处理授权给下级的(当前操作员的)客户授权集，注：被授权的客户没有级联共享给同级别经理
		INSERT INTO @V_TEMPCUST2(CUST_ID,AUTH_FLAG)
			SELECT DISTINCT A.CUST_ID,A.AUTH_FLAG FROM TAuthorizationCusts A, TAuthorizationShare B
			WHERE A.CA_ID = B.CA_ID AND B.ShareType = 2 AND B.Status = 1 AND B.ManagerID = @IN_INPUT_MAN
				AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
		--处理快捷授权的客户ShareType=3，仅查询
		INSERT INTO @V_TEMPCUST2(CUST_ID,AUTH_FLAG)
			SELECT CUST_ID,0 FROM TAuthorizationShare A WHERE ShareType = 3 AND Status = 1 AND CUST_ID <> 0 AND (GETDATE() BETWEEN ISNULL(A.START_TIME,GETDATE()) AND ISNULL(A.INVALID_TIME,GETDATE()+36000)) AND ManagerID = @IN_INPUT_MAN
				AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
			UNION ALL
			SELECT B.CUST_ID,0 FROM TAuthorizationShare A, TCustomers B
			WHERE A.SourceManagerID = B.SERVICE_MAN AND A.ShareType = 3 AND A.Status = 1 AND A.CUST_ID = 0 AND (GETDATE() BETWEEN ISNULL(A.START_TIME,GETDATE()) AND ISNULL(A.INVALID_TIME,GETDATE()+36000)) AND A.ManagerID = @IN_INPUT_MAN
				AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
		--以上客户经理的客户
		INSERT INTO @V_TEMPCUST2(CUST_ID)
			SELECT DISTINCT CUST_ID FROM TCustomers A
			WHERE (EXISTS( SELECT 1 FROM @V_MANAGER_IDS B WHERE A.SERVICE_MAN = B.MANAGERID) )
				AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
		--团队领导的团队成员
		INSERT INTO @V_TEMPCUST2(CUST_ID)
			SELECT CUST_ID FROM TCustomers T WHERE EXISTS (
				SELECT MANAGERID FROM TManagerTeamMembers A WHERE EXISTS (SELECT TEAM_ID FROM TManagerTeams B WHERE A.TEAM_ID=B.TEAM_ID AND LEADER=@IN_INPUT_MAN)
					AND T.SERVICE_MAN=A.MANAGERID)
				AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE T.CUST_ID = C.CUST_ID)
	END
------------------------------------------------------------------------
/*    IF @V_DT_INTRUST = 1 --启用分布式
    BEGIN
        -- 获得可访问的产品ID
        IF @V_SW20409_R = 1
        INSERT INTO @V_PRODUCTS
            SELECT PRODUCT_ID FROM SRV_Intrust.INTRUST.dbo.TPRODUCT WHERE BOOK_CODE = @V_BOOK_CODE
                AND(INTRUST_FLAG1 IN ( SELECT FUNC_ID-2040900 FROM SRV_Intrust.INTRUST.dbo.TOPRIGHT WHERE MENU_ID = '20409' AND FUNC_ID > 2040900 AND FUNC_ID <= 2040999 AND OP_CODE = @IN_INPUT_MAN )
                    OR PRODUCT_ID IN ( SELECT FUNC_ID FROM SRV_Intrust.INTRUST.dbo.TOPRIGHT WHERE MENU_ID = '20409' AND FUNC_ID < 2040900 AND OP_CODE = @IN_INPUT_MAN)
                    OR ADMIN_MANAGER = @IN_INPUT_MAN OR INPUT_MAN = @IN_INPUT_MAN OR ISNULL(@IN_INPUT_MAN,0)=0 )
        -- 产品过滤
        INSERT INTO @V_PRODUCT_IDS
            SELECT PRODUCT_ID,PRODUCT_NAME
            FROM SRV_Intrust.INTRUST.dbo.TPRODUCT
            WHERE BOOK_CODE = @V_BOOK_CODE
                AND (ISNULL(@P_PRODUCT_ID,0)=0 OR PRODUCT_ID = @P_PRODUCT_ID)
                AND (ISNULL(@V_SW20409_R,0)= 0 OR PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCTS))

        --获得受益人
        SELECT DISTINCT CUST_ID INTO #CUST_IDS FROM SRV_Intrust.INTRUST.dbo.TBENIFITOR WHERE PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCT_IDS )
        --统计客户合同信息
        INSERT INTO #STAT_CUST_CONTRACT(CUST_ID, CUST_NO, CUST_NAME,CUST_TYPE, RG_TIMES, RG_MONEY, CURRENT_MONEY)
        SELECT CUST_ID, CUST_NO, CUST_NAME, CUST_TYPE, RG_TIMES, TOTAL_MONEY, CURRENT_MONEY
        FROM SRV_Intrust.INTRUST.dbo.TCUSTOMERINFO
        WHERE ( CUST_TYPE = @P_CUST_TYPE OR @P_CUST_TYPE IS NULL OR @P_CUST_TYPE = 0 )
           AND (CUST_ID IN (SELECT CUST_ID FROM #CUST_IDS))
           AND (ISNULL(@IN_GroupID,0)=0 OR CUST_ID IN (SELECT CUST_ID FROM TCustGroupMembers WHERE GroupID = @IN_GroupID))
           AND (ISNULL(@IN_CLASSDETAIL_ID,0)=0 OR CUST_ID IN (SELECT CUST_ID FROM TCustomerClass WHERE CLASSDETAIL_ID = @IN_CLASSDETAIL_ID))
		   AND (@IN_SCOPE=0 --全部
                OR @IN_SCOPE=1 AND SERVICE_MAN=@V_INTRUST_OPERATOR --本人
                OR @IN_SCOPE=2 AND EXISTS(SELECT * FROM @V_OPCODES WHERE OP_CODE=TCUSTOMERINFO.SERVICE_MAN)--本部门
                )
        --修改   受益值
        UPDATE #STAT_CUST_CONTRACT SET BEN_AMOUNT = B.BEN_AMOUNT
        FROM #STAT_CUST_CONTRACT A, ( SELECT CUST_ID, BEN_AMOUNT = SUM(BEN_AMOUNT) FROM SRV_Intrust.INTRUST.dbo.TBENIFITOR GROUP BY CUST_ID ) B
        WHERE A.CUST_ID = B.CUST_ID*/
        /*
        --200时，将客户购买产品情况都放到 PRODUCT_NAMES 字段中
        IF @P_FUNCTION_ID = 200
        BEGIN
            DECLARE CUR_CUST_CONTRACT CURSOR FOR
                SELECT CUST_ID FROM #STAT_CUST_CONTRACT
            OPEN CUR_CUST_CONTRACT
            FETCH CUR_CUST_CONTRACT INTO @V_CUST_ID
            WHILE @@FETCH_STATUS = 0
            BEGIN
                SELECT @V_STEMP = ''
                DECLARE CUR_200 CURSOR FOR
                    SELECT B.PRODUCT_NAME, SUM(A.BEN_AMOUNT) AS RG_MONEY
                        FROM SRV_Intrust.INTRUST.dbo.TBENIFITOR A, @V_PRODUCT_IDS B
                        WHERE A.PRODUCT_ID = B.PRODUCT_ID AND CUST_ID = @V_CUST_ID
                        GROUP BY B.PRODUCT_NAME, A.CUST_ID
                OPEN CUR_200
                FETCH CUR_200 INTO @V_PRODUCT_NAME, @V_RG_MONEY
                WHILE @@FETCH_STATUS = 0
                BEGIN
                    SELECT @V_STEMP = @V_STEMP + '  ' + @V_PRODUCT_NAME + N':金额('
                        + RTRIM(CONVERT(NVARCHAR(20),ROUND(@V_RG_MONEY,2))) + ')'
                    FETCH CUR_200 INTO @V_PRODUCT_NAME, @V_RG_MONEY
                END
                CLOSE CUR_200
                DEALLOCATE CUR_200
                UPDATE #STAT_CUST_CONTRACT SET PRODUCT_NAMES = LTRIM(RTRIM(@V_STEMP)) WHERE CUST_ID = @V_CUST_ID
                FETCH CUR_CUST_CONTRACT INTO @V_CUST_ID
            END
            CLOSE CUR_CUST_CONTRACT
            DEALLOCATE CUR_CUST_CONTRACT
        END*/
  /*  END
    ELSE*/ IF (@V_DT_INTRUST = 2) AND EXISTS(SELECT * FROM master..sysdatabases WHERE NAME = N'INTRUST') --本地信托数据库
    BEGIN
        -- 获得可访问的产品ID   The Products can be accessed
        IF @V_SW20409_R = 1
        INSERT INTO @V_PRODUCTS
            SELECT PRODUCT_ID FROM INTRUST.dbo.TPRODUCT WHERE BOOK_CODE = @V_BOOK_CODE
                AND(INTRUST_FLAG1 IN ( SELECT FUNC_ID-2040900 FROM INTRUST.dbo.TOPRIGHT WHERE MENU_ID = '20409' AND FUNC_ID > 2040900 AND FUNC_ID <= 2040999 AND OP_CODE = @IN_INPUT_MAN )
                    OR PRODUCT_ID IN ( SELECT FUNC_ID FROM INTRUST.dbo.TOPRIGHT WHERE MENU_ID = '20409' AND FUNC_ID < 2040900 AND OP_CODE = @IN_INPUT_MAN)
                    OR ADMIN_MANAGER = @IN_INPUT_MAN OR INPUT_MAN = @IN_INPUT_MAN OR ISNULL(@IN_INPUT_MAN,0)=0 )
        -- 产品过滤
        INSERT INTO @V_PRODUCT_IDS SELECT PRODUCT_ID,PRODUCT_NAME FROM INTRUST.dbo.TPRODUCT WHERE BOOK_CODE = @V_BOOK_CODE
            AND (ISNULL(@P_PRODUCT_ID,0)=0 OR PRODUCT_ID = @P_PRODUCT_ID)
            AND (ISNULL(@V_SW20409_R,0) = 0 OR PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCTS))
        --统计客户合同信息
        INSERT INTO #STAT_CUST_CONTRACT(CUST_ID,RG_TIMES, RG_MONEY)
			SELECT CUST_ID,COUNT(0) RG_TIMES,SUM(RG_MONEY) RG_MONEY FROM INTRUST..TCONTRACT A
				WHERE (ISNULL(@P_PRODUCT_ID,0)=0 OR PRODUCT_ID=@P_PRODUCT_ID) --指定的产品
					AND PRODUCT_ID IN ( SELECT PRODUCT_ID FROM @V_PRODUCT_IDS ) --有产品的查询权限
					AND QS_DATE>=@IN_RG_DATE_START AND QS_DATE<=@IN_RG_DATE_END --签署日期在日期区间内
					AND (ISNULL(@IN_GroupID,0)=0 OR EXISTS(SELECT CUST_ID FROM TCustGroupMembers WHERE CUST_ID=A.CUST_ID AND GroupID = @IN_GroupID)) --客户群组
					AND (ISNULL(@IN_CLASSDETAIL_ID,0)=0 OR EXISTS (SELECT CUST_ID FROM TCustomerClass WHERE CUST_ID=A.CUST_ID AND CLASSDETAIL_ID = @IN_CLASSDETAIL_ID))--客户分级
				GROUP BY CUST_ID
		--受让金额
		SELECT TO_CUST_ID,COUNT(0) RG_TIMES,SUM(TO_AMOUNT) TO_AMOUNT INTO #TME_CHANGE FROM INTRUST.dbo.TBENCHANGES A
            WHERE (PRODUCT_ID = @P_PRODUCT_ID OR @P_PRODUCT_ID = 0) --指定的产品
                AND (PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCT_IDS)) --有产品的查询权限
                AND CHANGE_DATE>=@IN_RG_DATE_START AND CHANGE_DATE<=@IN_RG_DATE_END --受让日期在日期区间内
                AND CHECK_FLAG = 2 AND TRANS_TYPE NOT IN('181511','181512','181513','181514')
            	AND (ISNULL(@IN_GroupID,0)=0 OR EXISTS(SELECT CUST_ID FROM TCustGroupMembers WHERE CUST_ID=A.TO_CUST_ID AND GroupID = @IN_GroupID)) --客户群组
				AND (ISNULL(@IN_CLASSDETAIL_ID,0)=0 OR EXISTS (SELECT CUST_ID FROM TCustomerClass WHERE CUST_ID=A.TO_CUST_ID AND CLASSDETAIL_ID = @IN_CLASSDETAIL_ID))--客户分级
			GROUP BY TO_CUST_ID
		--统计中，加上受让部分
		UPDATE #STAT_CUST_CONTRACT SET RG_TIMES=A.RG_TIMES+C.RG_TIMES,RG_MONEY=ISNULL(A.RG_MONEY,0)+ISNULL(C.TO_AMOUNT,0) FROM #STAT_CUST_CONTRACT A,#TME_CHANGE C WHERE A.CUST_ID=C.TO_CUST_ID
		INSERT INTO #STAT_CUST_CONTRACT(CUST_ID,RG_TIMES, RG_MONEY)
			SELECT TO_CUST_ID,RG_TIMES,TO_AMOUNT FROM #TME_CHANGE WHERE NOT EXISTS (SELECT * FROM #STAT_CUST_CONTRACT WHERE CUST_ID=#TME_CHANGE.TO_CUST_ID)
		--获得受益人受益金额
        SELECT CUST_ID,SUM(ISNULL(BEN_AMOUNT,0)) BEN_AMOUNT INTO #CUST_BEN FROM INTRUST.dbo.TBENIFITOR A
			WHERE (ISNULL(@P_PRODUCT_ID,0)=0 OR PRODUCT_ID=@P_PRODUCT_ID) --指定的产品
				AND PRODUCT_ID IN ( SELECT PRODUCT_ID FROM @V_PRODUCT_IDS ) --有产品的查询权限
				AND BEN_DATE>=@IN_RG_DATE_START AND BEN_DATE<=@IN_RG_DATE_END --受益起始日期在日期区间内
				AND (ISNULL(@IN_GroupID,0)=0 OR EXISTS(SELECT CUST_ID FROM TCustGroupMembers WHERE CUST_ID=A.CUST_ID AND GroupID = @IN_GroupID)) --客户群组
				AND (ISNULL(@IN_CLASSDETAIL_ID,0)=0 OR EXISTS (SELECT CUST_ID FROM TCustomerClass WHERE CUST_ID=A.CUST_ID AND CLASSDETAIL_ID = @IN_CLASSDETAIL_ID))--客户分级
			GROUP BY CUST_ID
        --统计中，当前受益金额；存量金额，也改成从受益表中取，即：和受益金额一致
		UPDATE #STAT_CUST_CONTRACT SET BEN_AMOUNT=B.BEN_AMOUNT,CURRENT_MONEY=B.BEN_AMOUNT FROM #CUST_BEN B,#STAT_CUST_CONTRACT A WHERE A.CUST_ID=B.CUST_ID
		
    END

	
    /*INSERT INTO #STAT_CUST_CONTRACT(CUST_ID,CUST_NO,RG_MONEY,CURRENT_MONEY,BEN_AMOUNT)
    SELECT 99999999,N'合计',SUM(ISNULL(RG_MONEY,0)),SUM(ISNULL(CURRENT_MONEY,0)),SUM(ISNULL(BEN_AMOUNT,0)) FROM #STAT_CUST_CONTRACT
    */
    IF @P_FUNCTION_ID=0 --根据客户经理来统计报表
    BEGIN
		SELECT C.OP_CODE SERVICE_MAN,C.OP_NAME,SUM(A.RG_TIMES) RG_TIMES,SUM(A.RG_MONEY) RG_MONEY,
				SUM(A.CURRENT_MONEY) CURRENT_MONEY,SUM(A.BEN_AMOUNT) BEN_AMOUNT
				, STUFF(REPLACE(REPLACE((SELECT TEAM_NAME FROM (SELECT TEAM_NAME FROM TManagerTeamMembers WHERE MANAGERID=C.OP_CODE UNION SELECT TEAM_NAME FROM TManagerTeams WHERE LEADER=C.OP_CODE) T FOR XML AUTO), '<T TEAM_NAME="', ','), '"/>', ''), 1, 1, '') TEAM_NAME
			FROM TOPERATOR C
			    LEFT JOIN TCustomers B ON B.SERVICE_MAN=C.OP_CODE AND (ISNULL(@P_CUST_TYPE,0)=0 OR @P_CUST_TYPE=B.CUST_TYPE)
			    LEFT JOIN #STAT_CUST_CONTRACT A ON A.CUST_ID=B.CUST_ID
			WHERE (@IN_SCOPE=0 --全部
					  OR @IN_SCOPE=1 AND B.SERVICE_MAN=@IN_INPUT_MAN --本人
					  OR @IN_SCOPE=2 AND EXISTS(SELECT * FROM @V_OPCODES WHERE OP_CODE=B.SERVICE_MAN)--本部门
					)
				AND (@V_FLAG_ACCESS_ALL=1 OR B.SERVICE_MAN=@IN_INPUT_MAN OR EXISTS (SELECT * FROM @V_TEMPCUST2 WHERE CUST_ID=A.CUST_ID)) --访问权限
			GROUP BY C.OP_CODE,C.OP_NAME
			RETURN
    END
    IF @P_ORDERBY IS NULL OR @P_ORDERBY = ''
        SELECT B.CUST_NO,B.CUST_NAME,A.RG_TIMES,A.RG_MONEY,A.CURRENT_MONEY,A.BEN_AMOUNT,A.PRODUCT_NAMES,B.CUST_TYPE,A.CUST_ID
			FROM #STAT_CUST_CONTRACT A LEFT JOIN TCustomers B ON A.CUST_ID=B.CUST_ID
			WHERE (ISNULL(@P_CUST_TYPE,0)=0 OR @P_CUST_TYPE=B.CUST_TYPE)
			    AND (@IN_SCOPE=0 --全部
					  OR @IN_SCOPE=1 AND B.SERVICE_MAN=@IN_INPUT_MAN --本人
					  OR @IN_SCOPE=2 AND EXISTS(SELECT * FROM @V_OPCODES WHERE OP_CODE=B.SERVICE_MAN)--本部门
					)
				AND (@V_FLAG_ACCESS_ALL=1 OR B.SERVICE_MAN=@IN_INPUT_MAN OR EXISTS (SELECT * FROM @V_TEMPCUST2 WHERE CUST_ID=A.CUST_ID)) --访问权限
			ORDER BY A.CUST_ID
    ELSE
    BEGIN
        SELECT B.CUST_NO,B.CUST_NAME,A.RG_TIMES,A.RG_MONEY,A.CURRENT_MONEY,A.BEN_AMOUNT,A.PRODUCT_NAMES,B.CUST_TYPE,A.CUST_ID
			INTO #STAT_CUST_CONTRACT2
			FROM #STAT_CUST_CONTRACT A LEFT JOIN TCustomers B ON A.CUST_ID=B.CUST_ID
			WHERE (ISNULL(@P_CUST_TYPE,0)=0 OR @P_CUST_TYPE=B.CUST_TYPE)
			    AND (@IN_SCOPE=0 --全部
					  OR @IN_SCOPE=1 AND B.SERVICE_MAN=@IN_INPUT_MAN --本人
					  OR @IN_SCOPE=2 AND EXISTS(SELECT * FROM @V_OPCODES WHERE OP_CODE=B.SERVICE_MAN)--本部门
					)
				AND (@V_FLAG_ACCESS_ALL=1 OR B.SERVICE_MAN=@IN_INPUT_MAN OR EXISTS (SELECT * FROM @V_TEMPCUST2 WHERE CUST_ID=A.CUST_ID)) --访问权限
        IF CHARINDEX( 'MONEY', @P_ORDERBY ) > 0 OR CHARINDEX( 'AMOUNT', @P_ORDERBY ) > 0
            SELECT @V_STR = ' DESC '
        EXECUTE( 'SELECT * FROM #STAT_CUST_CONTRACT2 ORDER BY ' + @P_ORDERBY + @V_STR )
    END
    RETURN @@ROWCOUNT
GO
