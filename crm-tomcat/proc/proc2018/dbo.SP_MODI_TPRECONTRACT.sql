USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_MODI_TPRECONTRACT @IN_SERIAL_NO     INT,
                                      @IN_PRE_MONEY     DECIMAL(16,3),          --预约金额
                                      @IN_LINK_MAN      INT,                    --销售人员（联系人）
                                      @IN_VALID_DAYS    INT,                    --预约有效天数
                                      @IN_PRE_TYPE      NVARCHAR(10),           --预约类型
                                      @IN_SUMMARY       NVARCHAR(200),
                                      @IN_PRE_NUM       INT,                    --预约份数
                                      @IN_INPUT_MAN     INT,
                                      @IN_PRE_DATE      INT,                    --预约日期
                                      @IN_EXP_REG_DATE  INT = NULL,             --预计认购日期
                                      @IN_CUST_SOURCE   NVARCHAR(10) = NULL,    --客户来源
                                      @IN_PRE_CODE      NVARCHAR(16) = NULL,    --预约编号
                                      @IN_PAY_MONEY     DEC(16,3) = NULL,       --到帐金额
                                      @IN_CHANNEL_TYPE  NVARCHAR(10) = NULL,    --渠道类别(5500)
                                      @IN_CHANNEL_FARE  DEC(16,3) = NULL,       --渠道费用
                                      @IN_PRE_LEVEL     NVARCHAR(10) = NULL    --预约类别(1182)用于区分预约的级别
WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_ERROR NVARCHAR(200)
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME VARCHAR(40),@SSUMMARY VARCHAR(200)
    SELECT @V_RET_CODE = -20702000
    SELECT @IBUSI_FLAG = 20702
    SELECT @SBUSI_NAME = '修改客户预约销售'
    SELECT @SSUMMARY = '修改客户预约销售'

    DECLARE @V_PRE_CODE VARCHAR(16),@V_PREPRODUCT_ID INT,@V_PREPRODUCT_NAME NVARCHAR(60),@V_PRE_MONEY DECIMAL(16,3)
    DECLARE @V_PRE_TYPE_NAME VARCHAR(30),@V_END_DATE INT,@V_CUST_SOURCE_NAME NVARCHAR(30), @V_PRE_LEVEL_NAME NVARCHAR(30)

    BEGIN TRY
    --1.业务逻辑与操作
    IF NOT EXISTS(SELECT * FROM TPRECONTRACT WHERE SERIAL_NO = @IN_SERIAL_NO)
    BEGIN
        SET @V_ERROR = N'记录不存在！'
        RAISERROR(@V_ERROR,16,3)
    END
    IF EXISTS(SELECT * FROM TPRECONTRACT WHERE SERIAL_NO = @IN_SERIAL_NO AND PRE_STATUS IN ('111303','111304') )
    BEGIN
        SET @V_ERROR = N'预约已过期或已作废！'
        RAISERROR(@V_ERROR,16,3)
    END

    IF @IN_PRE_CODE = '' SET @IN_PRE_CODE = NULL
    SELECT @V_PRE_MONEY = PRE_MONEY, @V_PREPRODUCT_ID = PREPRODUCT_ID, @V_PRE_CODE = PRE_CODE FROM TPRECONTRACT WHERE SERIAL_NO = @IN_SERIAL_NO
    SELECT @V_PREPRODUCT_NAME = PREPRODUCT_NAME FROM TPREPRODUCT WHERE PREPRODUCT_ID = @V_PREPRODUCT_ID
    IF @IN_PRE_DATE IS NULL OR @IN_PRE_DATE = 0
        SELECT @IN_PRE_DATE = CONVERT(INT,CONVERT(CHAR(8),GETDATE(),112))
    IF @IN_VALID_DAYS <= 0
        SELECT @V_END_DATE = 0
    ELSE
        SELECT @V_END_DATE = dbo.GETDAY(@IN_PRE_DATE,@IN_VALID_DAYS - 1)
    IF ISNULL(@IN_PRE_TYPE,'')='' SET @IN_PRE_TYPE='111203' --默认预约方式为"现场预约"
    SELECT @V_PRE_TYPE_NAME = TYPE_CONTENT FROM TDICTPARAM WHERE TYPE_VALUE = @IN_PRE_TYPE
    SELECT @V_CUST_SOURCE_NAME = TYPE_CONTENT FROM TDICTPARAM WHERE TYPE_VALUE = @IN_CUST_SOURCE
    IF NOT EXISTS(SELECT 1 FROM TDICTPARAM WHERE TYPE_VALUE = @IN_PRE_LEVEL)
    BEGIN
        SET @IN_PRE_LEVEL = N'118201'
        SET @V_PRE_LEVEL_NAME = N'A级'
    END
    ELSE
    BEGIN
        SELECT @V_PRE_LEVEL_NAME = TYPE_CONTENT FROM TDICTPARAM WHERE TYPE_VALUE = @IN_PRE_LEVEL
    END

    BEGIN TRANSACTION

    UPDATE TPRECONTRACT
        SET PRE_MONEY        = @IN_PRE_MONEY,
            LINK_MAN         = @IN_LINK_MAN,
            VALID_DAYS       = @IN_VALID_DAYS,
            PRE_DATE         = @IN_PRE_DATE,
            END_DATE         = @V_END_DATE,
            PRE_TYPE         = @IN_PRE_TYPE,
            PRE_TYPE_NAME    = @V_PRE_TYPE_NAME,
            SUMMARY          = @IN_SUMMARY,
            PRE_NUM          = @IN_PRE_NUM,
            INPUT_TIME       = GETDATE(),
            EXP_REG_DATE     = @IN_EXP_REG_DATE,
            CUST_SOURCE      = @IN_CUST_SOURCE,
            CUST_SOURCE_NAME = @V_CUST_SOURCE_NAME,
            PRE_CODE         = ISNULL(@IN_PRE_CODE,PRE_CODE),
            RG_MONEY         = @IN_PAY_MONEY,
            CHANNEL_TYPE     = @IN_CHANNEL_TYPE,
            CHANNEL_FARE     = @IN_CHANNEL_FARE,
            PRE_LEVEL        = @IN_PRE_LEVEL,
            PRE_LEVEL_NAME   = @V_PRE_LEVEL_NAME
        WHERE SERIAL_NO = @IN_SERIAL_NO

    UPDATE TPREPRODUCT
        SET PRE_FACT_MONEY = ISNULL(PRE_FACT_MONEY,0) + @IN_PRE_MONEY - @V_PRE_MONEY
        WHERE PREPRODUCT_ID = @V_PREPRODUCT_ID

    --修改销售人员预约配额完成情况
    DECLARE @V_TEAM_ID INT, @V_PRE_QUALIFIEDNUM INT, @V_OLD_QUALIFIEDNUM INT,@V_CUST_TYPE INT
	SELECT @V_CUST_TYPE = CUST_TYPE FROM TCUSTOMERS 
		WHERE CUST_ID = (SELECT CUST_ID FROM TPRECONTRACT WHERE SERIAL_NO = @IN_SERIAL_NO) 
    IF @V_CUST_TYPE = 1 AND @IN_PRE_MONEY < 3000000
        SET @V_PRE_QUALIFIEDNUM = 1
    ELSE
        SET @V_PRE_QUALIFIEDNUM = 0
    IF @V_CUST_TYPE = 1 AND @V_PRE_MONEY < 3000000
        SET @V_OLD_QUALIFIEDNUM = 1
    ELSE
        SET @V_OLD_QUALIFIEDNUM = 0
    SELECT @V_TEAM_ID = A.TEAM_ID
        FROM TManagerTeams A
        WHERE A.LEADER = @IN_LINK_MAN OR EXISTS(SELECT 1 FROM TManagerTeamMembers Z WHERE A.TEAM_ID = Z.TEAM_ID AND Z.MANAGERID = @IN_LINK_MAN)
    IF @V_TEAM_ID IS NULL SET @V_TEAM_ID = -1
    UPDATE TTEAMQUOTA
        SET PRE_SALEMONEY = ISNULL(PRE_SALEMONEY,0) + @IN_PRE_MONEY - @V_PRE_MONEY,
            PRE_QUALIFIEDNUM = ISNULL(PRE_QUALIFIEDNUM,0) + @V_PRE_QUALIFIEDNUM - @V_OLD_QUALIFIEDNUM
        WHERE TEAM_ID = @V_TEAM_ID AND PREPRODUCT_ID = @V_PREPRODUCT_ID

    --2.日志
    SELECT @SSUMMARY = '修改客户预约销售，产品名称：' + @V_PREPRODUCT_NAME + ',预约号：' + @V_PRE_CODE
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY) VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    COMMIT TRANSACTION
    END TRY
    --3.异常处理
    BEGIN CATCH
        IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)
        SELECT @V_ERROR_STR = N'Message:%s,Procedure:%s,Line:%d',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()
        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_PROCEDURE,@V_ERROR_LINE)
        RETURN -100
    END CATCH
    RETURN 100
GO
