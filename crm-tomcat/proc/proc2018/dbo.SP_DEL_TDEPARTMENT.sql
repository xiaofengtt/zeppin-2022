USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_DEL_TDEPARTMENT @IN_DEPART_ID INT,
                                    @IN_INPUT_MAN INT
WITH ENCRYPTION
AS
    DECLARE @V_RET_CODE INT,@V_PARENT_ID INT,@IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    SELECT @V_RET_CODE = -10103000
    SELECT @IBUSI_FLAG = 10103
    SELECT @SBUSI_NAME = N'删除部门信息'
    SELECT @SSUMMARY = N'删除部门信息'

    DECLARE @OUT_RET_CODE INT
    SELECT @OUT_RET_CODE = 100
    IF NOT EXISTS(SELECT * FROM TDEPARTMENT WHERE DEPART_ID = @IN_DEPART_ID)
    BEGIN
        SELECT @OUT_RET_CODE = @V_RET_CODE -1   -- 部门不存在
        RETURN @OUT_RET_CODE
    END
    SELECT @V_PARENT_ID = PARENT_ID FROM TDEPARTMENT WHERE DEPART_ID = @IN_DEPART_ID
    IF EXISTS(SELECT * FROM TDEPARTMENT WHERE PARENT_ID = @IN_DEPART_ID)
    BEGIN
        SELECT @OUT_RET_CODE = @V_RET_CODE -2   -- 请先删除子节点
        RETURN @OUT_RET_CODE
    END
    IF EXISTS(SELECT * FROM TOPERATOR WHERE DEPART_ID = @IN_DEPART_ID)
    BEGIN
        SELECT @OUT_RET_CODE = @V_RET_CODE -3   -- 部门已设置员工不能删除
        RETURN @OUT_RET_CODE
    END

    BEGIN TRANSACTION

    DELETE FROM TDEPARTMENT WHERE DEPART_ID = @IN_DEPART_ID
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END
    IF NOT EXISTS(SELECT * FROM TDEPARTMENT WHERE PARENT_ID = @V_PARENT_ID AND DEPART_ID <> @IN_DEPART_ID)
    BEGIN
       UPDATE TDEPARTMENT
       SET
         BOTTOM_FLAG = 1
       WHERE
         DEPART_ID = @V_PARENT_ID
        IF @@ERROR <> 0
        BEGIN
            ROLLBACK TRANSACTION
            RETURN -100
        END
    END

    SELECT @SSUMMARY = N'删除部门，部门编号：'+CONVERT(NVARCHAR(8),@IN_DEPART_ID)
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    IF @@ERROR <> 0
    BEGIN
        ROLLBACK TRANSACTION
        RETURN -100
    END

    COMMIT TRANSACTION
    RETURN 100
GO
