USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_QUERY_DIRECT_SELLING_STAT   @IN_BEGIN_DATE  INT,
                                                @IN_END_DATE    INT,
                                                @IN_INPUT_MAN   INT

WITH ENCRYPTION
AS
    
    DECLARE @TB_SELLING TABLE
    (
        SELLING_DATE		INT,
        ACCUMULATIVE_TOTAL  INT,
        SURVIVING_TOTAL		INT,
        LOSS_TOTAL			INT,
        REPEAT_TOTAL		INT 
    )

    SET @IN_BEGIN_DATE = @IN_BEGIN_DATE/100
    SET @IN_END_DATE = @IN_END_DATE/100

    
    
    WHILE @IN_BEGIN_DATE < @IN_END_DATE
        IF SUBSTRING(CONVERT(CHAR(6),@IN_BEGIN_DATE),5,3)=12
		BEGIN
            INSERT INTO @TB_SELLING(SELLING_DATE) VALUES((@IN_BEGIN_DATE/100+1)*100+1)
            SET @IN_BEGIN_DATE = (@IN_BEGIN_DATE/100+1)*100+1
		END
	ELSE         
        BEGIN
            INSERT INTO @TB_SELLING(SELLING_DATE) VALUES(@IN_BEGIN_DATE)
            SET @IN_BEGIN_DATE = @IN_BEGIN_DATE+1
        END
    
    DECLARE @VT_CUSTS TABLE(CUST_ID INT)
    CREATE TABLE #TMP_CUST_FIRSTBUY(CUST_ID INT, FIRST_RG_DATE INT) --客户首次购买时间
    
    BEGIN
        INSERT INTO @VT_CUSTS(CUST_ID) --只购买了单一产品的客户
            SELECT DISTINCT CUST_ID FROM INTRUST..TBENIFITOR A 
                WHERE EXISTS(SELECT 1 FROM INTRUST..TPRODUCT B WHERE A.PRODUCT_ID = B.PRODUCT_ID AND B.INTRUST_FLAG1 = 1)
                AND NOT EXISTS(SELECT 1 FROM INTRUST..TPRODUCT C WHERE A.PRODUCT_ID = C.PRODUCT_ID AND C.INTRUST_FLAG1 = 2)
    END            
    
    BEGIN --客户首次购买时间
        INSERT INTO #TMP_CUST_FIRSTBUY(CUST_ID) SELECT CUST_ID FROM EFCRM..TCustomers
        UPDATE #TMP_CUST_FIRSTBUY SET FIRST_RG_DATE = B.BEN_DATE
            FROM #TMP_CUST_FIRSTBUY A,(SELECT CUST_ID, MIN(BEN_DATE) AS BEN_DATE FROM INTRUST..TBENIFITOR GROUP BY CUST_ID) B
            WHERE A.CUST_ID = B.CUST_ID
    END

    --累计客户
    BEGIN
        UPDATE @TB_SELLING SET ACCUMULATIVE_TOTAL = ( SELECT COUNT(*) FROM TCUSTSOURCEINFO A 
             WHERE CHANNEL_TYPE LIKE '550001%'
            AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID)
            AND EXISTS(SELECT 1 FROM #TMP_CUST_FIRSTBUY H WHERE A.CUST_ID = H.CUST_ID AND H.FIRST_RG_DATE/100 <= G.SELLING_DATE)
            AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID))
        FROM @TB_SELLING G
    END
    
    --存续客户
    BEGIN
        UPDATE @TB_SELLING SET SURVIVING_TOTAL = (SELECT COUNT(*) FROM TCUSTSOURCEINFO A WHERE CHANNEL_TYPE LIKE '550001%'
            AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID 
            AND G.SELLING_DATE BETWEEN B.BEN_DATE/100 AND B.BEN_END_DATE/100)
            AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID))
        FROM @TB_SELLING G 
    END 
    
    
    ----流失客户
    UPDATE  @TB_SELLING SET LOSS_TOTAL = A.ACCUMULATIVE_TOTAL-A.SURVIVING_TOTAL
        FROM @TB_SELLING A
        
    --重复认购客户
    UPDATE  @TB_SELLING SET REPEAT_TOTAL =(SELECT COUNT(*) FROM TCUSTSOURCEINFO A WHERE CHANNEL_TYPE LIKE '550001%'
            AND EXISTS(SELECT * FROM INTRUST..TCONTRACT B WHERE B.CHECK_FLAG = 2 AND A.CUST_ID = B.CUST_ID AND B.CUST_ID IN
                        (SELECT CUST_ID FROM INTRUST..TCONTRACT GROUP BY CUST_ID HAVING COUNT(CUST_ID) > 1))
            AND EXISTS(SELECT 1 FROM #TMP_CUST_FIRSTBUY H WHERE A.CUST_ID = H.CUST_ID AND H.FIRST_RG_DATE/100 <= G.SELLING_DATE)
            AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID))
    FROM @TB_SELLING G    
    
    SELECT * FROM @TB_SELLING     
    
GO
