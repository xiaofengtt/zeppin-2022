USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
--drop PROCEDURE SP2_QUERY_TCustomers_Page
--SP2_QUERY_TCustomers_Page 0,'','','',0,0,'','',0,0,0,0,0,0,0,'',0,0,888
alter PROCEDURE SP2_QUERY_TCustomers_Page
						@IN_CUST_ID             INT,
                        @IN_CUST_NO             NVARCHAR(8),
                        @IN_CUST_NAME           NVARCHAR(100),
                        @IN_CARD_ID             NVARCHAR(20),
                        @IN_MIN_TIMES           INT,             --认购次数查询下限
                        @IN_MAX_TIMES           INT,             --认购次数查询上限
                        @IN_TEL                 NVARCHAR(20),    --客户电话，包括手机、办公电话或者家庭电话
                        @IN_ADDRESS             NVARCHAR(60),    --客户邮寄地址
                        @IN_CUST_TYPE           INT,             --客户类型:1个人2机构
                        @IN_MIN_TOTAL_MONEY     MONEY,           --认购金额下限
                        @IN_MAX_TOTAL_MONEY     MONEY,           --认购金额上限
                        @IN_SERVICEMAN          INTEGER,         --客户经理
                        @IN_RG_BEGIN_DATE       INT,             --认购日期下限
                        @IN_RG_END_DATE         INT,             --认购日期上限
                        @IN_SEX                 INT,             --客户性别:1男2女
                        @IN_IS_DEAL             INT,             --事实客户1是2否
                        @IN_CUST_SOURCE         NVARCHAR(20),    --客户来源
                        @IN_ORDERBY             NVARCHAR(100),   --结果集的排序字段名
                        @IN_PAGE_INDEX          INT,             --页码
                        @IN_PAGE_SIZE           INT,             --页宽
                        @IN_INPUT_MAN           INT              --操作员
                        
WITH ENCRYPTION
AS
    SET NOCOUNT ON 
    DECLARE @RET INT, @IN_NODE_SHARE INT,@V_QUERYCUSTOMERS INT, @V_CUSTQZ0001 INT, @V_CCUSTMODI INT,@V_FACT_POTE_FLAG INT,@V_IS_DEAL INT,@V_ENCRYPTION_SIZE INT
    DECLARE @V_FLAG_ACCESS_ALL INT,@V_FLAG_ENCRYPTION INT, @V_SQL NVARCHAR(2000), @IN_CARD_ID18 NVARCHAR(18),@V_CONDITION_SQL NVARCHAR(600)
    DECLARE @V_INTRUST_INPUT_MAN INT
print CONVERT(nvarchar,getdate(),114)+':开始'
	SELECT @V_QUERYCUSTOMERS = VALUE FROM TSYSCONTROL WHERE FLAG_TYPE = N'QUERYCUSTOMERS'
	IF @V_QUERYCUSTOMERS IS NULL SET @V_QUERYCUSTOMERS = 1
    SELECT @V_CUSTQZ0001 = VALUE FROM TSYSCONTROL WHERE FLAG_TYPE = N'CUSTQZ0001' --默认1
    SELECT @V_CUSTQZ0001 = ISNULL(@V_CUSTQZ0001,1)
    SELECT @V_CCUSTMODI = VALUE FROM TSYSCONTROL WHERE FLAG_TYPE = N'CCUSTMODI'
    SELECT @V_FACT_POTE_FLAG = VALUE FROM TSYSCONTROL WHERE  FLAG_TYPE = 'FACT_POTENTIAL_FLAG'--事实潜在客户加密条件
    SELECT @V_CCUSTMODI = ISNULL(@V_CCUSTMODI,2)

    IF @V_FACT_POTE_FLAG = 1  SET @V_IS_DEAL = 2 -- 潜在客户信息加密
    IF @V_FACT_POTE_FLAG = 2  SET @V_IS_DEAL = 1 -- 事实客户信息加密
    IF @V_FACT_POTE_FLAG = 3  SET @V_IS_DEAL = 0 -- 事实、潜在客户信息加密
    IF @V_FACT_POTE_FLAG = 4  SET @V_IS_DEAL = 3 -- 事实、潜在客户信息都不加密
	
	--加密显示位数	
	IF EXISTS(SELECT 1 FROM TDICTPARAM WHERE TYPE_VALUE = '800701')
		SELECT @V_ENCRYPTION_SIZE = CAST(TYPE_CONTENT AS INT) FROM TDICTPARAM WHERE TYPE_VALUE = '800701'
	ELSE
		SET  @V_ENCRYPTION_SIZE = 4

    IF EXISTS(SELECT * FROM TSYSCONTROL WHERE FLAG_TYPE = N'A_CARDID' AND VALUE = 1)
    BEGIN
        IF LEN(@IN_CARD_ID)=15   --15位身份证号码转18位
            SELECT @IN_CARD_ID18 = dbo.IDCARD15TO18(@IN_CARD_ID)
        ELSE IF LEN(@IN_CARD_ID)=18 --18位转成15位
            SELECT @IN_CARD_ID18 = dbo.IDCARD18TO15(@IN_CARD_ID)
    END
    DECLARE @V_TEMPCUST1 TABLE(CUST_ID INT) --根据输入条件能够访问的客户，根据查询条件 AND
    DECLARE @V_TEMPCUST2 TABLE(CUST_ID INT,AUTH_FLAG INT) --根据访问权限能够访问的客户，根据访问权限 OR
    --DECLARE @V_TEMPCUST_SCORE TABLE(CUST_ID INT)--获得客户得分数据表
    DECLARE @V_PRODUCT_IDS TABLE(PRODUCT_ID INT)
    
    SELECT @IN_CARD_ID18 = ISNULL(@IN_CARD_ID18, @IN_CARD_ID)
    SELECT @V_FLAG_ACCESS_ALL = 0 --访问全部标志
    SELECT @V_FLAG_ENCRYPTION = 0 --加密标志
    --客户经理级别树中，同节点客户经理是否共享客户
    IF EXISTS(SELECT 1 FROM TSYSCONTROL WHERE FLAG_TYPE = 'MANAGER002' AND VALUE = 1)
        SET @IN_NODE_SHARE = 0  --共享
    ELSE
        SET @IN_NODE_SHARE = 1  --不共享
    --能够访问所有客户信息
    IF EXISTS(SELECT 1 FROM TOPRIGHT WHERE OP_CODE = @IN_INPUT_MAN AND MENU_ID = N'999' AND FUNC_ID = 99903)
        SELECT @V_FLAG_ACCESS_ALL = 1
    --如果操作员的角色中存在访问所有客户信息权限的标志 则赋予能够访问所有客户信息权限
    IF EXISTS(SELECT 1 FROM TOPROLE WHERE OP_CODE = @IN_INPUT_MAN AND ROLE_ID IN(SELECT ROLE_ID FROM TROLE WHERE FLAG_ACCESS_ALL = 1))
        SELECT @V_FLAG_ACCESS_ALL = 1

    --如果操作员的角色中存在不保密限制的角色，则不进行保密限制，否则加密
    IF EXISTS(SELECT 1 FROM TOPROLE WHERE OP_CODE = @IN_INPUT_MAN AND ROLE_ID IN(SELECT ROLE_ID FROM TROLE WHERE FLAG_ENCRYPTION = 0))
        SELECT @V_FLAG_ENCRYPTION = 2--不加密
    ELSE
		SELECT @V_FLAG_ENCRYPTION = 1--加密
    

    CREATE TABLE #TEMPCUST(
       CUST_ID                 INT,                 --客户ID
       CUST_NO                 NVARCHAR (8),        --客户编号
       CUST_NAME               NVARCHAR (100),      --客户名称
       SEX                     NVARCHAR(10),        --性别
       BIRTHDAY                INT,                 --生日
       POST_ADDRESS            NVARCHAR(90),        --联系地址
       POST_CODE               NVARCHAR(6),         --邮政编码
       CARD_ID                 NVARCHAR (40),       --证件ID
       CUST_TEL                NVARCHAR (40),       --联系电话
       E_MAIL                  NVARCHAR (60),       --E-MAIL
       O_TEL                   NVARCHAR (40),       --公司电话
       MOBILE                  NVARCHAR (100) ,     --手机
       BP                      NVARCHAR (60) ,      --BP
       STATUS_NAME             NVARCHAR (30),       --客户状态说明
       LAST_RG_DATE            INT,                 --最近一次购买时间
       CURR_TO_AMOUNT          DECIMAL(16,3),       --
       TOTAL_MONEY             DECIMAL(16, 3),     --已购买金额
       CURRENT_MONEY           DECIMAL(16, 3),     --存量金额
       BEN_AMOUNT              DECIMAL(16, 3),     --受益份额
       EXCHANGE_AMOUNT         DECIMAL(16, 3),     --转让份额
       EXCHANGE_AMOUNT_IN      DECIMAL(16, 3),     --受让份额
       BACK_AMOUNT             DECIMAL(16, 3),     --到期结算份额
       SERVICE_MAN             INT,                 --客户经理
       CUST_TYPE               INT,
       MODI_FLAG               INT,                 --1允许修改 2不允许修改
       GRADE_LEVEL             NVARCHAR(10),        --客户风险等级
       GRADE_LEVEL_NAME        NVARCHAR(30),        --客户风险等级说明
       CARD_TYPE_NAME          NVARCHAR(30),        --证件类型
       IS_DEAL                 INT DEFAULT 2,
       IS_DEAL_NAME            NVARCHAR(30),
       CUST_SOURCE             NVARCHAR(20),
       CUST_SOURCE_NAME        NVARCHAR(60),
       COUNTRY                 NVARCHAR(20),
       COUNTRY_NAME            NVARCHAR(60),
       MONEY_SOURCE            NVARCHAR(300),
       MONEY_SOURCE_NAME       NVARCHAR(1000),
       FIRST_RG_DATE           INT,
       END_AMOUNT              DECIMAL(16,3),------当前份额（受益份额-到期结算份额）
       PRINT_DEPLOY_BILL       INT DEFAULT 0,
       PRINT_POST_INFO         INT DEFAULT 0,
       CUST_LEVEL              NVARCHAR(10),
	   CUST_SOURCE_EXPLAIN	   NVARCHAR(60),
	   INPUT_TIME			   INTEGER,
	   TOTAL_MONEY_ALL    	   DECIMAL(16, 3),
	   TOTAL_COUNT             INT,
	   VIP_CARD_ID             NVARCHAR(40),
	   HGTZR_BH                NVARCHAR(40)
    )
    --------------------------------------------------------------------
    DECLARE @V_MANAGER_IDS TABLE(MANAGERID INT, MANAGERNAME NVARCHAR(60))
    --处理客户经理同级共享(共享给当前操作员的源客户经理)，共享时，同节点及下级节点的客户经理所辖客户，由于也具有访问权限，故一起共享了。故对经理树的处理放在下面
    INSERT INTO @V_MANAGER_IDS(MANAGERID)
        SELECT SourceManagerID FROM TAuthorizationShare WHERE ShareType = 1 AND Status = 1 AND ManagerID = @IN_INPUT_MAN
    --从客户经理树取当前操作员所辖客户经理,再取这些客户经理的客户
    IF NOT EXISTS (SELECT * FROM TSYSCONTROL WHERE FLAG_TYPE='TEAMLEADER_ROLERIGHT' AND VALUE=1)
    BEGIN
    INSERT INTO @V_MANAGER_IDS
        --1.根据节点主经理来判断当前操作员
        --所辖节点的主客户经理
        SELECT A.MANAGERID,A.MANAGERNAME FROM TCustManagerTree A, TCustManagerTree B
        WHERE (A.LEFT_ID BETWEEN B.LEFT_ID+@IN_NODE_SHARE AND B.RIGHT_ID) AND A.MANAGERID <> 0 AND A.MANAGERID IS NOT NULL
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --所辖节点的成员客户经理
        UNION ALL
        SELECT C.MANAGERID,C.MANAGERNAME FROM TCustManagerTree A, TCustManagerTree B, TCustManagerTreeMembers C
        WHERE (A.LEFT_ID BETWEEN B.LEFT_ID+@IN_NODE_SHARE AND B.RIGHT_ID) AND A.SERIAL_NO = C.TREE_ID
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --2.根据节点成员经理来判断当前操作员
        --所辖节点的主客户经理
        UNION ALL
        SELECT D.MANAGERID,D.MANAGERNAME FROM TCustManagerTreeMembers B, TCustManagerTree C, TCustManagerTree D
        WHERE B.TREE_ID = C.SERIAL_NO AND (D.LEFT_ID BETWEEN C.LEFT_ID+@IN_NODE_SHARE AND C.RIGHT_ID)
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
        --所辖节点的成员客户经理
        UNION ALL
        SELECT A.MANAGERID,A.MANAGERNAME FROM TCustManagerTreeMembers B, TCustManagerTree C, TCustManagerTree D, TCustManagerTreeMembers A
        WHERE B.TREE_ID = C.SERIAL_NO AND (D.LEFT_ID BETWEEN C.LEFT_ID+@IN_NODE_SHARE AND C.RIGHT_ID) AND A.TREE_ID = D.SERIAL_NO
            AND (B.MANAGERID = @IN_INPUT_MAN OR EXISTS(SELECT 1 FROM @V_MANAGER_IDS Z WHERE B.MANAGERID = Z.MANAGERID) )
    END
    --处理授权给下级的(当前操作员的)客户授权集，注：被授权的客户没有级联共享给同级别经理
    INSERT INTO @V_TEMPCUST2(CUST_ID,AUTH_FLAG)
        SELECT DISTINCT A.CUST_ID,A.AUTH_FLAG FROM TAuthorizationCusts A, TAuthorizationShare B
        WHERE A.CA_ID = B.CA_ID AND B.ShareType = 2 AND B.Status = 1 AND B.ManagerID = @IN_INPUT_MAN
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
    --处理快捷授权的客户ShareType=3，仅查询
    INSERT INTO @V_TEMPCUST2(CUST_ID,AUTH_FLAG)
        SELECT CUST_ID,0 FROM TAuthorizationShare A WHERE ShareType = 3 AND Status = 1 AND CUST_ID <> 0 AND (GETDATE() BETWEEN ISNULL(A.START_TIME,GETDATE()) AND ISNULL(A.INVALID_TIME,GETDATE()+36000)) AND ManagerID = @IN_INPUT_MAN
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
        UNION ALL
        SELECT B.CUST_ID,0 FROM TAuthorizationShare A, TCustomers B
        WHERE A.SourceManagerID = B.SERVICE_MAN AND A.ShareType = 3 AND A.Status = 1 AND A.CUST_ID = 0 AND (GETDATE() BETWEEN ISNULL(A.START_TIME,GETDATE()) AND ISNULL(A.INVALID_TIME,GETDATE()+36000)) AND A.ManagerID = @IN_INPUT_MAN
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
    --以上客户经理的客户
    INSERT INTO @V_TEMPCUST2(CUST_ID)
        SELECT DISTINCT CUST_ID FROM TCustomers A
        WHERE (EXISTS( SELECT 1 FROM @V_MANAGER_IDS B WHERE A.SERVICE_MAN = B.MANAGERID)
                OR EXISTS( SELECT 1 FROM @V_MANAGER_IDS C WHERE (@V_QUERYCUSTOMERS = 1 AND A.INPUT_MAN = C.MANAGERID) ) )
            AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE A.CUST_ID = C.CUST_ID)
            AND(A.SERVICE_MAN = @IN_SERVICEMAN OR ISNULL(@IN_SERVICEMAN,0) = 0)
    --团队领导的团队成员
    IF NOT EXISTS (SELECT * FROM TSYSCONTROL WHERE FLAG_TYPE='TEAMLEADER_ROLERIGHT' AND VALUE=1)
    BEGIN
    INSERT INTO @V_TEMPCUST2(CUST_ID)
		SELECT CUST_ID FROM TCustomers T WHERE EXISTS (
			SELECT MANAGERID FROM TManagerTeamMembers A WHERE EXISTS (SELECT TEAM_ID FROM TManagerTeams B WHERE A.TEAM_ID=B.TEAM_ID AND LEADER=@IN_INPUT_MAN)
				AND T.SERVICE_MAN=A.MANAGERID)
			AND NOT EXISTS(SELECT 1 FROM @V_TEMPCUST2 C WHERE T.CUST_ID = C.CUST_ID)
    END
    --按"产品客户经理"控制访问权限
    IF EXISTS(SELECT 1 FROM TSYSCONTROL WHERE FLAG_TYPE = 'PRODUCT001' AND VALUE = 1)
    BEGIN
        SELECT @V_INTRUST_INPUT_MAN=INTRUST_Operator FROM TOPERATOR_MAP WHERE CRM_Operator=@IN_INPUT_MAN AND INTRUST_BOOKCODE=1
        SET @V_INTRUST_INPUT_MAN=ISNULL(@V_INTRUST_INPUT_MAN,@IN_INPUT_MAN)
        INSERT INTO @V_TEMPCUST2(CUST_ID)
            SELECT DISTINCT A.CUST_ID FROM INTRUST..TBENIFITOR A, INTRUST..TPRODUCT B
				WHERE A.PRODUCT_ID = B.PRODUCT_ID
				AND B.SERVICE_MAN = @V_INTRUST_INPUT_MAN
    END
    --------------------------------------------------------------------

    --增加对[认购份额、受益份额分级访问权限]的处理
    --认购份额、受益份额 按产品+客户计算汇总
    DECLARE @V_CUSTLEVELAUTH TABLE(
        PRODUCT_ID      INT,
        LEVEL_ID        INT,
        LEVEL_VALUE_ID  INT,
        MIN_VALUE       DEC(16,3),
        MAX_VALUE       DEC(16,3),
        LEVEL_TYPE      INT,        --条件类型：1任意一笔记录在范围内；2所有此类记录在范围内
        SUM_TYPE        INT         --金额汇总类型：1按客户+产品+合同；2按客户+产品；3按客户；为3时PRODUCT_ID值无效
    )
   
    --增加对[认购份额、受益份额分级访问权限]的处理
    ----------------------------------------
    --如果不控制潜在客户的查询，将所有潜在客户添加到 @V_TEMPCUST2 中
    IF @V_CUSTQZ0001 <> 1
        INSERT INTO @V_TEMPCUST2(CUST_ID) SELECT CUST_ID FROM TCustomers WHERE IS_DEAL = 2
print CONVERT(nvarchar,getdate(),114)+':访问权限--END'
    --------------------------------------------------------------------
    IF ISNULL(@IN_CUST_ID,0)<>0
        INSERT INTO #TEMPCUST(CUST_ID,CUST_NO,CUST_NAME,SEX,BIRTHDAY,POST_ADDRESS,POST_CODE,CARD_ID,CUST_TEL,E_MAIL,O_TEL,MOBILE,BP,
                STATUS_NAME,LAST_RG_DATE,CURR_TO_AMOUNT,TOTAL_MONEY,CURRENT_MONEY,BEN_AMOUNT,EXCHANGE_AMOUNT,BACK_AMOUNT,SERVICE_MAN,
                CUST_TYPE,GRADE_LEVEL,GRADE_LEVEL_NAME,CARD_TYPE_NAME,IS_DEAL,IS_DEAL_NAME,CUST_SOURCE,CUST_SOURCE_NAME,
                COUNTRY,COUNTRY_NAME,MONEY_SOURCE,MONEY_SOURCE_NAME,FIRST_RG_DATE,END_AMOUNT,PRINT_DEPLOY_BILL,PRINT_POST_INFO,
				CUST_SOURCE_EXPLAIN,INPUT_TIME,EXCHANGE_AMOUNT_IN,VIP_CARD_ID,HGTZR_BH)
            SELECT CUST_ID,CUST_NO,CUST_NAME,CASE SEX WHEN 1 THEN N'男' WHEN 2 THEN '女' ELSE N'' END AS SEX,BIRTHDAY,POST_ADDRESS,POST_CODE,
                   CARD_ID,CUST_TEL,E_MAIL,O_TEL,MOBILE,BP,STATUS_NAME,LAST_RG_DATE, 0,TOTAL_MONEY,CURRENT_MONEY,0,0,0,
                   SERVICE_MAN,CUST_TYPE,GRADE_LEVEL,GRADE_LEVEL_NAME,CARD_TYPE_NAME,IS_DEAL,
                   CASE IS_DEAL WHEN 1 THEN N'事实客户' WHEN 2 THEN N'潜在客户' END AS IS_DEAL_NAME,
                   CUST_SOURCE,CUST_SOURCE_NAME,COUNTRY,N'',MONEY_SOURCE,MONEY_SOURCE_NAME,NULL,0,PRINT_DEPLOY_BILL,PRINT_POST_INFO,
				   CUST_SOURCE_EXPLAIN,DBO.GETDATEINT(INPUT_TIME),0,VIP_CARD_ID,HGTZR_BH
                FROM TCustomers WHERE CUST_ID = @IN_CUST_ID
	ELSE
    BEGIN
        INSERT INTO #TEMPCUST(CUST_ID,CUST_NO,CUST_NAME,SEX,BIRTHDAY,POST_ADDRESS,POST_CODE,CARD_ID,CUST_TEL,E_MAIL,O_TEL,MOBILE,BP,
                STATUS_NAME,LAST_RG_DATE,CURR_TO_AMOUNT,TOTAL_MONEY,CURRENT_MONEY,BEN_AMOUNT,EXCHANGE_AMOUNT,BACK_AMOUNT,SERVICE_MAN,
                CUST_TYPE,GRADE_LEVEL,GRADE_LEVEL_NAME,CARD_TYPE_NAME,IS_DEAL,IS_DEAL_NAME,CUST_SOURCE,CUST_SOURCE_NAME,
                COUNTRY,COUNTRY_NAME,MONEY_SOURCE,MONEY_SOURCE_NAME,FIRST_RG_DATE,END_AMOUNT,PRINT_DEPLOY_BILL,PRINT_POST_INFO,
				CUST_SOURCE_EXPLAIN,INPUT_TIME,EXCHANGE_AMOUNT_IN,VIP_CARD_ID)
            SELECT A.CUST_ID,CUST_NO,CUST_NAME,CASE SEX WHEN 1 THEN N'男' WHEN 2 THEN '女' ELSE N'' END AS SEX,BIRTHDAY,POST_ADDRESS,POST_CODE,
                   CARD_ID,CUST_TEL,E_MAIL,O_TEL,MOBILE,BP,STATUS_NAME,LAST_RG_DATE, 0,TOTAL_MONEY,CURRENT_MONEY,0,0,0,
                   SERVICE_MAN,CUST_TYPE,GRADE_LEVEL,GRADE_LEVEL_NAME,CARD_TYPE_NAME,IS_DEAL,
                   CASE IS_DEAL WHEN 1 THEN N'事实客户' WHEN 2 THEN N'潜在客户' END AS IS_DEAL_NAME,
                   A.CUST_SOURCE,A.CUST_SOURCE_NAME,A.COUNTRY,N'',A.MONEY_SOURCE,A.MONEY_SOURCE_NAME,NULL,0,A.PRINT_DEPLOY_BILL,A.PRINT_POST_INFO,
				   CUST_SOURCE_EXPLAIN,DBO.GETDATEINT(INPUT_TIME),0,VIP_CARD_ID
                FROM TCustomers A
                WHERE (ISNULL(@IN_CUST_ID,0) = 0 OR A.CUST_ID = @IN_CUST_ID)
                    AND (ISNULL(@IN_CUST_NO,'') = N'' OR CUST_NO LIKE '%'+@IN_CUST_NO OR CUST_NO LIKE @IN_CUST_NO+'_______')
                    AND (ISNULL(@IN_CUST_NAME,'') = N'' OR CUST_NAME LIKE '%'+@IN_CUST_NAME+'%')
                    AND (ISNULL(@IN_CARD_ID,'') = N'' OR CARD_ID LIKE @IN_CARD_ID+'%' OR CARD_ID LIKE '%'+@IN_CARD_ID18+'%')
                    AND (ISNULL(@IN_MAX_TIMES,0) = 0 OR (RG_TIMES BETWEEN @IN_MIN_TIMES AND @IN_MAX_TIMES) )
                    --操作员=客户资料录入人 或 有访问客户资料权限
                    AND ( ( @V_QUERYCUSTOMERS = 1 AND A.INPUT_MAN = @IN_INPUT_MAN) OR SERVICE_MAN = @IN_INPUT_MAN OR @V_FLAG_ACCESS_ALL = 1
                         OR EXISTS(SELECT 1 FROM @V_TEMPCUST2 B WHERE A.CUST_ID = B.CUST_ID) )
                    AND (ISNULL(CUST_TEL,'') + ',' + ISNULL(O_TEL,'') + ',' + ISNULL(H_TEL,'') + ',' + ISNULL(MOBILE,'') + ',' + ISNULL(BP,'') + ',' + ISNULL(FAX,'') LIKE '%'+@IN_TEL+'%' OR @IN_TEL = N'' OR @IN_TEL IS NULL )
                    AND (POST_ADDRESS LIKE '%'+@IN_ADDRESS+'%' OR @IN_ADDRESS = N'' OR @IN_ADDRESS IS NULL )
                    AND (ISNULL(@IN_CUST_TYPE,0) = 0 OR CUST_TYPE = @IN_CUST_TYPE)
                    --AND ((ISNULL(@IN_MIN_TOTAL_MONEY,0) =0 OR TOTAL_MONEY >= @IN_MIN_TOTAL_MONEY) AND (ISNULL(@IN_MAX_TOTAL_MONEY,0) =0 OR TOTAL_MONEY <= @IN_MAX_TOTAL_MONEY))--目前CRM的客户表TOTAL_MONEY字段数据不准确，注释了
                    --AND (ISNULL(BIRTHDAY,0)%10000 BETWEEN ISNULL(@IN_BIRTHDAY,0)%10000 AND ISNULL(@IN_BIRTHDAY_END,20101231)%10000)
                    AND STATUS <> '112805'
                    AND(A.SERVICE_MAN = @IN_SERVICEMAN OR ISNULL(@IN_SERVICEMAN,0) = 0)
                    --AND (ISNULL(@IN_MOBILE,'') = N'' OR A.MOBILE LIKE '%'+@IN_MOBILE+'%' OR A.O_TEL LIKE '%'+@IN_MOBILE+'%' OR A.H_TEL LIKE '%'+@IN_MOBILE+'%') 
					--AND (ISNULL(@IN_POST_ADDRESS,'') = N'' OR A.POST_ADDRESS LIKE '%'+@IN_POST_ADDRESS+'%')
					AND (ISNULL(@IN_SEX,0)=0 OR (A.CUST_TYPE=1 AND A.SEX=@IN_SEX)) --个人性别
					AND (ISNULL(@IN_IS_DEAL,0)=0 OR A.IS_DEAL=@IN_IS_DEAL)
					AND (ISNULL(@IN_CUST_SOURCE,'')='' OR A.CUST_SOURCE=@IN_CUST_SOURCE)
    END
print CONVERT(nvarchar,getdate(),114)+':初始客户--END'
    --受让金额
    CREATE TABLE #TEMPCUST3(CUST_ID INT,TO_AMOUNT DECIMAL(16,3))
    INSERT INTO #TEMPCUST3
        SELECT TO_CUST_ID,SUM(TO_AMOUNT) FROM INTRUST.dbo.TBENCHANGES
            WHERE (PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCT_IDS) OR NOT EXISTS(SELECT 1 FROM @V_PRODUCT_IDS) )
                AND CHECK_FLAG = 2 AND TRANS_TYPE NOT IN('181511','181512','181513','181514')
            GROUP BY TO_CUST_ID

    UPDATE #TEMPCUST
        SET EXCHANGE_AMOUNT_IN = B.TO_AMOUNT
        FROM #TEMPCUST A, #TEMPCUST3 B
        WHERE A.CUST_ID = B.CUST_ID
    --转让金额
    DELETE FROM #TEMPCUST3
    INSERT INTO #TEMPCUST3
    SELECT FROM_CUST_ID,SUM(TO_AMOUNT) FROM INTRUST.dbo.TBENCHANGES
        WHERE (PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCT_IDS) OR NOT EXISTS(SELECT 1 FROM @V_PRODUCT_IDS) )
            AND CHECK_FLAG = 2 AND TRANS_TYPE NOT IN('181511','181512','181513','181514')
        GROUP BY FROM_CUST_ID
print CONVERT(nvarchar,getdate(),114)+':统计转让客户--END'
    UPDATE #TEMPCUST
        SET EXCHANGE_AMOUNT = B.TO_AMOUNT
        FROM #TEMPCUST A, #TEMPCUST3 B
        WHERE A.CUST_ID = B.CUST_ID
    --到期本金
    DELETE FROM #TEMPCUST3
    INSERT INTO #TEMPCUST3
    SELECT CUST_ID,SUM(SY_AMOUNT)
        FROM INTRUST.dbo.TDEPLOY
        WHERE SY_TYPE = N'111605' AND PZ_FLAG = 2
			AND (PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCT_IDS) OR NOT EXISTS(SELECT 1 FROM @V_PRODUCT_IDS) )
		GROUP BY CUST_ID

    UPDATE #TEMPCUST
        SET BACK_AMOUNT = B.TO_AMOUNT
        FROM #TEMPCUST A, #TEMPCUST3 B
        WHERE A.CUST_ID = B.CUST_ID
    CREATE TABLE #TEMPCUST4(CUST_ID    INT,
                            BEN_AMOUNT DECIMAL(16,3),
                            TO_AMOUNT  DECIMAL(16,3),
                            MAX_DATE   INT,
                            PRODUCT_ID INT
                            )
    --从受益人表中统计客户的累计认购金额
    INSERT INTO #TEMPCUST4
    SELECT CUST_ID,SUM(ISNULL(BEN_AMOUNT,0)),SUM(ISNULL(TO_AMOUNT,0)),MAX(BEN_DATE),MAX(PRODUCT_ID)
        FROM INTRUST.dbo.TBENIFITOR
        WHERE (PRODUCT_ID IN (SELECT PRODUCT_ID FROM @V_PRODUCT_IDS) OR NOT EXISTS(SELECT 1 FROM @V_PRODUCT_IDS) )
		GROUP BY CUST_ID

    UPDATE #TEMPCUST
        SET BEN_AMOUNT = B.BEN_AMOUNT, --当前受益金额合计
            TOTAL_MONEY = B.TO_AMOUNT, --累计认购金额
            LAST_RG_DATE = B.MAX_DATE  --最近认购日期
        FROM #TEMPCUST A, #TEMPCUST4 B
        WHERE A.CUST_ID = B.CUST_ID
    --删除记录：不合条件的：累计认购金额不在输入区间的
    DELETE FROM #TEMPCUST WHERE (ISNULL(@IN_MIN_TOTAL_MONEY,0)>0 AND TOTAL_MONEY<@IN_MIN_TOTAL_MONEY) OR (ISNULL(@IN_MAX_TOTAL_MONEY,0)>0 AND TOTAL_MONEY>@IN_MAX_TOTAL_MONEY)
    
    --EFCRM.TCustomers.TOTAL_MONEY/CURRENT_MONEY 的值未根据业务发生而变化，需要根据 INTRUST.TCUSTOMERINFO.TOTAL_MONEY/CURRENT_MONEY 修正
    UPDATE #TEMPCUST
        SET TOTAL_MONEY = B.TOTAL_MONEY, CURRENT_MONEY = B.CURRENT_MONEY, CUST_LEVEL = B.CUST_LEVEL
        FROM #TEMPCUST A, INTRUST..TCUSTOMERINFO B
        WHERE A.CUST_ID = B.CUST_ID
    --增加当前份额（不含到期的 2011-10-09）
    UPDATE #TEMPCUST SET END_AMOUNT = TOTAL_MONEY-BEN_AMOUNT

    -- 修改资金来源名称 国别名称
    UPDATE #TEMPCUST SET COUNTRY_NAME = (SELECT B.TYPE_CONTENT FROM TDICTPARAM B WHERE B.TYPE_VALUE = COUNTRY)
print CONVERT(nvarchar,getdate(),114)+':统计客户--END'
    -------------------------------------------------------------------------------------
    --对客户只读or编辑权限的判断
    --根据客户授权集的授权标志取只读or编辑
    UPDATE #TEMPCUST SET MODI_FLAG = B.AUTH_FLAG
        FROM #TEMPCUST A, @V_TEMPCUST2 B
        WHERE A.CUST_ID = B.CUST_ID
    --仅客户经理和录入人允许修改
    UPDATE #TEMPCUST SET MODI_FLAG = 1
        FROM #TEMPCUST A, TCustomers B
        WHERE A.CUST_ID = B.CUST_ID AND (@V_CCUSTMODI <> 1 OR ((B.SERVICE_MAN = @IN_INPUT_MAN OR B.INPUT_MAN = @IN_INPUT_MAN) AND @V_CCUSTMODI = 1))
            AND A.MODI_FLAG IS NULL
    --除以上条件外，默认为只读
    UPDATE #TEMPCUST SET MODI_FLAG = 2 WHERE MODI_FLAG IS NULL
    -------------------------------------------------------------------------------------
	--统计客户累计购买金额及购买次数:从资金到账表中统计，同一产品，只算一次认购
	SELECT A.CUST_ID,SUM(A.TO_MONEY) TOTAL_MONEY_ALL,COUNT(A.CUST_ID) TOTAL_COUNT 
		INTO #TEMPCUST_TOTAL_TMP
		FROM INTRUST..TMONEYDETAIL A
		WHERE A.IS_JK_DATA=1 --1为缴款记录，其他为利息等非缴款记录
			AND CHECK_FLAG=2 --财务已审核
		GROUP BY A.CUST_ID,A.PRODUCT_ID,A.SUB_PRODUCT_ID
	SELECT CUST_ID,SUM(TOTAL_MONEY_ALL) TOTAL_MONEY_ALL,COUNT(CUST_ID) TOTAL_COUNT
		INTO #TEMPCUST_TOTAL
		FROM #TEMPCUST_TOTAL_TMP
		GROUP BY CUST_ID
							
	UPDATE #TEMPCUST SET 
		TOTAL_MONEY_ALL = ISNULL((SELECT ISNULL(A.TOTAL_MONEY_ALL,0) FROM #TEMPCUST_TOTAL A WHERE A.CUST_ID = #TEMPCUST.CUST_ID),0) + ISNULL(TOTAL_MONEY_ALL,0),
		TOTAL_COUNT = ISNULL((SELECT ISNULL(A.TOTAL_COUNT,0) FROM #TEMPCUST_TOTAL A WHERE A.CUST_ID = #TEMPCUST.CUST_ID),0) + ISNULL(TOTAL_COUNT,0)
	--加入合同未录入系统的历史数据(只有在没有合同的时候，才加此历史数据)
	UPDATE #TEMPCUST SET 
		TOTAL_MONEY_ALL = ISNULL(TOTAL_MONEY_ALL,0) + ISNULL((SELECT TRADE_MONEY FROM TCUSTINFOADD WHERE CUST_ID=#TEMPCUST.CUST_ID),0),
		TOTAL_COUNT = ISNULL(TOTAL_COUNT,0) + ISNULL((SELECT TRADE_TIMES FROM TCUSTINFOADD WHERE CUST_ID = #TEMPCUST.CUST_ID),0)
		WHERE ISNULL(TOTAL_MONEY_ALL,0)=0
	
    --开关控制 加密重要联系信息
	-- 客户名称和认购项目的金额) 因此以开关来单独进行加密控制
    IF(@V_FLAG_ENCRYPTION = 1)
    BEGIN
		--客户加密
		BEGIN
			UPDATE #TEMPCUST
			SET CARD_ID = ISNULL(stuff(A.CARD_ID,len(A.CARD_ID)-@V_ENCRYPTION_SIZE+1,len(A.CARD_ID),'******'),'****'),
				CUST_TEL = ISNULL(stuff(A.CUST_TEL,len(A.CUST_TEL)-@V_ENCRYPTION_SIZE+1,len(A.CUST_TEL),'******'),'****'),
				--H_TEL = ISNULL(stuff(H_TEL,len(H_TEL)-@V_ENCRYPTION_SIZE+1,len(H_TEL),'******'),'****'),
				O_TEL = ISNULL(stuff(A.O_TEL,len(A.O_TEL)-@V_ENCRYPTION_SIZE+1,len(A.O_TEL),'******'),'****'),
				E_MAIL = ISNULL(stuff(A.E_MAIL,1,charindex('@',A.E_MAIL)-1,'******'),''),
				MOBILE = ISNULL(stuff(A.MOBILE,len(A.MOBILE)-@V_ENCRYPTION_SIZE+1,len(A.MOBILE),'******'),'****'),
				BP = ISNULL(stuff(A.BP,len(A.BP)-@V_ENCRYPTION_SIZE+1,len(A.BP),'******'),'****'),
				POST_ADDRESS = ISNULL(stuff(A.POST_ADDRESS,len(A.POST_ADDRESS)-@V_ENCRYPTION_SIZE+1,len(A.POST_ADDRESS),'******'),'****')
			FROM #TEMPCUST A
			WHERE ((A.SERVICE_MAN <> @IN_INPUT_MAN ) OR MODI_FLAG <> 1 )  --仅只读的记录才加密数据
				AND (NOT EXISTS(SELECT CUST_ID FROM @V_TEMPCUST2 B WHERE A.CUST_ID = B.CUST_ID))--不存在客户授权的
		END
    END
    --添加客户首次认购、末次认购日期及过滤(改为以到账日期为统计依据)
    UPDATE #TEMPCUST
        SET FIRST_RG_DATE = B.FIRST_RG_DATE,LAST_RG_DATE = B.LAST_RG_DATE
        FROM #TEMPCUST A, (SELECT CUST_ID, MIN(DZ_DATE) AS FIRST_RG_DATE, MAX(DZ_DATE) AS LAST_RG_DATE FROM INTRUST..TMONEYDETAIL GROUP BY CUST_ID) B
        WHERE A.CUST_ID = B.CUST_ID
    /*SELECT A.CUST_ID               
		   ,A.CUST_NO               
		   ,A.CUST_NAME             
		   ,A.SEX                   
		   ,A.BIRTHDAY              
		   ,A.POST_ADDRESS          
		   ,A.POST_CODE             
		   ,A.CARD_ID               
		   ,A.CUST_TEL              
		   ,A.E_MAIL                
		   ,A.O_TEL                 
		   ,A.MOBILE                
		   ,A.BP                    
		   ,A.STATUS_NAME           
		   ,A.LAST_RG_DATE          
		   ,A.CURR_TO_AMOUNT        
		   ,A.TOTAL_MONEY           
		   ,A.CURRENT_MONEY         
		   ,A.BEN_AMOUNT            
		   ,A.EXCHANGE_AMOUNT       
		   ,A.EXCHANGE_AMOUNT_IN    
		   ,A.BACK_AMOUNT           
		   ,A.SERVICE_MAN           
		   ,A.CUST_TYPE             
		   ,A.MODI_FLAG             
		   ,A.GRADE_LEVEL           
		   ,A.GRADE_LEVEL_NAME      
		   ,A.CARD_TYPE_NAME        
		   ,A.IS_DEAL               
		   ,A.IS_DEAL_NAME          
		   ,A.CUST_SOURCE           
		   ,A.CUST_SOURCE_NAME      
		   ,A.COUNTRY               
		   ,A.COUNTRY_NAME          
		   ,A.MONEY_SOURCE          
		   ,A.MONEY_SOURCE_NAME     
		   ,A.FIRST_RG_DATE         
		   ,A.END_AMOUNT            
		   ,A.PRINT_DEPLOY_BILL     
		   ,A.PRINT_POST_INFO       
		   ,A.CUST_LEVEL            
		   ,A.CUST_SOURCE_EXPLAIN	   
		   ,A.INPUT_TIME			  
		   ,A.TOTAL_MONEY_ALL    	   
		   ,A.TOTAL_COUNT, CASE A.CUST_TYPE WHEN 1 THEN N'个人' WHEN 2 THEN N'机构' END AS CUST_TYPE_NAME, dbo.GETAGE(B.BIRTHDAY) AGE, B.CARD_TYPE, B.FAX
           , B.TRUE_FLAG, CASE B.TRUE_FLAG WHEN 1 THEN '未核查' WHEN 2 THEN '真实' ELSE '待核查' END AS TRUE_FLAG_NAME
        INTO #TEMP_QUERY_TCustomersExt
        FROM #TEMPCUST A, TCustomers B
        WHERE A.CUST_ID = B.CUST_ID
          AND (ISNULL(A.FIRST_RG_DATE,0) BETWEEN ISNULL(@IN_RG_BEGIN_DATE,0) AND ISNULL(@IN_RG_END_DATE,30001231)
            OR ISNULL(A.LAST_RG_DATE,0) BETWEEN ISNULL(@IN_RG_BEGIN_DATE,0) AND ISNULL(@IN_RG_END_DATE,30001231) )
    */
print CONVERT(nvarchar,getdate(),114)+':加密客户--END'
	IF ISNULL(@IN_CUST_ID,0)>0
	BEGIN
		SELECT * FROM #TEMPCUST WHERE CUST_ID=@IN_CUST_ID
		RETURN
	END
	IF ISNULL(@IN_ORDERBY,'') = ''
		SET @IN_ORDERBY='CUST_NO'
	IF ISNULL(@IN_PAGE_INDEX,0)<=0
		SET @IN_PAGE_INDEX=1
	IF ISNULL(@IN_PAGE_SIZE,0)<=0
	BEGIN
		SELECT @IN_PAGE_SIZE=PAGESIZE FROM TOPERATOR WHERE OP_CODE=@IN_INPUT_MAN
		IF ISNULL(@IN_PAGE_SIZE,0)<=0
			SET @IN_PAGE_SIZE=20
	END
	DECLARE @V_RECORD_TOTAL INT
	SELECT @V_RECORD_TOTAL=COUNT(0) FROM #TEMPCUST
	IF EXISTS(SELECT 1 FROM TSYSTEM_CTRL WHERE CTRL_TYPE='IS_SHOW_REALPHONE' AND CTRL_VALUE = '1') 
	BEGIN
	SET @V_SQL = N'SELECT * FROM (
        SELECT A.*
		,ROW_NUMBER() OVER(ORDER BY '+@IN_ORDERBY+') RID,'+CAST(@V_RECORD_TOTAL AS VARCHAR)+' AS RECORD_TOTAL FROM #TEMPCUST A) B WHERE B.RID>='
        +CAST((@IN_PAGE_INDEX-1)*@IN_PAGE_SIZE+1 AS NVARCHAR)
        +' AND B.RID<='+CAST(@IN_PAGE_INDEX*@IN_PAGE_SIZE AS NVARCHAR)
	END
	ELSE
	BEGIN
	SET @V_SQL = N'SELECT * FROM (
        SELECT A.CUST_ID
		,A.CUST_NO
		,A.CUST_NAME
		,A.SEX
		,A.BIRTHDAY
		,A.POST_ADDRESS
		,A.POST_CODE
		,A.CARD_ID
		,NULL as CUST_TEL
		,A.E_MAIL
		,NULL AS O_TEL
		,TR.TC_TEL AS MOBILE
		,NULL AS BP
		,A.STATUS_NAME
		,A.LAST_RG_DATE
		,A.CURR_TO_AMOUNT
		,A.TOTAL_MONEY
		,A.CURRENT_MONEY
		,A.BEN_AMOUNT
		,A.EXCHANGE_AMOUNT
		,A.EXCHANGE_AMOUNT_IN
		,A.BACK_AMOUNT
		,A.SERVICE_MAN
		,A.CUST_TYPE
		,A.MODI_FLAG
		,A.GRADE_LEVEL
		,A.GRADE_LEVEL_NAME
		,A.CARD_TYPE_NAME
		,A.IS_DEAL
		,A.IS_DEAL_NAME
		,A.CUST_SOURCE
		,A.CUST_SOURCE_NAME
		,A.COUNTRY
		,A.COUNTRY_NAME
		,A.MONEY_SOURCE
		,A.MONEY_SOURCE_NAME
		,A.FIRST_RG_DATE
		,A.END_AMOUNT
		,A.PRINT_DEPLOY_BILL
		,A.PRINT_POST_INFO
		,A.CUST_LEVEL
		,A.CUST_SOURCE_EXPLAIN
		,A.INPUT_TIME
		,A.TOTAL_MONEY_ALL
		,A.TOTAL_COUNT
		,A.VIP_CARD_ID
		,A.HGTZR_BH
		,ROW_NUMBER() OVER(ORDER BY '+@IN_ORDERBY+') RID,'+CAST(@V_RECORD_TOTAL AS VARCHAR)+' AS RECORD_TOTAL FROM #TEMPCUST A 
		LEFT JOIN TNUMBER_RELATION TR ON TR.FK_TCUSTOMERS = A.CUST_ID) B WHERE B.RID>='
        +CAST((@IN_PAGE_INDEX-1)*@IN_PAGE_SIZE+1 AS NVARCHAR)
        +' AND B.RID<='+CAST(@IN_PAGE_INDEX*@IN_PAGE_SIZE AS NVARCHAR)
	END
	
    EXECUTE( @V_SQL )
print CONVERT(nvarchar,getdate(),114)+':--END'
GO
