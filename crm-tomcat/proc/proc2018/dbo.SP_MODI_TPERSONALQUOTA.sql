USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_MODI_TPERSONALQUOTA @IN_SERIAL_NO       INT,        --序号
                                    @IN_PRODUCT_ID          INT,        --产品ID(INTRUST..TPRODUCT.PRODUCT_ID)
                                    @IN_SUB_PRODUCT_ID      INT,        --子产品ID
                                    @IN_TEAM_ID             INT,        --团队ID
                                    @IN_PERSON              INT,        --个人销售员
                                    @IN_QUOTAMONEY          DECIMAL(16,3),  --该个人金额配额
                                    @IN_QUOTA_QUALIFIED_NUM INT ,       --该个人合格投资人配额
                                    @IN_PREPRODUCT_ID       INT,        --预发行产品ID(EFCRM..TPREPRODUCT.PREPRODUCT_ID)
                                    @IN_INPUT_MAN           INT         --操作员
                                    

WITH ENCRYPTION
AS
    SET NOCOUNT ON
    DECLARE @V_RET_CODE INT,@IBUSI_FLAG INT,@SBUSI_NAME NVARCHAR(40),@SSUMMARY NVARCHAR(200)
    DECLARE @V_PRE_MONEY DECIMAL(16,3), @V_QUOTAMONEY_SUM DECIMAL(16,3), @V_QUOTAMONEY DECIMAL(16,3)
    DECLARE @V_QUOTA_NUM INT, @V_QUOTA_QUALIFIED_NUM DEC(16,3),@V_ERROR NVARCHAR(500),@V_QUOTAMONEY_TEAM DEC(16,3),@V_QUOTAMONEY_P DEC(16,3)
    DECLARE @V_QUOTA_TEAM_NUM INT,@V_QUOTA_P_NUM INT
    SELECT @SBUSI_NAME = N'修改个人销售配额'
    SELECT @SSUMMARY = N'修改个人销售配额'
    SELECT @IBUSI_FLAG = 30105
    SELECT @V_RET_CODE = -30105000

    SET @IN_PRODUCT_ID = ISNULL(@IN_PRODUCT_ID,0)
    SET @IN_SUB_PRODUCT_ID = ISNULL(@IN_SUB_PRODUCT_ID,0);
    SET @IN_PREPRODUCT_ID = ISNULL(@IN_PREPRODUCT_ID,0)

    BEGIN TRY
    BEGIN TRANSACTION
    --针对产品设置
    IF @IN_PRODUCT_ID <> 0
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM INTRUST..TPRODUCT WHERE PRODUCT_ID = @IN_PRODUCT_ID)
        BEGIN
			SET @V_ERROR = N'产品不存在'
			RAISERROR(@V_ERROR,16,1)
		END
		IF ISNULL(@IN_PERSON,0)=0
			RAISERROR('配额目前人员未指定',16,1)
		--本团队设置的配额
		SELECT @V_QUOTAMONEY_TEAM=QUOTAMONEY,@V_QUOTA_TEAM_NUM=QUOTA_QUALIFIED_NUM FROM TTEAMQUOTA WHERE PRODUCT_ID=@IN_PRODUCT_ID AND SUB_PRODUCT_ID=@IN_SUB_PRODUCT_ID AND TEAM_ID=@IN_TEAM_ID
		--本人已有的配额
		SELECT @V_QUOTAMONEY_P=QUOTAMONEY,@V_QUOTA_P_NUM=QUOTA_QUALIFIED_NUM FROM TPERSONALQUOTA WHERE PRODUCT_ID=@IN_PRODUCT_ID AND SUB_PRODUCT_ID=@IN_SUB_PRODUCT_ID AND OP_CODE=@IN_PERSON
		SET @V_QUOTAMONEY_P=ISNULL(@V_QUOTAMONEY_P,0)
		SET @V_QUOTA_P_NUM= ISNULL(@V_QUOTA_P_NUM,0)
		--产品所有团队的总配额
        SELECT @V_QUOTAMONEY_SUM = ISNULL(SUM(QUOTAMONEY),0) ,@V_QUOTA_NUM = SUM(ISNULL(QUOTA_QUALIFIED_NUM,0))
            FROM TPERSONALQUOTA 
            WHERE PRODUCT_ID = @IN_PRODUCT_ID AND SUB_PRODUCT_ID=@IN_SUB_PRODUCT_ID 
                AND OP_CODE IN (SELECT MANAGERID FROM TManagerTeamMembers WHERE TEAM_ID=@IN_TEAM_ID)
        IF @V_QUOTAMONEY_SUM-@V_QUOTAMONEY_P+@IN_QUOTAMONEY>@V_QUOTAMONEY_TEAM
		    RAISERROR('各成员配额总额不能大于团队配额',16,1)
		IF @V_QUOTA_NUM -@V_QUOTA_P_NUM+@IN_QUOTA_QUALIFIED_NUM>@V_QUOTA_TEAM_NUM
			RAISERROR('合格投资人:各成员配额总额不能大于团队配额',16,1)
		IF ISNULL(@IN_SERIAL_NO,0)>0
		BEGIN --指定记录
		UPDATE TPERSONALQUOTA
            SET 
            QUOTAMONEY          = @IN_QUOTAMONEY,
            QUOTA_QUALIFIED_NUM = @IN_QUOTA_QUALIFIED_NUM
            WHERE SERIAL_NO     = @IN_SERIAL_NO
        IF @@ROWCOUNT=0
			INSERT INTO TPERSONALQUOTA(PRODUCT_ID,SUB_PRODUCT_ID,OP_CODE,QUOTAMONEY,QUOTA_QUALIFIED_NUM,PREPRODUCT_ID)
			SELECT @IN_PRODUCT_ID,@IN_SUB_PRODUCT_ID,@IN_PERSON,@IN_QUOTAMONEY,@IN_QUOTA_QUALIFIED_NUM,0
		END
		ELSE --没指定记录时
		BEGIN
			UPDATE TPERSONALQUOTA
				SET 
				QUOTAMONEY          = @IN_QUOTAMONEY,
				QUOTA_QUALIFIED_NUM = @IN_QUOTA_QUALIFIED_NUM 
				WHERE PRODUCT_ID=@IN_PRODUCT_ID AND SUB_PRODUCT_ID=@IN_SUB_PRODUCT_ID AND OP_CODE=@IN_PERSON-- AND ISNULL(PREPRODUCT_ID,0)=ISNULL(@IN_PREPRODUCT_ID,0)
			IF @@ROWCOUNT=0
			INSERT INTO TPERSONALQUOTA(PRODUCT_ID,SUB_PRODUCT_ID,OP_CODE,QUOTAMONEY,QUOTA_QUALIFIED_NUM,PREPRODUCT_ID)
				SELECT @IN_PRODUCT_ID,@IN_SUB_PRODUCT_ID,@IN_PERSON,@IN_QUOTAMONEY,@IN_QUOTA_QUALIFIED_NUM,0
		END
		--SELECT * FROM TPERSONALQUOTA
    END
    --针对预发行产品设置
    IF @IN_PREPRODUCT_ID <> 0
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM TPREPRODUCT WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID)
            RAISERROR('预发行产品不存在',16,3) --预发行产品不存在
        --本团队设置的配额
		SELECT @V_QUOTAMONEY_TEAM=QUOTAMONEY,@V_QUOTA_TEAM_NUM=QUOTA_QUALIFIED_NUM FROM TTEAMQUOTA WHERE prePRODUCT_ID=@IN_PREPRODUCT_ID AND TEAM_ID=@IN_TEAM_ID
		--本人已有的配额
		SELECT @V_QUOTAMONEY_P=QUOTAMONEY,@V_QUOTA_P_NUM=QUOTA_QUALIFIED_NUM FROM TPERSONALQUOTA WHERE SERIAL_NO=@IN_SERIAL_NO
		SET @V_QUOTAMONEY_P=ISNULL(@V_QUOTAMONEY_P,0)
		SET @V_QUOTA_P_NUM= ISNULL(@V_QUOTA_P_NUM,0)
		--产品所有团队的总配额
        SELECT @V_QUOTAMONEY_SUM = ISNULL(SUM(QUOTAMONEY),0) ,@V_QUOTA_NUM = SUM(ISNULL(QUOTA_QUALIFIED_NUM,0))
            FROM TPERSONALQUOTA 
            WHERE PREPRODUCT_ID = @IN_PREPRODUCT_ID
                AND OP_CODE IN (SELECT MANAGERID FROM TManagerTeamMembers WHERE TEAM_ID=@IN_TEAM_ID)
        IF @V_QUOTAMONEY_SUM-@V_QUOTAMONEY_P+@IN_QUOTAMONEY>@V_QUOTAMONEY_TEAM
		    RAISERROR('各成员配额总额不能大于团队配额',16,1)
		IF @V_QUOTA_NUM -@V_QUOTA_P_NUM+@IN_QUOTA_QUALIFIED_NUM>@V_QUOTA_TEAM_NUM
			RAISERROR('合格投资人:各成员配额总额不能大于团队配额',16,1)
        IF @IN_SERIAL_NO>0
        BEGIN
        UPDATE TPERSONALQUOTA
            SET 
            QUOTAMONEY          = @IN_QUOTAMONEY,
            QUOTA_QUALIFIED_NUM = @IN_QUOTA_QUALIFIED_NUM
            WHERE SERIAL_NO     = @IN_SERIAL_NO
		IF @@ROWCOUNT=0
			INSERT INTO TPERSONALQUOTA(PRODUCT_ID,SUB_PRODUCT_ID,OP_CODE,QUOTAMONEY,QUOTA_QUALIFIED_NUM,PREPRODUCT_ID)
			SELECT 0,@IN_SUB_PRODUCT_ID,@IN_PERSON,@IN_QUOTAMONEY,@IN_QUOTA_QUALIFIED_NUM,@IN_PREPRODUCT_ID
		END
		ELSE
		BEGIN
			UPDATE TPERSONALQUOTA
				SET 
				QUOTAMONEY          = @IN_QUOTAMONEY,
				QUOTA_QUALIFIED_NUM = @IN_QUOTA_QUALIFIED_NUM
				WHERE PRODUCT_ID=0 AND ISNULL(PREPRODUCT_ID,0)=@IN_PREPRODUCT_ID AND OP_CODE=@IN_PERSON
			IF @@ROWCOUNT=0
			INSERT INTO TPERSONALQUOTA(PRODUCT_ID,SUB_PRODUCT_ID,OP_CODE,QUOTAMONEY,QUOTA_QUALIFIED_NUM,PREPRODUCT_ID)
				SELECT 0,@IN_SUB_PRODUCT_ID,@IN_PERSON,@IN_QUOTAMONEY,@IN_QUOTA_QUALIFIED_NUM,@IN_PREPRODUCT_ID
		END
    END
	--保存日志
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)
    COMMIT TRANSACTION
    END TRY

    --异常处理
    BEGIN CATCH
        IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)
        SELECT @V_ERROR_STR = N'Message:%s<BR><font color = "white">Error:%d,Level:%d,State:%d,Procedure:%s,Line:%d</font>',
               @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()
        RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,1,@V_ERROR_MESSAGE,@V_ERROR_NUMBER,@V_ERROR_SEVERITY,@V_ERROR_STATE,
                  @V_ERROR_PROCEDURE,@V_ERROR_LINE)
        RETURN -100
    END CATCH
    RETURN 100
GO
