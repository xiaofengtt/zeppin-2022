USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_CHECK_TPRODUCT @IN_PRODUCT_ID     INT,
                                   @IN_SALE_STATUS    INT,
                                   @IN_INPUT_MAN      INT,
                                   @IN_SUBPRODUCT_ID  INT=0
WITH ENCRYPTION
AS
    DECLARE @V_RET_CODE INT, @IBUSI_FLAG INT, @SBUSI_NAME NVARCHAR(40), @SSUMMARY NVARCHAR(200)
    SELECT @V_RET_CODE = -30101000, @IBUSI_FLAG = 30101
    SELECT @SBUSI_NAME = N'修改CRM产品表状态', @SSUMMARY = N'修改CRM产品表状态'
	BEGIN TRY
	IF (SELECT INPUT_MAN FROM TPRODUCT WHERE PRODUCT_ID = @IN_PRODUCT_ID) = @IN_INPUT_MAN
	RAISERROR(N'录入人审核人不能相同',16,1)
    BEGIN TRANSACTION
    IF ISNULL(@IN_SUBPRODUCT_ID,0)>0
		UPDATE TSUBPRODUCT SET SALE_STATUS = @IN_SALE_STATUS WHERE PRODUCT_ID = @IN_PRODUCT_ID AND SUB_PRODUCT_ID=@IN_SUBPRODUCT_ID
    IF EXISTS (SELECT * FROM TPRODUCT WHERE PRODUCT_ID = @IN_PRODUCT_ID)
          UPDATE TPRODUCT SET SALE_STATUS = @IN_SALE_STATUS,CHECK_MAN = @IN_INPUT_MAN,CHECK_TIME = GETDATE()
              WHERE PRODUCT_ID = @IN_PRODUCT_ID

    SELECT @SSUMMARY = N'修改CRM产品表状态'
    INSERT INTO TLOGLIST(BUSI_FLAG,BUSI_NAME,OP_CODE,SUMMARY)
        VALUES(@IBUSI_FLAG,@SBUSI_NAME,@IN_INPUT_MAN,@SSUMMARY)

	COMMIT TRANSACTION
    RETURN 100
	END TRY

	--异常处理
    BEGIN CATCH
        IF @@TRANCOUNT > 0 BEGIN
            ROLLBACK TRANSACTION
        END
        
        DECLARE @V_ERROR_STR NVARCHAR(1000),@V_ERROR_NUMBER INT,@V_ERROR_SEVERITY INT,@V_ERROR_STATE INT,
                @V_ERROR_PROCEDURE sysname,@V_ERROR_LINE INT,@V_ERROR_MESSAGE NVARCHAR(4000)

        SELECT @V_ERROR_NUMBER = ERROR_NUMBER(),
               @V_ERROR_SEVERITY = ERROR_SEVERITY(),
               @V_ERROR_STATE = ERROR_STATE(),
               @V_ERROR_PROCEDURE = ERROR_PROCEDURE(),
               @V_ERROR_LINE = ERROR_LINE(),
               @V_ERROR_MESSAGE = ERROR_MESSAGE()

        --如果是本过程抛出异常，则只抛出本过程相关的异常信息
        IF @V_ERROR_PROCEDURE = 'SP_ADD_TPRODUCTLIMIT' BEGIN
            SELECT @V_ERROR_STR = N'过程：%s，第 %d 行，错误：%s'
            RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,@V_ERROR_STATE,@V_ERROR_PROCEDURE,@V_ERROR_LINE,@V_ERROR_MESSAGE)
        END
        --如果是内部过程抛出异常，则只抛出内部过程相关的异常信息
        ELSE BEGIN
            SELECT @V_ERROR_STR = N'%s'
            RAISERROR(@V_ERROR_STR,@V_ERROR_SEVERITY,@V_ERROR_STATE,@V_ERROR_MESSAGE)
        END
        
        RETURN -100
    END CATCH
GO
