USE EFCRM
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE SP_QUERY_TCUSTOMER_DIRECT_STATISTIC @IN_DATE      INT,
                                                     @IN_INPUT_MAN INT
WITH ENCRYPTION
AS
    DECLARE @V_ACCUMULATION INT,@V_ACCUMULATION_MONEY DEC(16,3),@V_SURVIVING INT
    DECLARE @V_DRAIN INT,@V_DRAIN_PER DEC(16,4),@V_REPART INT,@V_REPART_PER DEC(16,4)
    DECLARE @V_SURVIVING_PER DEC(16,4),@V_SURVIVING_MONEY DEC(16,3),@V_SURVIVING_MONEY_PER DEC(16,4)
    DECLARE @V_ORG_PEOPLE INT,@V_ORG_PEOPLE_PER DEC(16,4),@V_ORG_MONEY DEC(16,3),@V_ORG_MONEY_PER DEC(16,4)
    DECLARE @V_SUR1000 INT,@V_SUR1000_PER DEC(16,4),@V_SUR_MONEY1000 DEC(16,3),@V_SUR_MONEY1000_PER DEC(16,4)
    DECLARE @V_SUR300 INT,@V_SUR300_PER DEC(16,4),@V_SUR_MONEY300 DEC(16,3),@V_SUR_MONEY300_PER DEC(16,4)
    DECLARE @V_SUR100 INT,@V_SUR100_PER DEC(16,4),@V_SUR_MONEY100 DEC(16,3),@V_SUR_MONEY100_PER DEC(16,4)
    DECLARE @V_SUR0 INT,@V_SUR0_PER DEC(16,4),@V_SUR_MONEY0 DEC(16,3),@V_SUR_MONEY0_PER DEC(16,4)

    IF @IN_DATE IS NULL OR @IN_DATE = 0
        SET @IN_DATE = dbo.GETDATEINT(GETDATE())
    DECLARE @VT_CUSTS TABLE(CUST_ID INT)
    INSERT INTO @VT_CUSTS(CUST_ID) --只购买了单一产品的客户
        SELECT DISTINCT CUST_ID FROM INTRUST..TBENIFITOR A WHERE EXISTS(SELECT 1 FROM INTRUST..TPRODUCT B WHERE A.PRODUCT_ID = B.PRODUCT_ID AND B.INTRUST_FLAG1 = 1)
            AND NOT EXISTS(SELECT 1 FROM INTRUST..TPRODUCT C WHERE A.PRODUCT_ID = C.PRODUCT_ID AND C.INTRUST_FLAG1 = 2)
    CREATE TABLE #TMP_CUST_FIRSTBUY(CUST_ID INT, FIRST_RG_DATE INT) --客户首次购买时间
    INSERT INTO #TMP_CUST_FIRSTBUY(CUST_ID) SELECT CUST_ID FROM EFCRM..TCustomers
    UPDATE #TMP_CUST_FIRSTBUY SET FIRST_RG_DATE = B.BEN_DATE
        FROM #TMP_CUST_FIRSTBUY A, (SELECT CUST_ID, MIN(BEN_DATE) AS BEN_DATE FROM INTRUST..TBENIFITOR GROUP BY CUST_ID) B
        WHERE A.CUST_ID = B.CUST_ID
    --直销客户数
    --累计直销客户
    SELECT @V_ACCUMULATION = COUNT(DISTINCT CUST_ID) FROM INTRUST..TCONTRACT A WHERE CHANNEL_TYPE LIKE '550001%'
            AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID)
            AND EXISTS(SELECT 1 FROM #TMP_CUST_FIRSTBUY H WHERE A.CUST_ID = H.CUST_ID AND H.FIRST_RG_DATE <= @IN_DATE)
            AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)

    --累计直销客户投资金额
    SELECT @V_ACCUMULATION_MONEY = SUM(B.TO_AMOUNT)
        FROM INTRUST..TCONTRACT A, INTRUST..TMONEYDETAIL B
        WHERE (A.CHANNEL_TYPE LIKE '550001%' AND A.CUST_ID = B.CUST_ID AND B.IS_JK_DATA = 1 AND B.DZ_DATE <= @IN_DATE)
            AND EXISTS(SELECT 1 FROM #TMP_CUST_FIRSTBUY H WHERE A.CUST_ID = H.CUST_ID AND H.FIRST_RG_DATE <= @IN_DATE)
            AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)

    --存续直销客户
    SELECT @V_SURVIVING = COUNT(DISTINCT CUST_ID) FROM INTRUST..TCONTRACT A WHERE CHANNEL_TYPE LIKE '550001%'
        AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID AND @IN_DATE BETWEEN B.BEN_DATE AND B.BEN_END_DATE)
        AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)

    --存续直销客户投资金额
    SELECT @V_SURVIVING_MONEY = SUM(B.TO_MONEY)
        FROM INTRUST..TCONTRACT A, INTRUST..TMONEYDETAIL B WHERE A.CHANNEL_TYPE LIKE '550001%' AND A.CUST_ID = B.CUST_ID AND B.IS_JK_DATA = 1
            AND A.CUST_ID IN ( SELECT A.CUST_ID FROM INTRUST..TCONTRACT A WHERE CHANNEL_TYPE LIKE '550001%'
            AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID AND @IN_DATE BETWEEN B.BEN_DATE AND B.BEN_END_DATE))
            AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)

    --流失客户
    SELECT @V_DRAIN = @V_ACCUMULATION - @V_SURVIVING

    --重复认购客户
    SELECT @V_REPART = COUNT(DISTINCT CUST_ID) FROM INTRUST..TCONTRACT A WHERE CHANNEL_TYPE LIKE '550001%'
        AND EXISTS(SELECT * FROM INTRUST..TCONTRACT B WHERE B.CHECK_FLAG = 2 AND A.CUST_ID = B.CUST_ID AND B.CUST_ID IN
                    (SELECT CUST_ID FROM INTRUST..TCONTRACT GROUP BY CUST_ID HAVING COUNT(CUST_ID) > 1))
        AND EXISTS(SELECT 1 FROM #TMP_CUST_FIRSTBUY H WHERE A.CUST_ID = H.CUST_ID AND H.FIRST_RG_DATE <= @IN_DATE)
        AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)

    --机构直销客户
    SELECT @V_ORG_PEOPLE = COUNT(DISTINCT CUST_ID)
        FROM INTRUST..TCONTRACT A WHERE CHANNEL_TYPE LIKE '550001%'
            AND EXISTS(SELECT 1 FROM TCUSTOMERS B WHERE CUST_TYPE = 2 AND A.CUST_ID = B.CUST_ID)
            AND EXISTS(SELECT 1 FROM #TMP_CUST_FIRSTBUY H WHERE A.CUST_ID = H.CUST_ID AND H.FIRST_RG_DATE <= @IN_DATE)
            AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)

    --机构直销客户投资金额
    SELECT @V_ORG_MONEY = SUM(B.TO_MONEY)
        FROM INTRUST..TCONTRACT A, INTRUST..TMONEYDETAIL B WHERE A.CHANNEL_TYPE LIKE '550001%' AND A.CUST_ID = B.CUST_ID AND B.IS_JK_DATA = 1
            AND A.CUST_ID IN (SELECT A.CUST_ID FROM TCUSTSOURCEINFO A WHERE CHANNEL_TYPE LIKE '550001%'
                                AND EXISTS(SELECT 1 FROM TCUSTOMERS B WHERE CUST_TYPE =2 AND A.CUST_ID = B.CUST_ID))
            AND EXISTS(SELECT 1 FROM #TMP_CUST_FIRSTBUY H WHERE A.CUST_ID = H.CUST_ID AND H.FIRST_RG_DATE <= @IN_DATE)
            AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)

    --按金额等级划分
    --存续金额1000万以上直销客户
    SELECT @V_SUR1000 = COUNT(DISTINCT CUST_ID) FROM INTRUST..TCONTRACT A WHERE CHANNEL_TYPE LIKE '550001%' AND EXISTS(
        (SELECT B.CUST_ID FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID AND @IN_DATE BETWEEN B.BEN_DATE AND B.BEN_END_DATE
         GROUP BY CUST_ID HAVING SUM(B.BEN_AMOUNT) > 10000000))
            AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)

    --存续金额1000万以上直销客户投资金额
    SELECT @V_SUR_MONEY1000 =SUM(B.TO_MONEY) FROM INTRUST..TCONTRACT A, INTRUST..TMONEYDETAIL B
    WHERE A.CHANNEL_TYPE LIKE '550001%' AND A.CUST_ID = B.CUST_ID AND B.IS_JK_DATA = 1
        AND A.CUST_ID IN ( SELECT A.CUST_ID FROM TCUSTSOURCEINFO A WHERE CHANNEL_TYPE LIKE '550001%'
                             AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID AND @IN_DATE BETWEEN B.BEN_DATE AND B.BEN_END_DATE
                             AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)
                           GROUP BY CUST_ID HAVING SUM(B.BEN_AMOUNT) > 10000000) )

    --存续金额300-1000万直销客户
    SELECT @V_SUR300 = COUNT(DISTINCT CUST_ID) FROM INTRUST..TCONTRACT A
    WHERE CHANNEL_TYPE LIKE '550001%'
        AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID AND @IN_DATE BETWEEN B.BEN_DATE AND B.BEN_END_DATE
        AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)
    GROUP BY CUST_ID HAVING SUM(B.BEN_AMOUNT) BETWEEN 3000000 AND 10000000 )

    --存续金额300-1000万直销客户投资金额
    SELECT @V_SUR_MONEY300=SUM(B.TO_MONEY) FROM INTRUST..TCONTRACT A, INTRUST..TMONEYDETAIL B
    WHERE A.CHANNEL_TYPE LIKE '550001%' AND A.CUST_ID = B.CUST_ID AND B.IS_JK_DATA = 1
        AND A.CUST_ID IN ( SELECT A.CUST_ID FROM TCUSTSOURCEINFO A WHERE CHANNEL_TYPE LIKE '550001%'
                             AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID AND @IN_DATE BETWEEN B.BEN_DATE AND B.BEN_END_DATE
                             AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)
                           GROUP BY CUST_ID HAVING SUM(B.BEN_AMOUNT) BETWEEN 3000000 AND 10000000) )

    --存续金额100-300万直销客户
    SELECT @V_SUR100 = COUNT(DISTINCT CUST_ID) FROM INTRUST..TCONTRACT A WHERE CHANNEL_TYPE LIKE '550001%'
        AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID AND @IN_DATE BETWEEN B.BEN_DATE AND B.BEN_END_DATE
        AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)
        GROUP BY CUST_ID HAVING SUM(B.BEN_AMOUNT) < 3000000)

    --存续金额100-300万直销客户投资金额
    SELECT @V_SUR_MONEY100=SUM(B.TO_MONEY) FROM INTRUST..TCONTRACT A, INTRUST..TMONEYDETAIL B
    WHERE A.CHANNEL_TYPE LIKE '550001%' AND A.CUST_ID = B.CUST_ID AND B.IS_JK_DATA = 1
        AND A.CUST_ID IN ( SELECT A.CUST_ID FROM TCUSTSOURCEINFO A WHERE CHANNEL_TYPE LIKE '550001%'
                             AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID AND @IN_DATE BETWEEN B.BEN_DATE AND B.BEN_END_DATE
                             AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)
                           GROUP BY CUST_ID HAVING SUM(B.BEN_AMOUNT) < 3000000))

/*
    --存续金额100万以下直销客户
    SELECT @V_SUR0 = COUNT(*) FROM TCUSTSOURCEINFO A WHERE CHANNEL_TYPE LIKE '550001%'
        AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE A.CUST_ID = B.CUST_ID AND @IN_DATE BETWEEN B.BEN_DATE AND B.BEN_END_DATE
        AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)
        GROUP BY CUST_ID HAVING SUM(B.BEN_AMOUNT) < 1000000)

    --存续金额100万以下直销客户投资金额
    SELECT @V_SUR_MONEY0 =SUM(TO_MONEY) FROM TCUSTSOURCEINFO A, INTRUST..TMONEYDETAIL B
    WHERE A.CHANNEL_TYPE LIKE '550001%' AND A.CUST_ID = B.CUST_ID AND B.IS_JK_DATA = 1
        AND A.CUST_ID IN ( SELECT A.CUST_ID FROM TCUSTSOURCEINFO A WHERE CHANNEL_TYPE LIKE '550001%'
                             AND EXISTS(SELECT 1 FROM INTRUST..TBENIFITOR B WHERE (A.CUST_ID = B.CUST_ID) AND (@IN_DATE BETWEEN B.BEN_DATE AND B.BEN_END_DATE)
                             AND NOT EXISTS(SELECT 1 FROM @VT_CUSTS Z WHERE A.CUST_ID = Z.CUST_ID)
                           GROUP BY CUST_ID HAVING SUM(B.BEN_AMOUNT) < 1000000) )
*/

    IF @V_ACCUMULATION <> 0
    BEGIN
        SET @V_SURVIVING_PER = CONVERT(DEC(16,3),@V_SURVIVING) / @V_ACCUMULATION --* 100.0
        SET @V_ORG_PEOPLE_PER = CONVERT(DEC(16,3),@V_ORG_PEOPLE) / @V_ACCUMULATION --* 100.0
        SET @V_DRAIN_PER = CONVERT(DEC(16,3),@V_DRAIN) / @V_ACCUMULATION --* 100.0
        SET @V_REPART_PER = CONVERT(DEC(16,3),@V_REPART) / @V_ACCUMULATION --* 100.0
    END
    ELSE
    BEGIN
        SET @V_SURVIVING_PER = 0
        SET @V_ORG_PEOPLE_PER = 0
        SET @V_DRAIN_PER = 0
        SET @V_REPART_PER = 0
    END

    IF @V_ACCUMULATION_MONEY <> 0
    BEGIN
        SET @V_SURVIVING_MONEY_PER = @V_SURVIVING_MONEY / @V_ACCUMULATION_MONEY --* 100.0
        SET @V_ORG_MONEY_PER = @V_ORG_MONEY / @V_ACCUMULATION_MONEY --* 100.0
    END
    ELSE
    BEGIN
        SET @V_SURVIVING_MONEY_PER = 0
        SET @V_ORG_MONEY_PER = 0
    END

    IF @V_SURVIVING <> 0
    BEGIN
        SET @V_SUR1000_PER = CONVERT(DEC(16,3),@V_SUR1000) / @V_SURVIVING --* 100.0
        SET @V_SUR300_PER = CONVERT(DEC(16,3),@V_SUR300) / @V_SURVIVING --* 100.0
        SET @V_SUR100_PER = CONVERT(DEC(16,3),@V_SUR100) / @V_SURVIVING --* 100.0
        --SET @V_SUR0_PER = CONVERT(DEC(16,3),@V_SUR0) / @V_SURVIVING --* 100.0
    END
    ELSE
    BEGIN
        SET @V_SUR1000_PER = 0
        SET @V_SUR300_PER = 0
        SET @V_SUR100_PER = 0
        --SET @V_SUR0_PER = 0
    END

    IF @V_SURVIVING_MONEY <> 0
    BEGIN
        SET @V_SUR_MONEY1000_PER = @V_SUR_MONEY1000 / @V_SURVIVING_MONEY --* 100.0
        SET @V_SUR_MONEY300_PER = @V_SUR_MONEY300 / @V_SURVIVING_MONEY --* 100.0
        SET @V_SUR_MONEY100_PER = @V_SUR_MONEY100 / @V_SURVIVING_MONEY --* 100.0
        --SET @V_SUR_MONEY0_PER = @V_SUR_MONEY0 / @V_SURVIVING_MONEY --* 100.0
    END
    ELSE
    BEGIN
        SET @V_SUR_MONEY1000_PER = 0
        SET @V_SUR_MONEY300_PER = 0
        SET @V_SUR_MONEY100_PER = 0
        --SET @V_SUR_MONEY0_PER = 0
    END

    SELECT           '累计直销客户' AS TEST1,                                               @V_ACCUMULATION   AS TEST2       --累计直销客户
    UNION ALL SELECT '存续直销客户',                                               @V_SURVIVING            --存续直销客户
    UNION ALL SELECT '存续直销客户占比累计直销客户',                               @V_SURVIVING_PER        --存续直销客户占比累计直销客户
    UNION ALL SELECT '累计直销客户投资金额',                                       @V_ACCUMULATION_MONEY   --累计直销客户投资金额
    UNION ALL SELECT '存续直销客户投资金额',                                       @V_SURVIVING_MONEY      --存续直销客户投资金额
    UNION ALL SELECT '存续直销客户投资金额占比累计直销客户投资金额',               @V_SURVIVING_MONEY_PER  --存续直销客户投资金额占比累计直销客户投资金额
    UNION ALL SELECT '流失客户',                                                   @V_DRAIN                --流失客户
    UNION ALL SELECT '流失客户占比累计直销客户',                                   @V_DRAIN_PER            --流失客户占比累计直销客户
    UNION ALL SELECT '重复购买直销客户',                                           @V_REPART               --重复购买直销客户
    UNION ALL SELECT '重复购买直销客户占比累计直销客户',                           @V_REPART_PER           --重复购买直销客户占比累计直销客户
    UNION ALL SELECT '机构直销客户',                                               @V_ORG_PEOPLE           --机构直销客户
    UNION ALL SELECT '机构直销客户数占比累计直销客户',                             @V_ORG_PEOPLE_PER       --机构直销客户数占比累计直销客户
    UNION ALL SELECT '机构直销客户投资金额',                                       @V_ORG_MONEY            --机构直销客户投资金额
    UNION ALL SELECT '机构直销客户投资金额占比累计直销客户投资金额',               @V_ORG_MONEY_PER        --机构直销客户投资金额占比累计直销客户投资金额
    UNION ALL SELECT '存续金额1000万以上直销客户',                                 @V_SUR1000              --存续金额1000万以上直销客户
    UNION ALL SELECT '存续金额1000万以上直销客户占比存续直销客户',                 @V_SUR1000_PER          --存续金额1000万以上直销客户占比存续直销客户
    UNION ALL SELECT '存续金额1000万以上直销客户投资金额',                         @V_SUR_MONEY1000        --存续金额1000万以上直销客户投资金额
    UNION ALL SELECT '存续金额1000万以上直销客户投资金额占比存续直销客户投资金额', @V_SUR_MONEY1000_PER    --存续金额1000万以上直销客户投资金额占比存续直销客户投资金额
    UNION ALL SELECT '存续金额300-1000万直销客户',                                 @V_SUR300               --存续金额300-1000万直销客户
    UNION ALL SELECT '存续金额300-1000万直销客户占比存续直销客户',                 @V_SUR300_PER           --存续金额300-1000万直销客户占比存续直销客户
    UNION ALL SELECT '存续金额300-1000万直销客户投资金额',                         @V_SUR_MONEY300         --存续金额300-1000万直销客户投资金额
    UNION ALL SELECT '存续金额300-1000万直销客户投资金额占比存续直销客户投资金额', @V_SUR_MONEY300_PER     --存续金额300-1000万直销客户投资金额占比存续直销客户投资金额
    UNION ALL SELECT '存续金额100-300万直销客户',                                  @V_SUR100               --存续金额100-300万直销客户
    UNION ALL SELECT '存续金额100-300万直销客户占比存续直销客户',                  @V_SUR100_PER           --存续金额100-300万直销客户占比存续直销客户
    UNION ALL SELECT '存续金额100-300万直销客户投资金额',                          @V_SUR_MONEY100         --存续金额100-300万直销客户投资金额
    UNION ALL SELECT '存续金额100-300万直销客户投资金额占比存续直销客户投资金额',  @V_SUR_MONEY100_PER     --存续金额100-300万直销客户投资金额占比存续直销客户投资金额
    --UNION ALL SELECT '存续金额100万以下直销客户',                                  @V_SUR0                 --存续金额100万以下直销客户
    --UNION ALL SELECT '存续金额100万以下直销客户占比存续直销客户',                  @V_SUR0_PER             --存续金额100万以下直销客户占比存续直销客户
    --UNION ALL SELECT '存续金额100万以下直销客户投资金额',                          @V_SUR_MONEY0           --存续金额100万以下直销客户投资金额
    --UNION ALL SELECT '存续金额100万以下直销客户投资金额占比存续直销客户投资金额',  @V_SUR_MONEY0_PER       --存续金额100万以下直销客户投资金额占比存续直销客户投资金额
GO
