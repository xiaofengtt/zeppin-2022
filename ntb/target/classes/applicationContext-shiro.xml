<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-4.2.xsd">
       
    <description>apache shiro配置</description>
   
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
<!-- 		<property name="loginUrl" value="/views/login.jsp"/> -->
		<property name="loginUrl" value="/views/login.jsp"/>
        <property name="successUrl" value="/views/index.jsp"/>
        <property name="unauthorizedUrl" value="/views/401.jsp"/>
        <property name="filters">  
            <map>  
                <entry key="authc">  
                    <bean class="cn.zeppin.product.ntb.backadmin.filter.CaptchaFormAuthenticationFilter"></bean>  
                </entry>  
                <entry key="roles">  
                    <bean class="cn.zeppin.product.ntb.backadmin.filter.RoleAuthorizationFilter"></bean>  
                </entry>
                <entry key="perms">  
                    <bean class="cn.zeppin.product.ntb.backadmin.filter.PermsAuthorizationFilter"></bean>  
                </entry>    
                <entry key="token">  
                    <bean class="cn.zeppin.product.ntb.backadmin.filter.TokenCheckFilter"></bean>  
                </entry> 
                <entry key="qcbperms">  
                    <bean class="cn.zeppin.product.ntb.qcb.filter.QcbCompanyAuthCheckFilter"></bean>  
                </entry> 
                <entry key="qcbauthc">  
                    <bean class="cn.zeppin.product.ntb.qcb.filter.CaptchaFormAuthenticationFilter"></bean>  
                </entry> 
                <entry key="qcbWechatAuthc">  
                    <bean class="cn.zeppin.product.ntb.qcb.filter.QcbWechatAuthCheckFilter"></bean>  
                </entry>  
                <entry key="shbxWebAuthc">  
                    <bean class="cn.zeppin.product.ntb.shbx.filter.ShbxWebAuthCheckFilter"></bean>  
                </entry> 
            </map>  
        </property>  
        <property name="filterChainDefinitions">
            <value>
                <!-- 登录，登出，验证码 ，开通-->
				/rest/backadmin/operator/login = anon
				/rest/backadmin/operator/logout = anon
                /rest/backadmin/operator/kaptchaImage = anon
                /rest/backadmin/operator/open = authc
                
                /rest/backadmin/operator/get = authc,perms[operator:get]
                /rest/backadmin/operator/edit = authc,perms[operator:edit]
                /rest/backadmin/operator/password = authc,perms[operator:password]
                
				<!--后台管理员 -->
                /rest/backadmin/superAdmin/get = authc,perms[superAdmin:get]
                /rest/backadmin/superAdmin/list = authc,perms[superAdmin:list]
                /rest/backadmin/superAdmin/add = authc,perms[superAdmin:add]
                /rest/backadmin/superAdmin/edit = authc,perms[superAdmin:edit]
                /rest/backadmin/superAdmin/password = authc,perms[superAdmin:password]
                /rest/backadmin/superAdmin/delete = authc,perms[superAdmin:delete]
                
				<!--后台运营用户 -->
                /rest/backadmin/operateOperator/get = authc,perms[operateOperator:get]
                /rest/backadmin/operateOperator/list = authc,perms[operateOperator:list]
                /rest/backadmin/operateOperator/add = authc,perms[operateOperator:add]
                /rest/backadmin/operateOperator/edit = authc,perms[operateOperator:edit]
                /rest/backadmin/operateOperator/password = authc,perms[operateOperator:password]
                /rest/backadmin/operateOperator/delete = authc,perms[operateOperator:delete]
                
				<!--后台财务用户 -->
                /rest/backadmin/financeOperator/get = authc,perms[financeOperator:get]
                /rest/backadmin/financeOperator/list = authc,perms[financeOperator:list]
                /rest/backadmin/financeOperator/add = authc,perms[financeOperator:add]
                /rest/backadmin/financeOperator/edit = authc,perms[financeOperator:edit]
                /rest/backadmin/financeOperator/password = authc,perms[financeOperator:password]
                /rest/backadmin/financeOperator/delete = authc,perms[financeOperator:delete]
                
				<!--前台投资者用户 -->
                /rest/backadmin/investor/get = authc,perms[investor:get]
                /rest/backadmin/investor/list = authc,perms[investor:list]
                /rest/backadmin/investor/statusList = authc
				/rest/backadmin/investor/getBill = authc,perms[investor:getBill]
				/rest/backadmin/investor/getBillInfo = authc,perms[investor:getBillInfo]
                /rest/backadmin/investor/idcardimgList = authc,perms[investor:idcardimgList]
                /rest/backadmin/investor/idcardimgStatusList = authc
                /rest/backadmin/investor/getidcardimgInfo = authc,perms[investor:getidcardimgInfo]
                /rest/backadmin/investor/checked = authc,perms[investor:checked]
                /rest/backadmin/investor/withdrawList = authc,perms[investor:withdrawList]
                /rest/backadmin/investor/withdrawStatusList = authc
                /rest/backadmin/investor/withdrawEdit = authc,perms[investor:withdrawEdit]
                /rest/backadmin/investor/withdrawProcess = authc,perms[investor:withdrawProcess]
                /rest/backadmin/investor/withdrawExport = authc,perms[investor:withdrawExport]
                /rest/backadmin/investor/withdrawImport = authc,perms[investor:withdrawImport]
                
                <!--前台投资用户投资信息 -->
                /rest/backadmin/investorProduct/listProductBuy = authc,perms[investorProduct:listProductBuy]
                /rest/backadmin/investorProduct/listProductBuyRecords = authc,perms[investorProduct:listProductBuyRecords]
				/rest/backadmin/investorProduct/listInvestorRecharge = authc,perms[investorProduct:listInvestorRecharge]
                
				<!--
                /rest/backadmin/fund/get = authc,perms[fund:get]
                /rest/backadmin/fund/list = authc,perms[fund:list]
                /rest/backadmin/fund/add = authc,perms[fund:add]
                /rest/backadmin/fund/check = authc,perms[fund:check]
                /rest/backadmin/fund/edit = authc,perms[fund:edit]
                /rest/backadmin/fund/delete = authc,perms[fund:delete]
                /rest/backadmin/fund/operateGet = authc,perms[fund:operateGet]
                /rest/backadmin/fund/operateList = authc,perms[fund:operateList]
                /rest/backadmin/fund/operateCheckList = authc,perms[fund:operateCheckList]
                /rest/backadmin/fund/operateEdit = authc,perms[fund:operateEdit]
                /rest/backadmin/fund/operateDelete = authc,perms[fund:operateDelete]
                /rest/backadmin/fund/operateSubmitCheck = authc,perms[fund:operateSubmitCheck]
                /rest/backadmin/fund/operateCheck = authc,perms[fund:operateCheck]
                
                /rest/backadmin/fundPublish/getAccount = authc,perms[fundPublish:getAccount]
                /rest/backadmin/fundPublish/get = authc,perms[fundPublish:get]
                /rest/backadmin/fundPublish/edit = authc,perms[fundPublish:edit]
                /rest/backadmin/fundPublish/netvaluelist = authc,perms[fundPublish:netvaluelist]
                /rest/backadmin/fundPublish/netvalueGet = authc,perms[fundPublish:netvalueGet]
                /rest/backadmin/fundPublish/netvalueEdit = authc,perms[fundPublish:netvalueEdit]
                /rest/backadmin/fundPublish/operateNetvalueGet = authc,perms[fundPublish:operateNetvalueGet]
                /rest/backadmin/fundPublish/operateGet = authc,perms[fundPublish:operateGet]
                /rest/backadmin/fundPublish/operateEdit = authc,perms[fundPublish:operateEdit]
                /rest/backadmin/fundPublish/operateDelete = authc,perms[fundPublish:operateDelete]
                /rest/backadmin/fundPublish/operateList = authc,perms[fundPublish:operateList]
                /rest/backadmin/fundPublish/operateCheckList = authc,perms[fundPublish:operateCheckList]
                /rest/backadmin/fundPublish/operateSubmitCheck = authc,perms[fundPublish:operateSubmitCheck]
                /rest/backadmin/fundPublish/operateCheck = authc,perms[fundPublish:operateCheck]
                
                /rest/backadmin/fundInvest/list = authc,perms[fundInvest:list]
                /rest/backadmin/fundInvest/invest = authc,perms[fundInvest:invest]
                /rest/backadmin/fundInvest/redeem = authc,perms[fundInvest:redeem]
                /rest/backadmin/fundInvest/operateGet = authc,perms[fundInvest:operateGet]
                /rest/backadmin/fundInvest/operateList = authc,perms[fundInvest:operateList]
                /rest/backadmin/fundInvest/operateCheckList = authc,perms[fundInvest:operateCheckList]
                /rest/backadmin/fundInvest/operateDelete = authc,perms[fundInvest:operateDelete]
                /rest/backadmin/fundInvest/operateSubmitCheck = authc,perms[fundInvest:operateSubmitCheck]
                /rest/backadmin/fundInvest/operateCheck = authc,perms[fundInvest:operateCheck] -->
                
				<!--银行信息 -->
                /rest/backadmin/bank/get = authc,perms[bank:get]
                /rest/backadmin/bank/list = authc,perms[bank:list]
                /rest/backadmin/bank/add = authc,perms[bank:add]
                /rest/backadmin/bank/edit = authc,perms[bank:edit]
                /rest/backadmin/bank/delete = authc,perms[bank:delete]
                
				<!--银行理财产品信息 -->
                /rest/backadmin/bankFinancialProduct/get = authc,perms[bankFinancialProduct:get]
                /rest/backadmin/bankFinancialProduct/list = authc,perms[bankFinancialProduct:list]
                /rest/backadmin/bankFinancialProduct/publishList = authc,perms[bankFinancialProduct:publishList]
                /rest/backadmin/bankFinancialProduct/statusList = authc
                /rest/backadmin/bankFinancialProduct/stageList = authc
                /rest/backadmin/bankFinancialProduct/investList = authc
                /rest/backadmin/bankFinancialProduct/add = authc,perms[bankFinancialProduct:add]
                /rest/backadmin/bankFinancialProduct/edit = authc,perms[bankFinancialProduct:edit]
                /rest/backadmin/bankFinancialProduct/delete = authc,perms[bankFinancialProduct:delete]
                /rest/backadmin/bankFinancialProduct/netvaluelist = authc,perms[bankFinancialProduct:netvaluelist]
                /rest/backadmin/bankFinancialProduct/netvalueadd = authc,perms[bankFinancialProduct:netvalueadd]
                /rest/backadmin/bankFinancialProduct/netvalueGet = authc,perms[bankFinancialProduct:netvalueGet]
                /rest/backadmin/bankFinancialProduct/netvalueEdit = authc,perms[bankFinancialProduct:netvalueEdit]
                /rest/backadmin/bankFinancialProduct/operateNetvalueGet = authc,perms[bankFinancialProduct:operateNetvalueGet]
                /rest/backadmin/bankFinancialProduct/operateGet = authc,perms[bankFinancialProduct:operateGet]
                /rest/backadmin/bankFinancialProduct/operateEdit = authc,perms[bankFinancialProduct:operateEdit]
                /rest/backadmin/bankFinancialProduct/operateDelete = authc,perms[bankFinancialProduct:operateDelete]
                /rest/backadmin/bankFinancialProduct/operateList = authc,perms[bankFinancialProduct:operateList]
                /rest/backadmin/bankFinancialProduct/operateCheckList = authc,perms[bankFinancialProduct:operateCheckList]
                /rest/backadmin/bankFinancialProduct/operateSubmitCheck = authc,perms[bankFinancialProduct:operateSubmitCheck]
                /rest/backadmin/bankFinancialProduct/operateCheck = authc,perms[bankFinancialProduct:operateCheck]
                /rest/backadmin/bankFinancialProduct/operateStatusList = authc
                /rest/backadmin/bankFinancialProduct/operateCheckStatusList = authc
                /rest/backadmin/bankFinancialProduct/operateTypeList = authc
                /rest/backadmin/bankFinancialProduct/operateCheckTypeList = authc
                
                <!--银行理财产品发布信息 -->
                /rest/backadmin/bankFinancialProductPublish/get = authc,perms[bankFinancialProductPublish:get]
                /rest/backadmin/bankFinancialProductPublish/list = authc,perms[bankFinancialProductPublish:list]
                /rest/backadmin/bankFinancialProductPublish/statusList = authc
                /rest/backadmin/bankFinancialProductPublish/balanceList = authc
                /rest/backadmin/bankFinancialProductPublish/stageList = authc
                /rest/backadmin/bankFinancialProductPublish/add = authc,perms[bankFinancialProductPublish:add]
                /rest/backadmin/bankFinancialProductPublish/edit = authc,perms[bankFinancialProductPublish:edit]
                /rest/backadmin/bankFinancialProductPublish/exception = authc,perms[bankFinancialProductPublish:exception]
                /rest/backadmin/bankFinancialProductPublish/synchro = authc,perms[bankFinancialProductPublish:synchro]
                /rest/backadmin/bankFinancialProductPublish/collect = authc,perms[bankFinancialProductPublish:collect]
                /rest/backadmin/bankFinancialProductPublish/uninvest = authc,perms[bankFinancialProductPublish:uninvest]
                /rest/backadmin/bankFinancialProductPublish/balance = authc,perms[bankFinancialProductPublish:balance]
                /rest/backadmin/bankFinancialProductPublish/delete = authc,perms[bankFinancialProductPublish:delete]
                /rest/backadmin/bankFinancialProductPublish/operateGet = authc,perms[bankFinancialProductPublish:operateGet]
                /rest/backadmin/bankFinancialProductPublish/operateEdit = authc,perms[bankFinancialProductPublish:operateEdit]
                /rest/backadmin/bankFinancialProductPublish/operateDelete = authc,perms[bankFinancialProductPublish:operateDelete]
                /rest/backadmin/bankFinancialProductPublish/operateList = authc,perms[bankFinancialProductPublish:operateList]
                /rest/backadmin/bankFinancialProductPublish/operateCheckList = authc,perms[bankFinancialProductPublish:operateCheckList]
                /rest/backadmin/bankFinancialProductPublish/operateSubmitCheck = authc,perms[bankFinancialProductPublish:operateSubmitCheck]
                /rest/backadmin/bankFinancialProductPublish/operateCheck = authc,perms[bankFinancialProductPublish:operateCheck]
                /rest/backadmin/bankFinancialProductPublish/operateStatusList = authc
                /rest/backadmin/bankFinancialProductPublish/operateCheckStatusList = authc
                /rest/backadmin/bankFinancialProductPublish/operateTypeList = authc
                /rest/backadmin/bankFinancialProductPublish/operateCheckTypeList = authc
				           
				<!--支行信息 -->
                /rest/backadmin/branchBank/get = authc,perms[branchBank:get]
                /rest/backadmin/branchBank/list = authc,perms[branchBank:list]
                /rest/backadmin/branchBank/add = authc,perms[branchBank:add]
                /rest/backadmin/branchBank/edit = authc,perms[branchBank:edit]
                /rest/backadmin/branchBank/delete = authc,perms[branchBank:delete]
                
				<!--主理人信息 -->
                /rest/backadmin/manager/get = authc,perms[manager:get]
                /rest/backadmin/manager/list = authc,perms[manager:list]
                /rest/backadmin/manager/add = authc,perms[manager:add]
                /rest/backadmin/manager/edit = authc,perms[manager:edit]
                /rest/backadmin/manager/delete = authc,perms[manager:delete]
                
				<!--银行信息 -->
                /rest/backadmin/bank/get = authc,perms[bank:get]
                /rest/backadmin/bank/list = authc,perms[bank:list]
                /rest/backadmin/bank/add = authc,perms[bank:add]
                /rest/backadmin/bank/edit = authc,perms[bank:edit]
                /rest/backadmin/bank/delete = authc,perms[bank:delete]
                
				<!--角色信息 -->
                /rest/backadmin/role/all = authc,perms[role:all]
                /rest/backadmin/role/get = authc,perms[role:get]
                
				<!--全部功能方法列表 -->
                /rest/backadmin/controllerMethod/all = authc,perms[controllerMethod:all]
                /rest/backadmin/controllerMethod/controllerlist = authc,perms[controllerMethod:controllerlist]
                /rest/backadmin/controllerMethod/controllerget = authc,perms[controllerMethod:controllerget]
                /rest/backadmin/controllerMethod/controlleradd = authc,perms[controllerMethod:controlleradd]
                /rest/backadmin/controllerMethod/controlleredit = authc,perms[controllerMethod:controlleredit]
                /rest/backadmin/controllerMethod/controllerdelete = authc,perms[controllerMethod:controllerdelete]
                /rest/backadmin/controllerMethod/methodlist = authc,perms[controllerMethod:methodlist]
                /rest/backadmin/controllerMethod/methodget = authc,perms[controllerMethod:methodget]
                /rest/backadmin/controllerMethod/methodadd = authc,perms[controllerMethod:methodadd]
                /rest/backadmin/controllerMethod/methodedit = authc,perms[controllerMethod:methodedit]
                /rest/backadmin/controllerMethod/methoddelete = authc,perms[controllerMethod:methoddelete]
                
				<!--角色功能权限 -->
                /rest/backadmin/roleMethod/edit = authc,perms[roleMethod:edit]
                /rest/backadmin/roleMethod/list = authc,perms[roleMethod:list]
                
				<!--=角色页面权限 -->
                /rest/backadmin/roleMenu/edit = authc,perms[roleMenu:edit]
                /rest/backadmin/roleMenu/list = authc,perms[roleMenu:list]
                /rest/backadmin/roleMenu/sort = authc,perms[roleMenu:sort]
                
				<!--页面信息 -->
                /rest/backadmin/menu/all = authc,perms[menu:all]
                /rest/backadmin/menu/menulist = authc,perms[menu:menulist]
                /rest/backadmin/menu/menuget = authc,perms[menu:menuget]
                /rest/backadmin/menu/menuadd = authc,perms[menu:menuadd]
                /rest/backadmin/menu/menuedit = authc,perms[menu:menuedit]
                /rest/backadmin/menu/menudelete = authc,perms[menu:menudelete]
                
                <!--银行理财产品投资信息 -->
                /rest/backadmin/bankFinancialProductInvest/list = authc,perms[bankFinancialProductInvest:list]
                /rest/backadmin/bankFinancialProductInvest/invest = authc,perms[bankFinancialProductInvest:invest]
                /rest/backadmin/bankFinancialProductInvest/redeem = authc,perms[bankFinancialProductInvest:redeem]
                /rest/backadmin/bankFinancialProductInvest/operateGet = authc,perms[bankFinancialProductInvest:operateGet]
                /rest/backadmin/bankFinancialProductInvest/operateList = authc,perms[bankFinancialProductInvest:operateList]
                /rest/backadmin/bankFinancialProductInvest/operateCheckList = authc,perms[bankFinancialProductInvest:operateCheckList]
                /rest/backadmin/bankFinancialProductInvest/operateEdit = authc,perms[bankFinancialProductInvest:operateEdit]
                /rest/backadmin/bankFinancialProductInvest/operateDelete = authc,perms[bankFinancialProductInvest:operateDelete]
                /rest/backadmin/bankFinancialProductInvest/operateSubmitCheck = authc,perms[bankFinancialProductInvest:operateSubmitCheck]
                /rest/backadmin/bankFinancialProductInvest/operateCheck = authc,perms[bankFinancialProductInvest:operateCheck]
                /rest/backadmin/bankFinancialProductInvest/operateStatusList = authc
                /rest/backadmin/bankFinancialProductInvest/operateCheckStatusList = authc
                /rest/backadmin/bankFinancialProductInvest/operateTypeList = authc
                /rest/backadmin/bankFinancialProductInvest/operateCheckTypeList = authc
                
                <!--企业账户信息 -->
                /rest/backadmin/companyAccount/operateTotalTypeList = authc
                /rest/backadmin/companyAccount/operateCheckTotalTypeList = authc
                /rest/backadmin/companyAccount/typeList = authc
                /rest/backadmin/companyAccount/list = authc,perms[companyAccount:list]
                /rest/backadmin/companyAccount/historyList = authc,perms[companyAccount:historyList]
                /rest/backadmin/companyAccount/investList = authc,perms[companyAccount:investList]
                /rest/backadmin/companyAccount/get = authc,perms[companyAccount:get]
                /rest/backadmin/companyAccount/getPlatform = authc,perms[companyAccount:getPlatform]
                /rest/backadmin/companyAccount/getPlatformBalance = authc,perms[companyAccount:getPlatformBalance]
                /rest/backadmin/companyAccount/add = authc,perms[companyAccount:add]
                /rest/backadmin/companyAccount/edit = authc,perms[companyAccount:edit]
                /rest/backadmin/companyAccount/operateGet = authc,perms[companyAccount:operateGet]
                /rest/backadmin/companyAccount/operateList = authc,perms[companyAccount:operateList]
                /rest/backadmin/companyAccount/operateCheckList = authc,perms[companyAccount:operateCheckList]
                /rest/backadmin/companyAccount/operateEdit = authc,perms[companyAccount:operateEdit]
                /rest/backadmin/companyAccount/operateDelete = authc,perms[companyAccount:operateDelete]
                /rest/backadmin/companyAccount/operateSubmitCheck = authc,perms[companyAccount:operateSubmitCheck]
                /rest/backadmin/companyAccount/operateCheck = authc,perms[companyAccount:operateCheck]
                /rest/backadmin/companyAccount/operateStatusList = authc
                /rest/backadmin/companyAccount/operateCheckStatusList = authc
                /rest/backadmin/companyAccount/operateTypeList = authc
                /rest/backadmin/companyAccount/operateCheckTypeList = authc
                
                <!--企业账户交易 -->
                /rest/backadmin/companyAccountTransfer/get = authc,perms[companyAccountTransfer:get]
                /rest/backadmin/companyAccountTransfer/recharge = authc,perms[companyAccountTransfer:recharge]
                /rest/backadmin/companyAccountTransfer/expend = authc,perms[companyAccountTransfer:expend]
                /rest/backadmin/companyAccountTransfer/withdraw = authc,perms[companyAccountTransfer:withdraw]
                /rest/backadmin/companyAccountTransfer/transfer = authc,perms[companyAccountTransfer:transfer]
                /rest/backadmin/companyAccountTransfer/operateGet = authc,perms[companyAccountTransfer:operateGet]
                /rest/backadmin/companyAccountTransfer/operateList = authc,perms[companyAccountTransfer:operateList]
                /rest/backadmin/companyAccountTransfer/operateCheckList = authc,perms[companyAccountTransfer:operateCheckList]
                /rest/backadmin/companyAccountTransfer/operateEdit = authc,perms[companyAccountTransfer:operateEdit]
                /rest/backadmin/companyAccountTransfer/operateDelete = authc,perms[companyAccountTransfer:operateDelete]
                /rest/backadmin/companyAccountTransfer/operateSubmitCheck = authc,perms[companyAccountTransfer:operateSubmitCheck]
                /rest/backadmin/companyAccountTransfer/operateCheck = authc,perms[companyAccountTransfer:operateCheck]
                /rest/backadmin/companyAccountTransfer/operateStatusList = authc
                /rest/backadmin/companyAccountTransfer/operateCheckStatusList = authc
                /rest/backadmin/companyAccountTransfer/operateTypeList = authc
                /rest/backadmin/companyAccountTransfer/operateCheckTypeList = authc
                
                <!--募集产品结算 -->
                /rest/backadmin/productPublishBalance/balance = authc,perms[productPublishBalance:balance]
                /rest/backadmin/productPublishBalance/operateGet = authc,perms[productPublishBalance:operateGet]
                /rest/backadmin/productPublishBalance/operateList = authc,perms[productPublishBalance:operateList]
                /rest/backadmin/productPublishBalance/operateCheckList = authc,perms[productPublishBalance:operateCheckList]
                /rest/backadmin/productPublishBalance/operateEdit = authc,perms[productPublishBalance:operateEdit]
                /rest/backadmin/productPublishBalance/operateDelete = authc,perms[productPublishBalance:operateDelete]
                /rest/backadmin/productPublishBalance/operateSubmitCheck = authc,perms[productPublishBalance:operateSubmitCheck]
                /rest/backadmin/productPublishBalance/operateCheck = authc,perms[productPublishBalance:operateCheck]
                /rest/backadmin/productPublishBalance/operateStatusList = authc
                /rest/backadmin/productPublishBalance/operateCheckStatusList = authc
                
                <!-- 支付方式管理 -->
                /rest/backadmin/bkpayment/get = authc,perms[bkpayment:get]
                /rest/backadmin/bkpayment/list = authc,perms[bkpayment:list]
                /rest/backadmin/bkpayment/add = authc,perms[bkpayment:add]
                /rest/backadmin/bkpayment/edit = authc,perms[bkpayment:edit]
                /rest/backadmin/bkpayment/delete = authc,perms[bkpayment:delete]
                /rest/backadmin/bkpayment/change = authc,perms[bkpayment:change]
                /rest/backadmin/bkpayment/operateGet = authc,perms[bkpayment:operateGet]
                /rest/backadmin/bkpayment/operateList = authc,perms[bkpayment:operateList]
                /rest/backadmin/bkpayment/operateCheckList = authc,perms[bkpayment:operateCheckList]
                /rest/backadmin/bkpayment/operateEdit = authc,perms[bkpayment:operateEdit]
                /rest/backadmin/bkpayment/operateDelete = authc,perms[bkpayment:operateDelete]
                /rest/backadmin/bkpayment/operateSubmitCheck = authc,perms[bkpayment:operateSubmitCheck]
                /rest/backadmin/bkpayment/operateCheck = authc,perms[bkpayment:operateCheck]
                /rest/backadmin/bkpayment/operateStatusList = authc
                /rest/backadmin/bkpayment/operateCheckStatusList = authc
                /rest/backadmin/bkpayment/operateTypeList = authc
                /rest/backadmin/bkpayment/operateCheckTypeList = authc
                
                <!-- 应用商店管理 -->
                /rest/backadmin/market/get = authc,perms[market:get]
                /rest/backadmin/market/list = authc,perms[market:list]
                /rest/backadmin/market/add = authc,perms[market:add]
                /rest/backadmin/market/edit = authc,perms[market:edit]
                /rest/backadmin/market/delete = authc,perms[market:delete]
                /rest/backadmin/market/change = authc,perms[market:change]
                
                <!-- 后台版本控制管理 -->
                /rest/backadmin/version/get = authc,perms[version:get]
                /rest/backadmin/version/list = authc,perms[version:list]
                /rest/backadmin/version/statusList = authc
                /rest/backadmin/version/add = authc,perms[version:add]
                /rest/backadmin/version/edit = authc,perms[version:edit]
                /rest/backadmin/version/delete = authc,perms[version:delete]
                /rest/backadmin/version/change = authc,perms[version:change]
                
                <!-- 优惠券管理 -->
                /rest/backadmin/coupon/get = authc,perms[coupon:get]
                /rest/backadmin/coupon/list = authc,perms[coupon:list]
                /rest/backadmin/coupon/typeList = authc
                /rest/backadmin/coupon/statusList = authc
                /rest/backadmin/coupon/add = authc,perms[coupon:add]
                /rest/backadmin/coupon/edit = authc,perms[coupon:edit]
                /rest/backadmin/coupon/delete = authc,perms[coupon:delete]
                
                <!-- 优惠券策略管理 -->
                /rest/backadmin/couponStrategy/statusList = authc
                /rest/backadmin/couponStrategy/get = authc,perms[couponStrategy:get]
                /rest/backadmin/couponStrategy/list = authc,perms[couponStrategy:list]
                /rest/backadmin/couponStrategy/add = authc,perms[couponStrategy:add]
                /rest/backadmin/couponStrategy/edit = authc,perms[couponStrategy:edit]
                /rest/backadmin/couponStrategy/delete = authc,perms[couponStrategy:delete]
                /rest/backadmin/couponStrategy/change = authc,perms[couponStrategy:change]
                /rest/backadmin/couponStrategy/operateGet = authc,perms[couponStrategy:operateGet]
                /rest/backadmin/couponStrategy/operateList = authc,perms[couponStrategy:operateList]
                /rest/backadmin/couponStrategy/operateCheckList = authc,perms[couponStrategy:operateCheckList]
                /rest/backadmin/couponStrategy/operateEdit = authc,perms[couponStrategy:operateEdit]
                /rest/backadmin/couponStrategy/operateDelete = authc,perms[couponStrategy:operateDelete]
                /rest/backadmin/couponStrategy/operateSubmitCheck = authc,perms[couponStrategy:operateSubmitCheck]
                /rest/backadmin/couponStrategy/operateCheck = authc,perms[couponStrategy:operateCheck]
                /rest/backadmin/couponStrategy/operateStatusList = authc
                /rest/backadmin/couponStrategy/operateCheckStatusList = authc
                /rest/backadmin/couponStrategy/operateTypeList = authc
                /rest/backadmin/couponStrategy/operateCheckTypeList = authc
                
                <!-- 企财宝企业管理 -->
                /rest/backadmin/qcbcompany/statusList = authc
                /rest/backadmin/qcbcompany/list = authc,perms[qcbcompany:list]
                /rest/backadmin/qcbcompany/get = authc,perms[qcbcompany:get]
                /rest/backadmin/qcbcompany/historyList = authc,perms[qcbcompany:historyList]
                /rest/backadmin/qcbcompany/historyGet = authc,perms[qcbcompany:historyGet]
                /rest/backadmin/qcbcompany/operateGet = authc,perms[qcbcompany:operateGet]
                /rest/backadmin/qcbcompany/operateCheck = authc,perms[qcbcompany:operateCheck]
                /rest/backadmin/qcbcompany/virtualAccountBind = authc,perms[qcbcompany:virtualAccountBind]
                /rest/backadmin/qcbcompany/operateStatusList = authc
                
                /rest/backadmin/qcbcompany/changeFee = authc,perms[qcbcompany:changeFee]
                /rest/backadmin/qcbcompany/operateFeeStatusList = authc
                /rest/backadmin/qcbcompany/operateFeeCheckStatusList = authc
                /rest/backadmin/qcbcompany/operateFeeList = authc,perms[qcbcompany:operateFeeList]
                /rest/backadmin/qcbcompany/operateFeeCheckList = authc,perms[qcbcompany:operateFeeCheckList]
                /rest/backadmin/qcbcompany/operateFeeGet = authc,perms[qcbcompany:operateFeeGet]
                /rest/backadmin/qcbcompany/operateFeeEdit = authc,perms[qcbcompany:operateFeeEdit]
                /rest/backadmin/qcbcompany/operateFeeDelete = authc,perms[qcbcompany:operateFeeDelete]
                /rest/backadmin/qcbcompany/operateFeeSubmitCheck = authc,perms[qcbcompany:operateFeeSubmitCheck]
                /rest/backadmin/qcbcompany/operateFeeCheck = authc,perms[qcbcompany:operateFeeCheck]
                /rest/backadmin/qcbcompany/operateFeeTypeList = authc
                /rest/backadmin/qcbcompany/operateFeeCheckTypeList = authc
                
                <!-- 企财宝企业交易管理 -->
                /rest/backadmin/qcbCompanyTransfer/operateStatusList = authc
                /rest/backadmin/qcbCompanyTransfer/operateCheckStatusList = authc
                /rest/backadmin/qcbCompanyTransfer/operateTypeList = authc
                /rest/backadmin/qcbCompanyTransfer/operateCheckTypeList = authc
                /rest/backadmin/qcbCompanyTransfer/recharge = authc,perms[qcbCompanyTransfer:recharge]
                /rest/backadmin/qcbCompanyTransfer/operateGet = authc,perms[qcbCompanyTransfer:operateGet]
                /rest/backadmin/qcbCompanyTransfer/operateList = authc,perms[qcbCompanyTransfer:operateList]
                /rest/backadmin/qcbCompanyTransfer/operateCheckList = authc,perms[qcbCompanyTransfer:operateCheckList]
                /rest/backadmin/qcbCompanyTransfer/operateEdit = authc,perms[qcbCompanyTransfer:operateEdit]
                /rest/backadmin/qcbCompanyTransfer/operateDelete = authc,perms[qcbCompanyTransfer:operateDelete]
                /rest/backadmin/qcbCompanyTransfer/operateSubmitCheck = authc,perms[qcbCompanyTransfer:operateSubmitCheck]
                /rest/backadmin/qcbCompanyTransfer/operateCheck = authc,perms[qcbCompanyTransfer:operateCheck]
                /rest/backadmin/qcbCompanyTransfer/expend = authc,perms[qcbCompanyTransfer:expend]
                /rest/backadmin/qcbCompanyTransfer/operateExpendEdit = authc,perms[qcbCompanyTransfer:operateExpendEdit]
                
                
                <!-- 企财宝财税服务 -->
                /rest/backadmin/qcbfinance/statusList = authc
                /rest/backadmin/qcbfinance/list = authc,perms[qcbfinance:list]
                /rest/backadmin/qcbfinance/get = authc,perms[qcbfinance:get]
                /rest/backadmin/qcbfinance/check = authc,perms[qcbfinance:check]
                
                <!-- 企财宝银行虚拟户 -->
                /rest/backadmin/qcbVirtualAccounts/statusList = authc
                /rest/backadmin/qcbVirtualAccounts/list = authc,perms[qcbVirtualAccounts:list]
                /rest/backadmin/qcbVirtualAccounts/get = authc,perms[qcbVirtualAccounts:get]
                /rest/backadmin/qcbVirtualAccounts/batchAdd = authc,perms[qcbVirtualAccounts:batchAdd]
                /rest/backadmin/qcbVirtualAccounts/batchDelete = authc,perms[qcbVirtualAccounts:batchDelete]
                /rest/backadmin/qcbVirtualAccounts/delete = authc,perms[qcbVirtualAccounts:delete]
                <!--广告管理 -->
				/rest/backadmin/advert/list = authc,perms[advert:list]
				/rest/backadmin/advert/add = authc,perms[advert:add]
				/rest/backadmin/advert/edit = authc,perms[advert:edit]
				<!-- 企财宝提现处理 -->
				/rest/backadmin/qcbWithdraw/employeeList = authc,perms[qcbWithdraw:employeeList]
				/rest/backadmin/qcbWithdraw/employeeEdit = authc,perms[qcbWithdraw:employeeEdit]
				/rest/backadmin/qcbWithdraw/employeeProcess = authc,perms[qcbWithdraw:employeeProcess]
				/rest/backadmin/qcbWithdraw/employeeExport = authc,perms[qcbWithdraw:employeeExport]
				/rest/backadmin/qcbWithdraw/employeeImport = authc,perms[qcbWithdraw:employeeImport]
				/rest/backadmin/qcbWithdraw/employeeRevoke = authc,perms[qcbWithdraw:employeeRevoke]
				/rest/backadmin/qcbWithdraw/companyList = authc,perms[qcbWithdraw:companyList]
				/rest/backadmin/qcbWithdraw/companyEdit = authc,perms[qcbWithdraw:companyEdit]
				/rest/backadmin/qcbWithdraw/companyProcess = authc,perms[qcbWithdraw:companyProcess]
				/rest/backadmin/qcbWithdraw/companyExport = authc,perms[qcbWithdraw:companyExport]
				/rest/backadmin/qcbWithdraw/companyImport = authc,perms[qcbWithdraw:companyImport]
				/rest/backadmin/qcbWithdraw/companyRevoke = authc,perms[qcbWithdraw:companyRevoke]
				<!--导航信息 -->
                /rest/backadmin/menu/list = authc
                
				<!--文件、图片、多媒体资源 -->
                /rest/backadmin/resource/add = authc
                
				<!--地区省份列表列表 -->
                /rest/backadmin/area/all = authc 
                
				<!-- test cache -->
                /rest/backadmin/bank/test** = anon
                /rest/backadmin/bank/evict** = anon
                
                <!-- test token -->
                /rest/web/resource/add = token
<!--                 /rest/web/product/list = token -->
                /rest/web/user/** = token
                /rest/web/financial/** = token
                /rest/web/pay/** = token
                /rest/web/sms/sendCodeById = token
                /rest/web/info/** = token
                /rest/web/coupon/** = token
                
                <!-- 网页端REST接口-->
                /rest/web/** = anon
                
                <!-- 社保熊登录认证 -->
                /rest/shbxWeb/login/logout = shbxWebAuthc
                /rest/shbxWeb/sms/sendCodeForUser = shbxWebAuthc
                /rest/shbxWeb/insured/** = shbxWebAuthc
                /rest/shbxWeb/user/** = shbxWebAuthc
                 
                /rest/shbxWeb/** = anon
                 
                <!-- 企财宝微信公众号认证 -->
                /rest/qcbWechat/employee/login = anon
                /rest/qcbWechat/employee/** = qcbWechatAuthc
                /rest/qcbWechat/bankcard/** = qcbWechatAuthc
                /rest/qcbWechat/payroll/** = qcbWechatAuthc
                /rest/qcbWechat/pay/** = qcbWechatAuthc
                /rest/qcbWechat/employeeTransfer/** = qcbWechatAuthc
                /rest/qcbWechat/sms/sendCodeToCheck = qcbWechatAuthc
                /rest/qcbWechat/sms/sendCodeByMobile = qcbWechatAuthc
                <!-- 企财宝员工微信公众号接口 -->
                /rest/qcbWechat/** = anon
                
                <!-- 企财宝登录测试 -->
           		
				/rest/qcb/admin/login = anon
				/rest/qcb/admin/logout = anon
				/rest/qcb/admin/kaptchaImage = anon
				/rest/qcb/admin/register = anon
				/rest/qcb/admin/check = anon
				/rest/qcb/admin/rePwdcheck = anon
				/rest/qcb/admin/rePwd = anon
				/rest/qcb/admin/loginWechatToken = anon
				/rest/qcb/admin/loginWechatAuth = anon
				/rest/qcb/admin/loginWechatResult = anon
				/rest/qcb/sms/sendCode = anon
				/rest/qcb/area/list = anon
				
				/rest/qcb/** = qcbauthc
                
				<!--其他后台REST接口-->
                /rest/** = authc
                
				<!--其他css、js、html、jsp、jpg、png、mp4等文件资源 -->
                /** = anon
                
                
            	<!-- 登录页允许访问 
            	/rest/backadmin/operator/add = roles[管理员]
                /rest/backadmin/operator/login = anon
                /rest/backadmin/operator/authCode = anon
                /rest/backadmin/operator/add = anon
                /rest/backadmin/operator/logout = logout
            	/rest/operator/** = authc 
            	/backadmin/views/** = authc  -->
            	<!-- 静态资源允许访问 
                /app/** = anon
                /assets/** = anon
                
                anon:例子/admins/**=anon 没有参数，表示可以匿名使用。 
				authc:例如/admins/user/**=authc表示需要认证(登录)才能使用，没有参数 
				roles：例子/admins/user/**=roles[admin],参数可以写多个，多个时必须加上引号，并且参数之间用逗号分割，当有多个参数时，例如admins/user/**=roles["admin,guest"],每个参数通过才算通过，相当于hasAllRoles()方法。 
				perms：例子/admins/user/**=perms[user:add:*],参数可以写多个，多个时必须加上引号，并且参数之间用逗号分割，例如/admins/user/**=perms["user:add:*,user:modify:*"]，当有多个参数时必须每个参数都通过才通过，想当于isPermitedAll()方法。 
				rest：例子/admins/user/**=rest[user],根据请求的方法，相当于/admins/user/**=perms[user:method] ,其中method为post，get，delete等。 
				port：例子/admins/user/**=port[8081],当请求的url的端口不是8081是跳转到schemal://serverName:8081?queryString,其中schmal是协议http或https等，serverName是你访问的host,8081是url配置里port的端口，queryString是你访问的url里的？后面的参数。 
				authcBasic：例如/admins/user/**=authcBasic没有参数表示httpBasic认证 
				ssl:例子/admins/user/**=ssl没有参数，表示安全的url请求，协议为https 
				user:例如/admins/user/**=user没有参数表示必须存在用户，当登入操作时不做检查  
				logout:
                -->
            	
            </value>
        </property>
    </bean>

    <!-- 缓存管理器 使用Ehcache实现
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean>
    -->
     
	<bean id="shiroRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory"/>
    
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index="0" ref="shiroRedisTemplate"></constructor-arg>
        <!-- 缓存失效时间3天 -->
        <property name="defaultExpiration" value="259200"/>
    </bean>
    
    <bean id="shiroCacheManager" class="cn.zeppin.product.ntb.core.cache.ShiroRedisCacheManager">
         <property name="cacheManager" ref="redisCacheManager"/>
    </bean>
	 
    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"/>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
        <property name="sessionIdCookieEnabled" value="true" />
        <property name="sessionIdCookie.name" value="jsid"/>
        <!-- 全局会话超时时间（单位毫秒），默认30分钟 -->
        <property name="globalSessionTimeout" value="1800000" />
    </bean>
    

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
<!--         <property name="realms" ref="securityRealm" /> -->
        <!-- cacheManager,集合spring缓存工厂-->  
        <property name="cacheManager" ref="shiroCacheManager" /> 
        <property name="sessionManager" ref="sessionManager" />
        <property name="authenticator" ref="authenticator"></property>
        <property name="realms">
        	<list>
                <ref bean="securityRealm" />
                <ref bean="securityByQcbRealm"/>
            </list>
        </property>
    </bean>
    
    <!-- 配置使用自定义认证器，可以实现多Realm认证，并且可以指定特定Realm处理特定类型的验证 -->
    <bean id="authenticator" class="cn.zeppin.product.ntb.backadmin.security.CustomizedModularRealmAuthenticator">
    	<property name="authenticationStrategy">
    		<bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy" />
    	</property>
    </bean>
    
      <!-- 安全管理器  -->
    <bean id="securityRealm" class="cn.zeppin.product.ntb.backadmin.security.SecurityByNtbRealm">
        <constructor-arg index="0" ref="shiroCacheManager"></constructor-arg>
        <constructor-arg index="1" ref="credentialsMatcher"></constructor-arg>
    </bean> 
    
    <bean id="securityByQcbRealm" class="cn.zeppin.product.ntb.backadmin.security.SecurityByQcbRealm">
        <constructor-arg index="0" ref="shiroCacheManager"></constructor-arg>
        <constructor-arg index="1" ref="qcbCredentialsMatcher"></constructor-arg>
    </bean> 
    
    <bean id="credentialsMatcher" class="cn.zeppin.product.ntb.backadmin.security.RetryNumLimitCredentialsMatcher">  
        <constructor-arg ref="shiroCacheManager" />
        <property name="hashAlgorithmName" value="MD5" />  
        <property name="storedCredentialsHexEncoded" value="true" />  
        <property name="hashIterations" value="3" />  
	</bean>   
	
	<bean id="qcbCredentialsMatcher" class="cn.zeppin.product.ntb.backadmin.security.QcbAuthCredentialsMatcher">  
		<constructor-arg ref="shiroCacheManager" />
        <property name="hashAlgorithmName" value="MD5" />  
        <property name="storedCredentialsHexEncoded" value="true" />  
        <property name="hashIterations" value="3" />  
	</bean>   
	

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">  
        <property name="config">  
            <bean class="com.google.code.kaptcha.util.Config">  
                <constructor-arg>  
                    <props>  
                        <prop key="kaptcha.border">no</prop>  
                        <prop key="kaptcha.border.color">105,179,90</prop>  
                        <prop key="kaptcha.textproducer.font.color">25,25,112</prop>  
                        <prop key="kaptcha.image.width">300</prop>  
                        <prop key="kaptcha.textproducer.font.size">85</prop>  
                        <prop key="kaptcha.image.height">100</prop>  
                        <prop key="kaptcha.session.key">authCode</prop>  
                        <prop key="kaptcha.textproducer.char.length">5</prop>  
                        <prop key="kaptcha.textproducer.font.names">Century,Calibri,Arial,Courier</prop>   
                        <prop key="kaptcha.textproducer.char.string">ABCDEFGHJK23456789MNPQRSTUVWXYZ</prop>
                        <prop key="kaptcha.textproducer.char.space">3</prop>
                    </props>  
                </constructor-arg>  
            </bean>  
        </property>  
        
    </bean>  

</beans>