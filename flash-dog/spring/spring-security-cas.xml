<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <http entry-point-ref="casAuthenticationEntryPoint" auto-config="true" use-expressions="true" >

        <intercept-url pattern="/**"  />

        <custom-filter position="CAS_FILTER" ref="casAuthenticationFilter" />

    </http>

    <beans:bean id="saveUserAuthenticationSuccessHandler"
                class="com.skymobi.monitor.security.ThirdAuthenticationSuccessHandler">
        <beans:property name="userManager" ref="userManager"/>
    </beans:bean>

    <authentication-manager alias="authenticationManager">

        <authentication-provider ref="casAuthenticationProvider">

        </authentication-provider>
    </authentication-manager>


    <!--
    This section is used to configure CAS. The service is the
    actual redirect that will be triggered after the CAS login sequence.
    -->
    <beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">

        <beans:property name="service" value="${cas.callback}/j_spring_cas_security_check"/>
        <beans:property name="sendRenew" value="false"/>

    </beans:bean>
    <!-- authorities from CAS server  -->
    <beans:bean id="authenticationUserDetailsService"
                class="org.springframework.security.cas.userdetails.GrantedAuthorityFromAssertionAttributesUserDetailsService">
        <beans:constructor-arg>
            <beans:array>
                <beans:value>authorities</beans:value>
            </beans:array>
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean id="casAuthenticationProvider"
                class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <beans:property name="authenticationUserDetailsService" ref="authenticationUserDetailsService"/>
        <beans:property name="serviceProperties" ref="serviceProperties"/>
        <beans:property name="ticketValidator">
            <beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <beans:constructor-arg index="0" value="${cas.ticketUrl}"/>
            </beans:bean>
        </beans:property>
        <beans:property name="key" value="${cas.key}"/>
    </beans:bean>
    <!--
    The CAS filter handles the redirect from the CAS server and starts the ticket validation.
    -->
    <beans:bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationSuccessHandler" ref="saveUserAuthenticationSuccessHandler"/>
    </beans:bean>

    <!--
    The entryPoint intercepts all the CAS authentication requests.
    It redirects to the CAS loginUrl for the CAS login page.
    -->
    <beans:bean id="casAuthenticationEntryPoint"
                class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <beans:property name="loginUrl" value="${cas.loginUrl}"/>
        <beans:property name="serviceProperties" ref="serviceProperties"/>

    </beans:bean>
</beans:beans>
